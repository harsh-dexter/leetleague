[
  {
    "difficulty": "Medium",
    "title": "Time Based Key-Value Store",
    "frequency": "100.0",
    "acceptanceRate": "0.49366517298520696",
    "link": "https://leetcode.com/problems/time-based-key-value-store",
    "topics": [
      "Hash Table",
      "String",
      "Binary Search",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "91.4",
    "acceptanceRate": "0.5499185337366445",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "70.6",
    "acceptanceRate": "0.6232020829989401",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Palindrome",
    "frequency": "70.6",
    "acceptanceRate": "0.5096361518985055",
    "link": "https://leetcode.com/problems/valid-palindrome",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Roman to Integer",
    "frequency": "62.0",
    "acceptanceRate": "0.6486643969866376",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Edit Distance",
    "frequency": "62.0",
    "acceptanceRate": "0.5878980673987401",
    "link": "https://leetcode.com/problems/edit-distance",
    "topics": [
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "K Closest Points to Origin",
    "frequency": "62.0",
    "acceptanceRate": "0.6793976578069371",
    "link": "https://leetcode.com/problems/k-closest-points-to-origin",
    "topics": [
      "Array",
      "Math",
      "Divide and Conquer",
      "Geometry",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ]
  }
]
