[
  {
    "difficulty": "Medium",
    "title": "Rank Teams by Votes",
    "frequency": "100.0",
    "acceptanceRate": "0.5940446839336095",
    "link": "https://leetcode.com/problems/rank-teams-by-votes",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Snake Game",
    "frequency": "88.4",
    "acceptanceRate": "0.3968485567576451",
    "link": "https://leetcode.com/problems/design-snake-game",
    "topics": [
      "Array",
      "Hash Table",
      "Design",
      "Queue",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Stock Price Fluctuation ",
    "frequency": "86.6",
    "acceptanceRate": "0.4816387154783381",
    "link": "https://leetcode.com/problems/stock-price-fluctuation",
    "topics": [
      "Hash Table",
      "Design",
      "Heap (Priority Queue)",
      "Data Stream",
      "Ordered Set"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "All O`one Data Structure",
    "frequency": "77.2",
    "acceptanceRate": "0.44134779761452186",
    "link": "https://leetcode.com/problems/all-oone-data-structure",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "High-Access Employees",
    "frequency": "71.2",
    "acceptanceRate": "0.46126369648115073",
    "link": "https://leetcode.com/problems/high-access-employees",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Logger Rate Limiter",
    "frequency": "71.2",
    "acceptanceRate": "0.766103057053701",
    "link": "https://leetcode.com/problems/logger-rate-limiter",
    "topics": [
      "Hash Table",
      "Design",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "61.9",
    "acceptanceRate": "0.4939526848741133",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Good Subarray Sum",
    "frequency": "58.7",
    "acceptanceRate": "0.20281964321019574",
    "link": "https://leetcode.com/problems/maximum-good-subarray-sum",
    "topics": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Cost to Convert String I",
    "frequency": "58.7",
    "acceptanceRate": "0.5755714079298737",
    "link": "https://leetcode.com/problems/minimum-cost-to-convert-string-i",
    "topics": [
      "Array",
      "String",
      "Graph",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Cost to Convert String II",
    "frequency": "58.7",
    "acceptanceRate": "0.25539014373716634",
    "link": "https://leetcode.com/problems/minimum-cost-to-convert-string-ii",
    "topics": [
      "Array",
      "String",
      "Dynamic Programming",
      "Graph",
      "Trie",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Square Area by Removing Fences From a Field",
    "frequency": "58.7",
    "acceptanceRate": "0.2410700053616195",
    "link": "https://leetcode.com/problems/maximum-square-area-by-removing-fences-from-a-field",
    "topics": [
      "Array",
      "Hash Table",
      "Enumeration"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Meeting Rooms II",
    "frequency": "58.7",
    "acceptanceRate": "0.5214164447683243",
    "link": "https://leetcode.com/problems/meeting-rooms-ii",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Maximum Area of Longest Diagonal Rectangle",
    "frequency": "58.7",
    "acceptanceRate": "0.3654547482773711",
    "link": "https://leetcode.com/problems/maximum-area-of-longest-diagonal-rectangle",
    "topics": [
      "Array"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Number of Possible Sets of Closing Branches",
    "frequency": "58.7",
    "acceptanceRate": "0.48448935008192245",
    "link": "https://leetcode.com/problems/number-of-possible-sets-of-closing-branches",
    "topics": [
      "Bit Manipulation",
      "Graph",
      "Heap (Priority Queue)",
      "Enumeration",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Verbal Arithmetic Puzzle",
    "frequency": "58.7",
    "acceptanceRate": "0.3477800583342335",
    "link": "https://leetcode.com/problems/verbal-arithmetic-puzzle",
    "topics": [
      "Array",
      "Math",
      "String",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Cherry Pickup",
    "frequency": "58.7",
    "acceptanceRate": "0.3786948581341589",
    "link": "https://leetcode.com/problems/cherry-pickup",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Smallest Missing Non-negative Integer After Operations",
    "frequency": "58.7",
    "acceptanceRate": "0.3987738925814309",
    "link": "https://leetcode.com/problems/smallest-missing-non-negative-integer-after-operations",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Make Lexicographically Smallest Array by Swapping Elements",
    "frequency": "58.7",
    "acceptanceRate": "0.6026879026047842",
    "link": "https://leetcode.com/problems/make-lexicographically-smallest-array-by-swapping-elements",
    "topics": [
      "Array",
      "Union Find",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Time to Visit a Cell In a Grid",
    "frequency": "58.7",
    "acceptanceRate": "0.568054168958796",
    "link": "https://leetcode.com/problems/minimum-time-to-visit-a-cell-in-a-grid",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Matrix",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Find the Width of Columns of a Grid",
    "frequency": "58.7",
    "acceptanceRate": "0.693232244841104",
    "link": "https://leetcode.com/problems/find-the-width-of-columns-of-a-grid",
    "topics": [
      "Array",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "56.8",
    "acceptanceRate": "0.7092883082997726",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Text Justification",
    "frequency": "56.8",
    "acceptanceRate": "0.48149935664104093",
    "link": "https://leetcode.com/problems/text-justification",
    "topics": [
      "Array",
      "String",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design File System",
    "frequency": "56.8",
    "acceptanceRate": "0.6413755041392486",
    "link": "https://leetcode.com/problems/design-file-system",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest String Chain",
    "frequency": "56.8",
    "acceptanceRate": "0.6201512673699018",
    "link": "https://leetcode.com/problems/longest-string-chain",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Increasing Subsequence",
    "frequency": "54.6",
    "acceptanceRate": "0.5780836795005291",
    "link": "https://leetcode.com/problems/longest-increasing-subsequence",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Lowest Common Ancestor of a Binary Tree",
    "frequency": "54.6",
    "acceptanceRate": "0.6675501387816432",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Majority Element II",
    "frequency": "52.2",
    "acceptanceRate": "0.5438036123865881",
    "link": "https://leetcode.com/problems/majority-element-ii",
    "topics": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Koko Eating Bananas",
    "frequency": "49.5",
    "acceptanceRate": "0.49067280156684456",
    "link": "https://leetcode.com/problems/koko-eating-bananas",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "49.5",
    "acceptanceRate": "0.5525964317904726",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Can Place Flowers",
    "frequency": "46.2",
    "acceptanceRate": "0.2889923936767658",
    "link": "https://leetcode.com/problems/can-place-flowers",
    "topics": [
      "Array",
      "Greedy"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "String Transformation",
    "frequency": "46.2",
    "acceptanceRate": "0.2510979075174374",
    "link": "https://leetcode.com/problems/string-transformation",
    "topics": [
      "Math",
      "String",
      "Dynamic Programming",
      "String Matching"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Online Election",
    "frequency": "46.2",
    "acceptanceRate": "0.5184691560254644",
    "link": "https://leetcode.com/problems/online-election",
    "topics": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "The Time When the Network Becomes Idle",
    "frequency": "46.2",
    "acceptanceRate": "0.5372318622762673",
    "link": "https://leetcode.com/problems/the-time-when-the-network-becomes-idle",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Graph"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Top K Frequent Elements",
    "frequency": "46.2",
    "acceptanceRate": "0.6456596310666731",
    "link": "https://leetcode.com/problems/top-k-frequent-elements",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Word Search",
    "frequency": "42.2",
    "acceptanceRate": "0.4526695178423744",
    "link": "https://leetcode.com/problems/word-search",
    "topics": [
      "Array",
      "String",
      "Backtracking",
      "Depth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Consecutive Sequence",
    "frequency": "42.2",
    "acceptanceRate": "0.47040822700681467",
    "link": "https://leetcode.com/problems/longest-consecutive-sequence",
    "topics": [
      "Array",
      "Hash Table",
      "Union Find"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Russian Doll Envelopes",
    "frequency": "42.2",
    "acceptanceRate": "0.3732991914997274",
    "link": "https://leetcode.com/problems/russian-doll-envelopes",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "42.2",
    "acceptanceRate": "0.5577699935138669",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "42.2",
    "acceptanceRate": "0.36936175423195367",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Count Vowels Permutation",
    "frequency": "37.1",
    "acceptanceRate": "0.61484920403603",
    "link": "https://leetcode.com/problems/count-vowels-permutation",
    "topics": [
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Integer to Roman",
    "frequency": "37.1",
    "acceptanceRate": "0.6861927118001762",
    "link": "https://leetcode.com/problems/integer-to-roman",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Nth Highest Salary",
    "frequency": "37.1",
    "acceptanceRate": "0.38039031689086605",
    "link": "https://leetcode.com/problems/nth-highest-salary",
    "topics": [
      "Database"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Pairs of Songs With Total Durations Divisible by 60",
    "frequency": "37.1",
    "acceptanceRate": "0.5324763404751333",
    "link": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60",
    "topics": [
      "Array",
      "Hash Table",
      "Counting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Merge Sorted Array",
    "frequency": "37.1",
    "acceptanceRate": "0.5291952521829845",
    "link": "https://leetcode.com/problems/merge-sorted-array",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Crawler Log Folder",
    "frequency": "37.1",
    "acceptanceRate": "0.7160418239109896",
    "link": "https://leetcode.com/problems/crawler-log-folder",
    "topics": [
      "Array",
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game II",
    "frequency": "37.1",
    "acceptanceRate": "0.415032966531176",
    "link": "https://leetcode.com/problems/jump-game-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Boats to Save People",
    "frequency": "37.1",
    "acceptanceRate": "0.6030059688557481",
    "link": "https://leetcode.com/problems/boats-to-save-people",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Tic-Tac-Toe",
    "frequency": "37.1",
    "acceptanceRate": "0.5860148086637603",
    "link": "https://leetcode.com/problems/design-tic-tac-toe",
    "topics": [
      "Array",
      "Hash Table",
      "Design",
      "Matrix",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Number of Occurrences of a Substring",
    "frequency": "37.1",
    "acceptanceRate": "0.5342731408965465",
    "link": "https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search Suggestions System",
    "frequency": "30.0",
    "acceptanceRate": "0.6505032264917545",
    "link": "https://leetcode.com/problems/search-suggestions-system",
    "topics": [
      "Array",
      "String",
      "Binary Search",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Kth Largest Element in a Stream",
    "frequency": "30.0",
    "acceptanceRate": "0.5985304879240446",
    "link": "https://leetcode.com/problems/kth-largest-element-in-a-stream",
    "topics": [
      "Tree",
      "Design",
      "Binary Search Tree",
      "Heap (Priority Queue)",
      "Binary Tree",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design a Food Rating System",
    "frequency": "30.0",
    "acceptanceRate": "0.44917837165941576",
    "link": "https://leetcode.com/problems/design-a-food-rating-system",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Design",
      "Heap (Priority Queue)",
      "Ordered Set"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Subarray",
    "frequency": "30.0",
    "acceptanceRate": "0.5209978589630087",
    "link": "https://leetcode.com/problems/maximum-subarray",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Lowest Common Ancestor of a Binary Tree III",
    "frequency": "30.0",
    "acceptanceRate": "0.8246674945153157",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",
    "topics": [
      "Hash Table",
      "Two Pointers",
      "Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find First and Last Position of Element in Sorted Array",
    "frequency": "30.0",
    "acceptanceRate": "0.468287686874522",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Find Words That Can Be Formed by Characters",
    "frequency": "30.0",
    "acceptanceRate": "0.7106771491390691",
    "link": "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Count Vowel Strings in Ranges",
    "frequency": "30.0",
    "acceptanceRate": "0.6786629908928055",
    "link": "https://leetcode.com/problems/count-vowel-strings-in-ranges",
    "topics": [
      "Array",
      "String",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "30.0",
    "acceptanceRate": "0.5778284346286925",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Add and Search Words Data Structure",
    "frequency": "30.0",
    "acceptanceRate": "0.47066560985497075",
    "link": "https://leetcode.com/problems/design-add-and-search-words-data-structure",
    "topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Assign Cookies",
    "frequency": "30.0",
    "acceptanceRate": "0.5387634784437695",
    "link": "https://leetcode.com/problems/assign-cookies",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "30.0",
    "acceptanceRate": "0.37070969372685736",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "30.0",
    "acceptanceRate": "0.6510195479297859",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Hit Counter",
    "frequency": "30.0",
    "acceptanceRate": "0.6920824458148753",
    "link": "https://leetcode.com/problems/design-hit-counter",
    "topics": [
      "Array",
      "Binary Search",
      "Design",
      "Queue",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Unique Paths II",
    "frequency": "30.0",
    "acceptanceRate": "0.43154324141961387",
    "link": "https://leetcode.com/problems/unique-paths-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Path Quality of a Graph",
    "frequency": "30.0",
    "acceptanceRate": "0.596989256918232",
    "link": "https://leetcode.com/problems/maximum-path-quality-of-a-graph",
    "topics": [
      "Array",
      "Backtracking",
      "Graph"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Tallest Billboard",
    "frequency": "30.0",
    "acceptanceRate": "0.5187288448273096",
    "link": "https://leetcode.com/problems/tallest-billboard",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Add Two Integers",
    "frequency": "30.0",
    "acceptanceRate": "0.8812230793897231",
    "link": "https://leetcode.com/problems/add-two-integers",
    "topics": [
      "Math"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find K Closest Elements",
    "frequency": "30.0",
    "acceptanceRate": "0.486686656754684",
    "link": "https://leetcode.com/problems/find-k-closest-elements",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Number of Digit One",
    "frequency": "30.0",
    "acceptanceRate": "0.3599159436598703",
    "link": "https://leetcode.com/problems/number-of-digit-one",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Recursion"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Anagram",
    "frequency": "30.0",
    "acceptanceRate": "0.6666091503030548",
    "link": "https://leetcode.com/problems/valid-anagram",
    "topics": [
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Single Element in a Sorted Array",
    "frequency": "30.0",
    "acceptanceRate": "0.5920694527750138",
    "link": "https://leetcode.com/problems/single-element-in-a-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Coin Change",
    "frequency": "30.0",
    "acceptanceRate": "0.4649545396006711",
    "link": "https://leetcode.com/problems/coin-change",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Last Day Where You Can Still Cross",
    "frequency": "30.0",
    "acceptanceRate": "0.6231939687413881",
    "link": "https://leetcode.com/problems/last-day-where-you-can-still-cross",
    "topics": [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  }
]
