[
  {
    "difficulty": "Medium",
    "title": "Meeting Rooms II",
    "frequency": "100.0",
    "acceptanceRate": "0.5214182529017943",
    "link": "https://leetcode.com/problems/meeting-rooms-ii",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "91.4",
    "acceptanceRate": "0.709288828623018",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Distinct Islands",
    "frequency": "91.4",
    "acceptanceRate": "0.6225544075621016",
    "link": "https://leetcode.com/problems/number-of-distinct-islands",
    "topics": [
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Hash Function"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Increasing Subsequence",
    "frequency": "91.4",
    "acceptanceRate": "0.5780838894511294",
    "link": "https://leetcode.com/problems/longest-increasing-subsequence",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find Median from Data Stream",
    "frequency": "91.4",
    "acceptanceRate": "0.5327808081897567",
    "link": "https://leetcode.com/problems/find-median-from-data-stream",
    "topics": [
      "Two Pointers",
      "Design",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find First and Last Position of Element in Sorted Array",
    "frequency": "91.4",
    "acceptanceRate": "0.46828845687354886",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Decode String",
    "frequency": "79.4",
    "acceptanceRate": "0.6115259200424883",
    "link": "https://leetcode.com/problems/decode-string",
    "topics": [
      "String",
      "Stack",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Koko Eating Bananas",
    "frequency": "79.4",
    "acceptanceRate": "0.49067140967725015",
    "link": "https://leetcode.com/problems/koko-eating-bananas",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "79.4",
    "acceptanceRate": "0.4521475035659106",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Browser History",
    "frequency": "79.4",
    "acceptanceRate": "0.7774686768883133",
    "link": "https://leetcode.com/problems/design-browser-history",
    "topics": [
      "Array",
      "Linked List",
      "Stack",
      "Design",
      "Doubly-Linked List",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "79.4",
    "acceptanceRate": "0.6510205336424274",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Height Trees",
    "frequency": "79.4",
    "acceptanceRate": "0.420144691524227",
    "link": "https://leetcode.com/problems/minimum-height-trees",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find All Anagrams in a String",
    "frequency": "79.4",
    "acceptanceRate": "0.5220068246888969",
    "link": "https://leetcode.com/problems/find-all-anagrams-in-a-string",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "79.4",
    "acceptanceRate": "0.4232286113783459",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ]
  }
]
