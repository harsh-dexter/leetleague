[
  {
    "difficulty": "Hard",
    "title": "Reconstruct Itinerary",
    "frequency": "100.0",
    "acceptanceRate": "0.4360564496598489",
    "link": "https://leetcode.com/problems/reconstruct-itinerary",
    "topics": [
      "Depth-First Search",
      "Graph",
      "Eulerian Circuit"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Bus Routes",
    "frequency": "97.0",
    "acceptanceRate": "0.4695297092963377",
    "link": "https://leetcode.com/problems/bus-routes",
    "topics": [
      "Array",
      "Hash Table",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Optimal Account Balancing",
    "frequency": "92.4",
    "acceptanceRate": "0.4993810266893702",
    "link": "https://leetcode.com/problems/optimal-account-balancing",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Expression Add Operators",
    "frequency": "86.4",
    "acceptanceRate": "0.4167625219870472",
    "link": "https://leetcode.com/problems/expression-add-operators",
    "topics": [
      "Math",
      "String",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Count Subarrays With Score Less Than K",
    "frequency": "75.5",
    "acceptanceRate": "0.624292227810353",
    "link": "https://leetcode.com/problems/count-subarrays-with-score-less-than-k",
    "topics": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Target Sum",
    "frequency": "69.8",
    "acceptanceRate": "0.5076656697088596",
    "link": "https://leetcode.com/problems/target-sum",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Meeting Rooms III",
    "frequency": "61.9",
    "acceptanceRate": "0.4393472442856221",
    "link": "https://leetcode.com/problems/meeting-rooms-iii",
    "topics": [
      "Array",
      "Hash Table",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Coin Change",
    "frequency": "61.9",
    "acceptanceRate": "0.4649547506448627",
    "link": "https://leetcode.com/problems/coin-change",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Design Search Autocomplete System",
    "frequency": "56.3",
    "acceptanceRate": "0.4940635941634056",
    "link": "https://leetcode.com/problems/design-search-autocomplete-system",
    "topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Shortest Path in a Grid with Obstacles Elimination",
    "frequency": "56.3",
    "acceptanceRate": "0.4560618572179266",
    "link": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Split Array Largest Sum",
    "frequency": "56.3",
    "acceptanceRate": "0.580995560819648",
    "link": "https://leetcode.com/problems/split-array-largest-sum",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Accounts Merge",
    "frequency": "48.3",
    "acceptanceRate": "0.5957996827596059",
    "link": "https://leetcode.com/problems/accounts-merge",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum",
    "frequency": "48.3",
    "acceptanceRate": "0.7467470164230636",
    "link": "https://leetcode.com/problems/combination-sum",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find Minimum Time to Finish All Jobs",
    "frequency": "48.3",
    "acceptanceRate": "0.43518588531821045",
    "link": "https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ]
  }
]
