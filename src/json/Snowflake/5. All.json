[
  {
    "difficulty": "Hard",
    "title": "Design In-Memory File System",
    "frequency": "100.0",
    "acceptanceRate": "0.4816948941663167",
    "link": "https://leetcode.com/problems/design-in-memory-file-system",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie",
      "Sorting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Happy Number",
    "frequency": "93.7",
    "acceptanceRate": "0.580726470983853",
    "link": "https://leetcode.com/problems/happy-number",
    "topics": [
      "Hash Table",
      "Math",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Window Substring",
    "frequency": "91.6",
    "acceptanceRate": "0.45350694134753466",
    "link": "https://leetcode.com/problems/minimum-window-substring",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule II",
    "frequency": "91.6",
    "acceptanceRate": "0.5342350029047974",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find All Anagrams in a String",
    "frequency": "90.4",
    "acceptanceRate": "0.5220071349201708",
    "link": "https://leetcode.com/problems/find-all-anagrams-in-a-string",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Word Search II",
    "frequency": "90.4",
    "acceptanceRate": "0.37326297091967364",
    "link": "https://leetcode.com/problems/word-search-ii",
    "topics": [
      "Array",
      "String",
      "Backtracking",
      "Trie",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "String Transformation",
    "frequency": "89.2",
    "acceptanceRate": "0.2510979075174374",
    "link": "https://leetcode.com/problems/string-transformation",
    "topics": [
      "Math",
      "String",
      "Dynamic Programming",
      "String Matching"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Step-By-Step Directions From a Binary Tree Node to Another",
    "frequency": "83.4",
    "acceptanceRate": "0.5630838477366256",
    "link": "https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another",
    "topics": [
      "String",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Calculate Amount Paid in Taxes",
    "frequency": "83.4",
    "acceptanceRate": "0.6755645366418902",
    "link": "https://leetcode.com/problems/calculate-amount-paid-in-taxes",
    "topics": [
      "Array",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Number of Upgradable Servers",
    "frequency": "81.8",
    "acceptanceRate": "0.4095518482172064",
    "link": "https://leetcode.com/problems/maximum-number-of-upgradable-servers",
    "topics": [
      "Array",
      "Math",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "79.9",
    "acceptanceRate": "0.6510199452828925",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Profit in Job Scheduling",
    "frequency": "79.9",
    "acceptanceRate": "0.5441710868850566",
    "link": "https://leetcode.com/problems/maximum-profit-in-job-scheduling",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Painting the Walls",
    "frequency": "79.9",
    "acceptanceRate": "0.4851847868464569",
    "link": "https://leetcode.com/problems/painting-the-walls",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Array Length After Pair Removals",
    "frequency": "78.0",
    "acceptanceRate": "0.25214329319543116",
    "link": "https://leetcode.com/problems/minimum-array-length-after-pair-removals",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Counting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Number of Ways to Form a Target String Given a Dictionary",
    "frequency": "78.0",
    "acceptanceRate": "0.570646521775689",
    "link": "https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary",
    "topics": [
      "Array",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find the Maximum Length of a Good Subsequence I",
    "frequency": "78.0",
    "acceptanceRate": "0.31566678197049225",
    "link": "https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-i",
    "topics": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Parallel Courses III",
    "frequency": "78.0",
    "acceptanceRate": "0.6674963944974485",
    "link": "https://leetcode.com/problems/parallel-courses-iii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find the Maximum Length of a Good Subsequence II",
    "frequency": "75.8",
    "acceptanceRate": "0.23966413899299804",
    "link": "https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-ii",
    "topics": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Basic Calculator",
    "frequency": "73.4",
    "acceptanceRate": "0.45589613464767326",
    "link": "https://leetcode.com/problems/basic-calculator",
    "topics": [
      "Math",
      "String",
      "Stack",
      "Recursion"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Regular Expression Matching",
    "frequency": "67.7",
    "acceptanceRate": "0.2928019763803098",
    "link": "https://leetcode.com/problems/regular-expression-matching",
    "topics": [
      "String",
      "Dynamic Programming",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Throne Inheritance",
    "frequency": "67.7",
    "acceptanceRate": "0.6509835499827448",
    "link": "https://leetcode.com/problems/throne-inheritance",
    "topics": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Design"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Count Vowel Substrings of a String",
    "frequency": "67.7",
    "acceptanceRate": "0.7148136172571481",
    "link": "https://leetcode.com/problems/count-vowel-substrings-of-a-string",
    "topics": [
      "Hash Table",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Boundary of Binary Tree",
    "frequency": "67.7",
    "acceptanceRate": "0.4715859570960508",
    "link": "https://leetcode.com/problems/boundary-of-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Hit Counter",
    "frequency": "64.2",
    "acceptanceRate": "0.6920824458148753",
    "link": "https://leetcode.com/problems/design-hit-counter",
    "topics": [
      "Array",
      "Binary Search",
      "Design",
      "Queue",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Reverse Nodes in k-Group",
    "frequency": "64.2",
    "acceptanceRate": "0.6304369033162786",
    "link": "https://leetcode.com/problems/reverse-nodes-in-k-group",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Time Based Key-Value Store",
    "frequency": "64.2",
    "acceptanceRate": "0.49366304491851065",
    "link": "https://leetcode.com/problems/time-based-key-value-store",
    "topics": [
      "Hash Table",
      "String",
      "Binary Search",
      "Design"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "64.2",
    "acceptanceRate": "0.5577700301156799",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Populating Next Right Pointers in Each Node II",
    "frequency": "64.2",
    "acceptanceRate": "0.5556623485472839",
    "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",
    "topics": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Merge Two Sorted Lists",
    "frequency": "60.1",
    "acceptanceRate": "0.6684090455626255",
    "link": "https://leetcode.com/problems/merge-two-sorted-lists",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Max Area of Island",
    "frequency": "60.1",
    "acceptanceRate": "0.7316419811417654",
    "link": "https://leetcode.com/problems/max-area-of-island",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Populating Next Right Pointers in Each Node",
    "frequency": "60.1",
    "acceptanceRate": "0.654415150988742",
    "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
    "topics": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Copy List with Random Pointer",
    "frequency": "60.1",
    "acceptanceRate": "0.6053673680169267",
    "link": "https://leetcode.com/problems/copy-list-with-random-pointer",
    "topics": [
      "Hash Table",
      "Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Encode and Decode Strings",
    "frequency": "60.1",
    "acceptanceRate": "0.4969907553404775",
    "link": "https://leetcode.com/problems/encode-and-decode-strings",
    "topics": [
      "Array",
      "String",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Task Scheduler",
    "frequency": "60.1",
    "acceptanceRate": "0.6153931254639827",
    "link": "https://leetcode.com/problems/task-scheduler",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule",
    "frequency": "60.1",
    "acceptanceRate": "0.49234407208177816",
    "link": "https://leetcode.com/problems/course-schedule",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Design HashMap",
    "frequency": "60.1",
    "acceptanceRate": "0.658939347368503",
    "link": "https://leetcode.com/problems/design-hashmap",
    "topics": [
      "Array",
      "Hash Table",
      "Linked List",
      "Design",
      "Hash Function"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Sliding Window Median",
    "frequency": "55.0",
    "acceptanceRate": "0.38691979014997274",
    "link": "https://leetcode.com/problems/sliding-window-median",
    "topics": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "55.0",
    "acceptanceRate": "0.45214669089787124",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "55.0",
    "acceptanceRate": "0.5677423948386318",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Min Stack",
    "frequency": "55.0",
    "acceptanceRate": "0.5644515082787578",
    "link": "https://leetcode.com/problems/min-stack",
    "topics": [
      "Stack",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Basic Calculator II",
    "frequency": "55.0",
    "acceptanceRate": "0.4581138691872612",
    "link": "https://leetcode.com/problems/basic-calculator-ii",
    "topics": [
      "Math",
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Swap Nodes in Pairs",
    "frequency": "55.0",
    "acceptanceRate": "0.6720136828647639",
    "link": "https://leetcode.com/problems/swap-nodes-in-pairs",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Integer to English Words",
    "frequency": "55.0",
    "acceptanceRate": "0.34354789501950295",
    "link": "https://leetcode.com/problems/integer-to-english-words",
    "topics": [
      "Math",
      "String",
      "Recursion"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Patching Array",
    "frequency": "55.0",
    "acceptanceRate": "0.5350511688984009",
    "link": "https://leetcode.com/problems/patching-array",
    "topics": [
      "Array",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Graph Valid Tree",
    "frequency": "55.0",
    "acceptanceRate": "0.4933540013608157",
    "link": "https://leetcode.com/problems/graph-valid-tree",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Count Subarrays With Fixed Bounds",
    "frequency": "48.6",
    "acceptanceRate": "0.6940834976032579",
    "link": "https://leetcode.com/problems/count-subarrays-with-fixed-bounds",
    "topics": [
      "Array",
      "Queue",
      "Sliding Window",
      "Monotonic Queue"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Random Pick with Weight",
    "frequency": "48.6",
    "acceptanceRate": "0.48278448068418184",
    "link": "https://leetcode.com/problems/random-pick-with-weight",
    "topics": [
      "Array",
      "Math",
      "Binary Search",
      "Prefix Sum",
      "Randomized"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Implement Trie (Prefix Tree)",
    "frequency": "48.6",
    "acceptanceRate": "0.6793479343948664",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Univalue Path",
    "frequency": "48.6",
    "acceptanceRate": "0.4262890083651968",
    "link": "https://leetcode.com/problems/longest-univalue-path",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximize Distance to Closest Person",
    "frequency": "48.6",
    "acceptanceRate": "0.48987135914500046",
    "link": "https://leetcode.com/problems/maximize-distance-to-closest-person",
    "topics": [
      "Array"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "N-Queens II",
    "frequency": "48.6",
    "acceptanceRate": "0.7672955295381376",
    "link": "https://leetcode.com/problems/n-queens-ii",
    "topics": [
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "48.6",
    "acceptanceRate": "0.49395246407342397",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Profit From Trading Stocks",
    "frequency": "48.6",
    "acceptanceRate": "0.46591262841133135",
    "link": "https://leetcode.com/problems/maximum-profit-from-trading-stocks",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find Median from Data Stream",
    "frequency": "48.6",
    "acceptanceRate": "0.5327809111719406",
    "link": "https://leetcode.com/problems/find-median-from-data-stream",
    "topics": [
      "Two Pointers",
      "Design",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Remove Sub-Folders from the Filesystem",
    "frequency": "48.6",
    "acceptanceRate": "0.7574624821995838",
    "link": "https://leetcode.com/problems/remove-sub-folders-from-the-filesystem",
    "topics": [
      "Array",
      "String",
      "Depth-First Search",
      "Trie"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "48.6",
    "acceptanceRate": "0.5499189489424546",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Operations to Make Numbers Non-positive",
    "frequency": "48.6",
    "acceptanceRate": "0.4220088242927589",
    "link": "https://leetcode.com/problems/minimum-operations-to-make-numbers-non-positive",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "48.6",
    "acceptanceRate": "0.5778283257455421",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Cheapest Flights Within K Stops",
    "frequency": "48.6",
    "acceptanceRate": "0.4039901581477084",
    "link": "https://leetcode.com/problems/cheapest-flights-within-k-stops",
    "topics": [
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Remove K Digits",
    "frequency": "48.6",
    "acceptanceRate": "0.3494044611317414",
    "link": "https://leetcode.com/problems/remove-k-digits",
    "topics": [
      "String",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Count Nodes Equal to Average of Subtree",
    "frequency": "48.6",
    "acceptanceRate": "0.8641728235300019",
    "link": "https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Walls and Gates",
    "frequency": "39.6",
    "acceptanceRate": "0.6296797577537163",
    "link": "https://leetcode.com/problems/walls-and-gates",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "39.6",
    "acceptanceRate": "0.5525962294861477",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Simplify Path",
    "frequency": "39.6",
    "acceptanceRate": "0.4785443730878952",
    "link": "https://leetcode.com/problems/simplify-path",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Parallel Courses",
    "frequency": "39.6",
    "acceptanceRate": "0.6182187643703161",
    "link": "https://leetcode.com/problems/parallel-courses",
    "topics": [
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "N-Queens",
    "frequency": "39.6",
    "acceptanceRate": "0.728171156310315",
    "link": "https://leetcode.com/problems/n-queens",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Single Element in a Sorted Array",
    "frequency": "39.6",
    "acceptanceRate": "0.5920699695159606",
    "link": "https://leetcode.com/problems/single-element-in-a-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Roman to Integer",
    "frequency": "39.6",
    "acceptanceRate": "0.6486630367350482",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Top K Frequent Elements",
    "frequency": "39.6",
    "acceptanceRate": "0.6456599781208435",
    "link": "https://leetcode.com/problems/top-k-frequent-elements",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Number of Events That Can Be Attended",
    "frequency": "39.6",
    "acceptanceRate": "0.32921981825520097",
    "link": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended",
    "topics": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Path With Minimum Effort",
    "frequency": "39.6",
    "acceptanceRate": "0.6141884181196978",
    "link": "https://leetcode.com/problems/path-with-minimum-effort",
    "topics": [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Add and Search Words Data Structure",
    "frequency": "39.6",
    "acceptanceRate": "0.4706662503963039",
    "link": "https://leetcode.com/problems/design-add-and-search-words-data-structure",
    "topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Making A Large Island",
    "frequency": "39.6",
    "acceptanceRate": "0.5489046988177128",
    "link": "https://leetcode.com/problems/making-a-large-island",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Non-overlapping Intervals",
    "frequency": "39.6",
    "acceptanceRate": "0.5550284035532288",
    "link": "https://leetcode.com/problems/non-overlapping-intervals",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Number of Removable Characters",
    "frequency": "39.6",
    "acceptanceRate": "0.45759028289243325",
    "link": "https://leetcode.com/problems/maximum-number-of-removable-characters",
    "topics": [
      "Array",
      "Two Pointers",
      "String",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Word Abbreviation",
    "frequency": "39.6",
    "acceptanceRate": "0.3685158269018032",
    "link": "https://leetcode.com/problems/valid-word-abbreviation",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Snapshot Array",
    "frequency": "39.6",
    "acceptanceRate": "0.36665375389245647",
    "link": "https://leetcode.com/problems/snapshot-array",
    "topics": [
      "Array",
      "Hash Table",
      "Binary Search",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Most Profitable Path in a Tree",
    "frequency": "39.6",
    "acceptanceRate": "0.6759769941567256",
    "link": "https://leetcode.com/problems/most-profitable-path-in-a-tree",
    "topics": [
      "Array",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "39.6",
    "acceptanceRate": "0.3693616814020288",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "frequency": "39.6",
    "acceptanceRate": "0.668377617598449",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Word Break",
    "frequency": "39.6",
    "acceptanceRate": "0.48273780206490746",
    "link": "https://leetcode.com/problems/word-break",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Leaf-Similar Trees",
    "frequency": "39.6",
    "acceptanceRate": "0.7010504082999663",
    "link": "https://leetcode.com/problems/leaf-similar-trees",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Remove Invalid Parentheses",
    "frequency": "39.6",
    "acceptanceRate": "0.4923157435133604",
    "link": "https://leetcode.com/problems/remove-invalid-parentheses",
    "topics": [
      "String",
      "Backtracking",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Evaluate Division",
    "frequency": "39.6",
    "acceptanceRate": "0.6314706608509588",
    "link": "https://leetcode.com/problems/evaluate-division",
    "topics": [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Range Sum Query 2D - Immutable",
    "frequency": "39.6",
    "acceptanceRate": "0.5652765632997782",
    "link": "https://leetcode.com/problems/range-sum-query-2d-immutable",
    "topics": [
      "Array",
      "Design",
      "Matrix",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Meeting Rooms II",
    "frequency": "39.6",
    "acceptanceRate": "0.5214173911925731",
    "link": "https://leetcode.com/problems/meeting-rooms-ii",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Cherry Pickup",
    "frequency": "39.6",
    "acceptanceRate": "0.3786948581341589",
    "link": "https://leetcode.com/problems/cherry-pickup",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "39.6",
    "acceptanceRate": "0.6232001096557939",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Swapping Nodes in a Linked List",
    "frequency": "39.6",
    "acceptanceRate": "0.6846771850721773",
    "link": "https://leetcode.com/problems/swapping-nodes-in-a-linked-list",
    "topics": [
      "Linked List",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Reverse Only Letters",
    "frequency": "39.6",
    "acceptanceRate": "0.6683340514041327",
    "link": "https://leetcode.com/problems/reverse-only-letters",
    "topics": [
      "Two Pointers",
      "String"
    ]
  }
]
