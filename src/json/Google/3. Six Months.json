[
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "100.0",
    "acceptanceRate": "0.5577699318343485",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Create Hello World Function",
    "frequency": "76.8",
    "acceptanceRate": "0.8212977812647828",
    "link": "https://leetcode.com/problems/create-hello-world-function",
    "topics": []
  },
  {
    "difficulty": "Medium",
    "title": "Add Two Numbers",
    "frequency": "73.8",
    "acceptanceRate": "0.4622507658063209",
    "link": "https://leetcode.com/problems/add-two-numbers",
    "topics": [
      "Linked List",
      "Math",
      "Recursion"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Recyclable and Low Fat Products",
    "frequency": "72.4",
    "acceptanceRate": "0.8925494047235137",
    "link": "https://leetcode.com/problems/recyclable-and-low-fat-products",
    "topics": [
      "Database"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Palindrome Number",
    "frequency": "69.2",
    "acceptanceRate": "0.5922454861001272",
    "link": "https://leetcode.com/problems/palindrome-number",
    "topics": [
      "Math"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "69.0",
    "acceptanceRate": "0.37070947304965995",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Median of Two Sorted Arrays",
    "frequency": "68.5",
    "acceptanceRate": "0.4381459000864632",
    "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
    "topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Longest Common Prefix",
    "frequency": "66.3",
    "acceptanceRate": "0.4548305505260665",
    "link": "https://leetcode.com/problems/longest-common-prefix",
    "topics": [
      "String",
      "Trie"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "66.0",
    "acceptanceRate": "0.6510193676088248",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "65.1",
    "acceptanceRate": "0.36936167568169936",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Remove Duplicates from Sorted Array",
    "frequency": "63.7",
    "acceptanceRate": "0.6035551112882038",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array",
    "topics": [
      "Array",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "60.8",
    "acceptanceRate": "0.42322820646682113",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "60.0",
    "acceptanceRate": "0.5778282574410597",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Palindromic Substring",
    "frequency": "59.5",
    "acceptanceRate": "0.35846111456358737",
    "link": "https://leetcode.com/problems/longest-palindromic-substring",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Roman to Integer",
    "frequency": "58.6",
    "acceptanceRate": "0.6486626948713667",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Generate Parentheses",
    "frequency": "58.6",
    "acceptanceRate": "0.7713286717803378",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Consecutive Sequence",
    "frequency": "58.6",
    "acceptanceRate": "0.47040828018665215",
    "link": "https://leetcode.com/problems/longest-consecutive-sequence",
    "topics": [
      "Array",
      "Hash Table",
      "Union Find"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Merge Two Sorted Lists",
    "frequency": "58.6",
    "acceptanceRate": "0.6684091757223755",
    "link": "https://leetcode.com/problems/merge-two-sorted-lists",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Subarray Sum Equals K",
    "frequency": "58.2",
    "acceptanceRate": "0.4547621523795086",
    "link": "https://leetcode.com/problems/subarray-sum-equals-k",
    "topics": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Remove Element",
    "frequency": "57.2",
    "acceptanceRate": "0.600316358048653",
    "link": "https://leetcode.com/problems/remove-element",
    "topics": [
      "Array",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Next Permutation",
    "frequency": "56.2",
    "acceptanceRate": "0.4305773671839413",
    "link": "https://leetcode.com/problems/next-permutation",
    "topics": [
      "Array",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Subarray",
    "frequency": "56.2",
    "acceptanceRate": "0.5209977771112393",
    "link": "https://leetcode.com/problems/maximum-subarray",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Reverse Integer",
    "frequency": "56.2",
    "acceptanceRate": "0.3030891979001635",
    "link": "https://leetcode.com/problems/reverse-integer",
    "topics": [
      "Math"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Zigzag Conversion",
    "frequency": "54.0",
    "acceptanceRate": "0.5160676713980508",
    "link": "https://leetcode.com/problems/zigzag-conversion",
    "topics": [
      "String"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Pascal's Triangle",
    "frequency": "53.3",
    "acceptanceRate": "0.770215491719448",
    "link": "https://leetcode.com/problems/pascals-triangle",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Decode String",
    "frequency": "53.3",
    "acceptanceRate": "0.6115249906697672",
    "link": "https://leetcode.com/problems/decode-string",
    "topics": [
      "String",
      "Stack",
      "Recursion"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Anagram",
    "frequency": "52.7",
    "acceptanceRate": "0.6666089667345674",
    "link": "https://leetcode.com/problems/valid-anagram",
    "topics": [
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "4Sum",
    "frequency": "52.7",
    "acceptanceRate": "0.38219020113793045",
    "link": "https://leetcode.com/problems/4sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Pow(x, n)",
    "frequency": "52.7",
    "acceptanceRate": "0.37023188235218485",
    "link": "https://leetcode.com/problems/powx-n",
    "topics": [
      "Math",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Spiral Matrix",
    "frequency": "52.7",
    "acceptanceRate": "0.5393973501075863",
    "link": "https://leetcode.com/problems/spiral-matrix",
    "topics": [
      "Array",
      "Matrix",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Rotate Image",
    "frequency": "52.1",
    "acceptanceRate": "0.7790164518819447",
    "link": "https://leetcode.com/problems/rotate-image",
    "topics": [
      "Array",
      "Math",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "House Robber",
    "frequency": "52.1",
    "acceptanceRate": "0.5230496798578786",
    "link": "https://leetcode.com/problems/house-robber",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Letter Combinations of a Phone Number",
    "frequency": "51.4",
    "acceptanceRate": "0.6385756647080152",
    "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
    "topics": [
      "Hash Table",
      "String",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Search Insert Position",
    "frequency": "49.9",
    "acceptanceRate": "0.4901241638473952",
    "link": "https://leetcode.com/problems/search-insert-position",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Remove Nth Node From End of List",
    "frequency": "49.9",
    "acceptanceRate": "0.48961030525634286",
    "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list",
    "topics": [
      "Linked List",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "49.2",
    "acceptanceRate": "0.7092881169411895",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find First and Last Position of Element in Sorted Array",
    "frequency": "47.5",
    "acceptanceRate": "0.4682873183580639",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Reverse Linked List",
    "frequency": "47.5",
    "acceptanceRate": "0.7920654119580827",
    "link": "https://leetcode.com/problems/reverse-linked-list",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Find the Index of the First Occurrence in a String",
    "frequency": "46.6",
    "acceptanceRate": "0.449716000865219",
    "link": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",
    "topics": [
      "Two Pointers",
      "String",
      "String Matching"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "First Missing Positive",
    "frequency": "45.7",
    "acceptanceRate": "0.4108465766394882",
    "link": "https://leetcode.com/problems/first-missing-positive",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Permutations",
    "frequency": "45.7",
    "acceptanceRate": "0.8066011364163758",
    "link": "https://leetcode.com/problems/permutations",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Valid Sudoku",
    "frequency": "45.7",
    "acceptanceRate": "0.6227675793740958",
    "link": "https://leetcode.com/problems/valid-sudoku",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search in Rotated Sorted Array",
    "frequency": "45.7",
    "acceptanceRate": "0.4283722138743466",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "44.7",
    "acceptanceRate": "0.567741907864408",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Binary Tree Maximum Path Sum",
    "frequency": "43.7",
    "acceptanceRate": "0.41224270953366093",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Increasing Subsequence",
    "frequency": "43.7",
    "acceptanceRate": "0.5780834572811812",
    "link": "https://leetcode.com/problems/longest-increasing-subsequence",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Reverse Nodes in k-Group",
    "frequency": "42.5",
    "acceptanceRate": "0.6304374335039493",
    "link": "https://leetcode.com/problems/reverse-nodes-in-k-group",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Divide Two Integers",
    "frequency": "42.5",
    "acceptanceRate": "0.18396975085033054",
    "link": "https://leetcode.com/problems/divide-two-integers",
    "topics": [
      "Math",
      "Bit Manipulation"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Regular Expression Matching",
    "frequency": "41.4",
    "acceptanceRate": "0.29280131010169236",
    "link": "https://leetcode.com/problems/regular-expression-matching",
    "topics": [
      "String",
      "Dynamic Programming",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "3Sum Closest",
    "frequency": "41.4",
    "acceptanceRate": "0.468869600214817",
    "link": "https://leetcode.com/problems/3sum-closest",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Intersection of Two Arrays",
    "frequency": "41.4",
    "acceptanceRate": "0.764742832671859",
    "link": "https://leetcode.com/problems/intersection-of-two-arrays",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum",
    "frequency": "41.4",
    "acceptanceRate": "0.7467467920803577",
    "link": "https://leetcode.com/problems/combination-sum",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Sudoku Solver",
    "frequency": "41.4",
    "acceptanceRate": "0.6390871778033164",
    "link": "https://leetcode.com/problems/sudoku-solver",
    "topics": [
      "Array",
      "Hash Table",
      "Backtracking",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Sum of Subarray Minimums",
    "frequency": "40.1",
    "acceptanceRate": "0.3762351166424223",
    "link": "https://leetcode.com/problems/sum-of-subarray-minimums",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Swap Nodes in Pairs",
    "frequency": "37.2",
    "acceptanceRate": "0.6720136828647639",
    "link": "https://leetcode.com/problems/swap-nodes-in-pairs",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "String to Integer (atoi)",
    "frequency": "37.2",
    "acceptanceRate": "0.19229423495277723",
    "link": "https://leetcode.com/problems/string-to-integer-atoi",
    "topics": [
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find the Duplicate Number",
    "frequency": "37.2",
    "acceptanceRate": "0.6283577384693005",
    "link": "https://leetcode.com/problems/find-the-duplicate-number",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Bit Manipulation"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Missing Number",
    "frequency": "37.2",
    "acceptanceRate": "0.7006534938999994",
    "link": "https://leetcode.com/problems/missing-number",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Binary Search",
      "Bit Manipulation",
      "Sorting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Big Countries",
    "frequency": "37.2",
    "acceptanceRate": "0.6818920862237663",
    "link": "https://leetcode.com/problems/big-countries",
    "topics": [
      "Database"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Target Sum",
    "frequency": "37.2",
    "acceptanceRate": "0.5076651123616494",
    "link": "https://leetcode.com/problems/target-sum",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Burst Balloons",
    "frequency": "37.2",
    "acceptanceRate": "0.6131500044712985",
    "link": "https://leetcode.com/problems/burst-balloons",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "First Unique Character in a String",
    "frequency": "37.2",
    "acceptanceRate": "0.6369545656040947",
    "link": "https://leetcode.com/problems/first-unique-character-in-a-string",
    "topics": [
      "Hash Table",
      "String",
      "Queue",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Rotate List",
    "frequency": "37.2",
    "acceptanceRate": "0.39944772716128085",
    "link": "https://leetcode.com/problems/rotate-list",
    "topics": [
      "Linked List",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Meeting Rooms III",
    "frequency": "35.6",
    "acceptanceRate": "0.4393472442856221",
    "link": "https://leetcode.com/problems/meeting-rooms-iii",
    "topics": [
      "Array",
      "Hash Table",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Odd Even Jump",
    "frequency": "35.6",
    "acceptanceRate": "0.40720727497638814",
    "link": "https://leetcode.com/problems/odd-even-jump",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack",
      "Ordered Set"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Second Highest Salary",
    "frequency": "35.6",
    "acceptanceRate": "0.4386508095849322",
    "link": "https://leetcode.com/problems/second-highest-salary",
    "topics": [
      "Database"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Isomorphic Strings",
    "frequency": "35.6",
    "acceptanceRate": "0.4685795790862557",
    "link": "https://leetcode.com/problems/isomorphic-strings",
    "topics": [
      "Hash Table",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Pacific Atlantic Water Flow",
    "frequency": "33.8",
    "acceptanceRate": "0.5753385838153038",
    "link": "https://leetcode.com/problems/pacific-atlantic-water-flow",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Longest Valid Parentheses",
    "frequency": "33.8",
    "acceptanceRate": "0.3631311456770452",
    "link": "https://leetcode.com/problems/longest-valid-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game II",
    "frequency": "33.8",
    "acceptanceRate": "0.41503284528575435",
    "link": "https://leetcode.com/problems/jump-game-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water II",
    "frequency": "33.8",
    "acceptanceRate": "0.588762524838287",
    "link": "https://leetcode.com/problems/trapping-rain-water-ii",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Subsets II",
    "frequency": "33.8",
    "acceptanceRate": "0.595072748658621",
    "link": "https://leetcode.com/problems/subsets-ii",
    "topics": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Time Taken to Cross the Door",
    "frequency": "33.8",
    "acceptanceRate": "0.4947985404859871",
    "link": "https://leetcode.com/problems/time-taken-to-cross-the-door",
    "topics": [
      "Array",
      "Queue",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Path Sum",
    "frequency": "31.8",
    "acceptanceRate": "0.664814934885504",
    "link": "https://leetcode.com/problems/minimum-path-sum",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Evaluate Division",
    "frequency": "31.8",
    "acceptanceRate": "0.6314695091079937",
    "link": "https://leetcode.com/problems/evaluate-division",
    "topics": [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Implement Stack using Queues",
    "frequency": "31.8",
    "acceptanceRate": "0.6733897915056893",
    "link": "https://leetcode.com/problems/implement-stack-using-queues",
    "topics": [
      "Stack",
      "Design",
      "Queue"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Integer to Roman",
    "frequency": "31.8",
    "acceptanceRate": "0.6861931275088928",
    "link": "https://leetcode.com/problems/integer-to-roman",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find All Possible Recipes from Given Supplies",
    "frequency": "31.8",
    "acceptanceRate": "0.5646091593277981",
    "link": "https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Falling Path Sum",
    "frequency": "31.8",
    "acceptanceRate": "0.6144004812942054",
    "link": "https://leetcode.com/problems/minimum-falling-path-sum",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Single Number II",
    "frequency": "31.8",
    "acceptanceRate": "0.6522776346186073",
    "link": "https://leetcode.com/problems/single-number-ii",
    "topics": [
      "Array",
      "Bit Manipulation"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Wildcard Matching",
    "frequency": "29.5",
    "acceptanceRate": "0.2989835093068089",
    "link": "https://leetcode.com/problems/wildcard-matching",
    "topics": [
      "String",
      "Dynamic Programming",
      "Greedy",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Surrounded Regions",
    "frequency": "29.5",
    "acceptanceRate": "0.42886447562449315",
    "link": "https://leetcode.com/problems/surrounded-regions",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Fruit Into Baskets",
    "frequency": "27.0",
    "acceptanceRate": "0.4642784173371472",
    "link": "https://leetcode.com/problems/fruit-into-baskets",
    "topics": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Copy List with Random Pointer",
    "frequency": "27.0",
    "acceptanceRate": "0.6053669280147949",
    "link": "https://leetcode.com/problems/copy-list-with-random-pointer",
    "topics": [
      "Hash Table",
      "Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Detonate the Maximum Bombs",
    "frequency": "27.0",
    "acceptanceRate": "0.492066898115528",
    "link": "https://leetcode.com/problems/detonate-the-maximum-bombs",
    "topics": [
      "Array",
      "Math",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Geometry"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Delete Node in a Linked List",
    "frequency": "24.0",
    "acceptanceRate": "0.8231559199073729",
    "link": "https://leetcode.com/problems/delete-node-in-a-linked-list",
    "topics": [
      "Linked List"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Moving Average from Data Stream",
    "frequency": "24.0",
    "acceptanceRate": "0.7993882465731537",
    "link": "https://leetcode.com/problems/moving-average-from-data-stream",
    "topics": [
      "Array",
      "Design",
      "Queue",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Remove to Make Valid Parentheses",
    "frequency": "24.0",
    "acceptanceRate": "0.7074654274676669",
    "link": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Hand of Straights",
    "frequency": "20.4",
    "acceptanceRate": "0.5710230469118233",
    "link": "https://leetcode.com/problems/hand-of-straights",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Detect Squares",
    "frequency": "20.4",
    "acceptanceRate": "0.5130252857014308",
    "link": "https://leetcode.com/problems/detect-squares",
    "topics": [
      "Array",
      "Hash Table",
      "Design",
      "Counting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Reverse String",
    "frequency": "20.4",
    "acceptanceRate": "0.7976436563508422",
    "link": "https://leetcode.com/problems/reverse-string",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Graph Valid Tree",
    "frequency": "16.0",
    "acceptanceRate": "0.4933560205084969",
    "link": "https://leetcode.com/problems/graph-valid-tree",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Make The String Great",
    "frequency": "16.0",
    "acceptanceRate": "0.6827752983137568",
    "link": "https://leetcode.com/problems/make-the-string-great",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Get the Size of a DataFrame",
    "frequency": "16.0",
    "acceptanceRate": "0.8518924318016196",
    "link": "https://leetcode.com/problems/get-the-size-of-a-dataframe",
    "topics": []
  },
  {
    "difficulty": "Hard",
    "title": "Robot Room Cleaner",
    "frequency": "16.0",
    "acceptanceRate": "0.7752279751307165",
    "link": "https://leetcode.com/problems/robot-room-cleaner",
    "topics": [
      "Backtracking",
      "Interactive"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "To Be Or Not To Be",
    "frequency": "16.0",
    "acceptanceRate": "0.6295807994256238",
    "link": "https://leetcode.com/problems/to-be-or-not-to-be",
    "topics": []
  },
  {
    "difficulty": "Medium",
    "title": "Find the Safest Path in a Grid",
    "frequency": "16.0",
    "acceptanceRate": "0.48397269180754227",
    "link": "https://leetcode.com/problems/find-the-safest-path-in-a-grid",
    "topics": [
      "Array",
      "Binary Search",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Word Search II",
    "frequency": "10.5",
    "acceptanceRate": "0.3732633211647155",
    "link": "https://leetcode.com/problems/word-search-ii",
    "topics": [
      "Array",
      "String",
      "Backtracking",
      "Trie",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Smallest String Starting From Leaf",
    "frequency": "10.5",
    "acceptanceRate": "0.608103369683369",
    "link": "https://leetcode.com/problems/smallest-string-starting-from-leaf",
    "topics": [
      "String",
      "Backtracking",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Shortest Distance from All Buildings",
    "frequency": "10.5",
    "acceptanceRate": "0.4437276667084348",
    "link": "https://leetcode.com/problems/shortest-distance-from-all-buildings",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  }
]
