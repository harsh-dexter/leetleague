[
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "100.0",
    "acceptanceRate": "0.4521454893758596",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "93.3",
    "acceptanceRate": "0.36936173184826904",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "91.3",
    "acceptanceRate": "0.6231992979713605",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Find Valid Pair of Adjacent Digits in String",
    "frequency": "89.2",
    "acceptanceRate": "0.5948705875428555",
    "link": "https://leetcode.com/problems/find-valid-pair-of-adjacent-digits-in-string",
    "topics": [
      "Hash Table",
      "String",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "86.8",
    "acceptanceRate": "0.7092882781909262",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Sliding Window Maximum",
    "frequency": "84.2",
    "acceptanceRate": "0.47604171417820246",
    "link": "https://leetcode.com/problems/sliding-window-maximum",
    "topics": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Authentication Manager",
    "frequency": "81.2",
    "acceptanceRate": "0.5785423458465672",
    "link": "https://leetcode.com/problems/design-authentication-manager",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Top K Frequent Elements",
    "frequency": "81.2",
    "acceptanceRate": "0.6456597620808515",
    "link": "https://leetcode.com/problems/top-k-frequent-elements",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "77.9",
    "acceptanceRate": "0.5577699097961987",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "77.9",
    "acceptanceRate": "0.567741907864408",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Right Side View",
    "frequency": "74.1",
    "acceptanceRate": "0.6704256466340539",
    "link": "https://leetcode.com/problems/binary-tree-right-side-view",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Remove All Adjacent Duplicates in String II",
    "frequency": "69.5",
    "acceptanceRate": "0.5960160384923817",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "69.5",
    "acceptanceRate": "0.42322822762811346",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Pour Water",
    "frequency": "69.5",
    "acceptanceRate": "0.47890661504572457",
    "link": "https://leetcode.com/problems/pour-water",
    "topics": [
      "Array",
      "Simulation"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "LFU Cache",
    "frequency": "69.5",
    "acceptanceRate": "0.4660898637811462",
    "link": "https://leetcode.com/problems/lfu-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "69.5",
    "acceptanceRate": "0.5778283165036205",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Decode String",
    "frequency": "69.5",
    "acceptanceRate": "0.6115249906697672",
    "link": "https://leetcode.com/problems/decode-string",
    "topics": [
      "String",
      "Stack",
      "Recursion"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find Median from Data Stream",
    "frequency": "69.5",
    "acceptanceRate": "0.5327816407313548",
    "link": "https://leetcode.com/problems/find-median-from-data-stream",
    "topics": [
      "Two Pointers",
      "Design",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search in Rotated Sorted Array",
    "frequency": "69.5",
    "acceptanceRate": "0.4283722138743466",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Anagram",
    "frequency": "64.0",
    "acceptanceRate": "0.6666090126327007",
    "link": "https://leetcode.com/problems/valid-anagram",
    "topics": [
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "64.0",
    "acceptanceRate": "0.3707095619953202",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Simplify Path",
    "frequency": "64.0",
    "acceptanceRate": "0.4785432317744196",
    "link": "https://leetcode.com/problems/simplify-path",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Palindromic Substrings",
    "frequency": "64.0",
    "acceptanceRate": "0.7167859571435372",
    "link": "https://leetcode.com/problems/palindromic-substrings",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Restore IP Addresses",
    "frequency": "64.0",
    "acceptanceRate": "0.531583393083398",
    "link": "https://leetcode.com/problems/restore-ip-addresses",
    "topics": [
      "String",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Gas Station",
    "frequency": "64.0",
    "acceptanceRate": "0.46383617781658143",
    "link": "https://leetcode.com/problems/gas-station",
    "topics": [
      "Array",
      "Greedy"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Binary Tree Maximum Path Sum",
    "frequency": "64.0",
    "acceptanceRate": "0.4122427548197994",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "64.0",
    "acceptanceRate": "0.49395267933200643",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Number of Visible People in a Queue",
    "frequency": "56.9",
    "acceptanceRate": "0.7129632743660456",
    "link": "https://leetcode.com/problems/number-of-visible-people-in-a-queue",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Task Scheduler",
    "frequency": "56.9",
    "acceptanceRate": "0.6153909539748507",
    "link": "https://leetcode.com/problems/task-scheduler",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "N-Queens",
    "frequency": "56.9",
    "acceptanceRate": "0.7281704967757537",
    "link": "https://leetcode.com/problems/n-queens",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Distinct Islands",
    "frequency": "56.9",
    "acceptanceRate": "0.6225551999482754",
    "link": "https://leetcode.com/problems/number-of-distinct-islands",
    "topics": [
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Hash Function"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Profit From Trading Stocks",
    "frequency": "56.9",
    "acceptanceRate": "0.46591262841133135",
    "link": "https://leetcode.com/problems/maximum-profit-from-trading-stocks",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "56.9",
    "acceptanceRate": "0.5525965599094291",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "String Compression",
    "frequency": "56.9",
    "acceptanceRate": "0.580915717497265",
    "link": "https://leetcode.com/problems/string-compression",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game",
    "frequency": "56.9",
    "acceptanceRate": "0.39479197867291327",
    "link": "https://leetcode.com/problems/jump-game",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Increasing Subsequence",
    "frequency": "56.9",
    "acceptanceRate": "0.5780835683908844",
    "link": "https://leetcode.com/problems/longest-increasing-subsequence",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Count Vowel Substrings of a String",
    "frequency": "56.9",
    "acceptanceRate": "0.7148136172571481",
    "link": "https://leetcode.com/problems/count-vowel-substrings-of-a-string",
    "topics": [
      "Hash Table",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Rotting Oranges",
    "frequency": "56.9",
    "acceptanceRate": "0.566185183855214",
    "link": "https://leetcode.com/problems/rotting-oranges",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Roman to Integer",
    "frequency": "56.9",
    "acceptanceRate": "0.6486627884371093",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Reverse Linked List",
    "frequency": "56.9",
    "acceptanceRate": "0.7920654119580827",
    "link": "https://leetcode.com/problems/reverse-linked-list",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "frequency": "56.9",
    "acceptanceRate": "0.6168283891746636",
    "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
    "topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximal Square",
    "frequency": "56.9",
    "acceptanceRate": "0.4876133314788993",
    "link": "https://leetcode.com/problems/maximal-square",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Koko Eating Bananas",
    "frequency": "56.9",
    "acceptanceRate": "0.49067279348014564",
    "link": "https://leetcode.com/problems/koko-eating-bananas",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Sort Colors",
    "frequency": "47.0",
    "acceptanceRate": "0.6758312948649591",
    "link": "https://leetcode.com/problems/sort-colors",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Reverse Integer",
    "frequency": "47.0",
    "acceptanceRate": "0.30308922695548246",
    "link": "https://leetcode.com/problems/reverse-integer",
    "topics": [
      "Math"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Create Maximum Number",
    "frequency": "47.0",
    "acceptanceRate": "0.32494755150710974",
    "link": "https://leetcode.com/problems/create-maximum-number",
    "topics": [
      "Array",
      "Two Pointers",
      "Stack",
      "Greedy",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "47.0",
    "acceptanceRate": "0.549918579117808",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Consecutive Sequence",
    "frequency": "47.0",
    "acceptanceRate": "0.47040829093373415",
    "link": "https://leetcode.com/problems/longest-consecutive-sequence",
    "topics": [
      "Array",
      "Hash Table",
      "Union Find"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Regular Expression Matching",
    "frequency": "47.0",
    "acceptanceRate": "0.2928012366939696",
    "link": "https://leetcode.com/problems/regular-expression-matching",
    "topics": [
      "String",
      "Dynamic Programming",
      "Recursion"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Cost to Make Array Equal",
    "frequency": "47.0",
    "acceptanceRate": "0.4632379781368273",
    "link": "https://leetcode.com/problems/minimum-cost-to-make-array-equal",
    "topics": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Permutation in String",
    "frequency": "47.0",
    "acceptanceRate": "0.47247849599514163",
    "link": "https://leetcode.com/problems/permutation-in-string",
    "topics": [
      "Hash Table",
      "Two Pointers",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule II",
    "frequency": "47.0",
    "acceptanceRate": "0.5342350291611208",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Majority Element",
    "frequency": "47.0",
    "acceptanceRate": "0.6574028018936169",
    "link": "https://leetcode.com/problems/majority-element",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Kth Largest Element in an Array",
    "frequency": "47.0",
    "acceptanceRate": "0.6797700833982673",
    "link": "https://leetcode.com/problems/kth-largest-element-in-an-array",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Implement Trie (Prefix Tree)",
    "frequency": "47.0",
    "acceptanceRate": "0.679347462282349",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Time Based Key-Value Store",
    "frequency": "47.0",
    "acceptanceRate": "0.49366343275238816",
    "link": "https://leetcode.com/problems/time-based-key-value-store",
    "topics": [
      "Hash Table",
      "String",
      "Binary Search",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge In Between Linked Lists",
    "frequency": "47.0",
    "acceptanceRate": "0.8230365933376913",
    "link": "https://leetcode.com/problems/merge-in-between-linked-lists",
    "topics": [
      "Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Validate Binary Search Tree",
    "frequency": "47.0",
    "acceptanceRate": "0.3438039571887417",
    "link": "https://leetcode.com/problems/validate-binary-search-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Add Strings",
    "frequency": "47.0",
    "acceptanceRate": "0.5190382397212994",
    "link": "https://leetcode.com/problems/add-strings",
    "topics": [
      "Math",
      "String",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find the Smallest Divisor Given a Threshold",
    "frequency": "47.0",
    "acceptanceRate": "0.6364626591326843",
    "link": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Triangle",
    "frequency": "47.0",
    "acceptanceRate": "0.5929423967075687",
    "link": "https://leetcode.com/problems/triangle",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Subarray Product Less Than K",
    "frequency": "47.0",
    "acceptanceRate": "0.5285340562664164",
    "link": "https://leetcode.com/problems/subarray-product-less-than-k",
    "topics": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum II",
    "frequency": "47.0",
    "acceptanceRate": "0.5767453180420465",
    "link": "https://leetcode.com/problems/combination-sum-ii",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Calculate Amount Paid in Taxes",
    "frequency": "47.0",
    "acceptanceRate": "0.6755645366418902",
    "link": "https://leetcode.com/problems/calculate-amount-paid-in-taxes",
    "topics": [
      "Array",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Meeting Rooms II",
    "frequency": "47.0",
    "acceptanceRate": "0.5214164659444622",
    "link": "https://leetcode.com/problems/meeting-rooms-ii",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Minimum Absolute Difference",
    "frequency": "47.0",
    "acceptanceRate": "0.7065237783248814",
    "link": "https://leetcode.com/problems/minimum-absolute-difference",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "First Missing Positive",
    "frequency": "47.0",
    "acceptanceRate": "0.4108465766394882",
    "link": "https://leetcode.com/problems/first-missing-positive",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Min Stack",
    "frequency": "47.0",
    "acceptanceRate": "0.5644508432974008",
    "link": "https://leetcode.com/problems/min-stack",
    "topics": [
      "Stack",
      "Design"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Vertical Order Traversal of a Binary Tree",
    "frequency": "47.0",
    "acceptanceRate": "0.5133056725792462",
    "link": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",
    "topics": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Sorting",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search Suggestions System",
    "frequency": "47.0",
    "acceptanceRate": "0.6505020663557451",
    "link": "https://leetcode.com/problems/search-suggestions-system",
    "topics": [
      "Array",
      "String",
      "Binary Search",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Palindrome Number",
    "frequency": "47.0",
    "acceptanceRate": "0.5922453979629636",
    "link": "https://leetcode.com/problems/palindrome-number",
    "topics": [
      "Math"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Spiral Matrix",
    "frequency": "47.0",
    "acceptanceRate": "0.5393974779242756",
    "link": "https://leetcode.com/problems/spiral-matrix",
    "topics": [
      "Array",
      "Matrix",
      "Simulation"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Longest Common Prefix",
    "frequency": "47.0",
    "acceptanceRate": "0.4548305143026601",
    "link": "https://leetcode.com/problems/longest-common-prefix",
    "topics": [
      "String",
      "Trie"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Add Two Numbers",
    "frequency": "47.0",
    "acceptanceRate": "0.4622507658063209",
    "link": "https://leetcode.com/problems/add-two-numbers",
    "topics": [
      "Linked List",
      "Math",
      "Recursion"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Island Perimeter",
    "frequency": "47.0",
    "acceptanceRate": "0.7353932860923039",
    "link": "https://leetcode.com/problems/island-perimeter",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Invert Binary Tree",
    "frequency": "47.0",
    "acceptanceRate": "0.7902166260843579",
    "link": "https://leetcode.com/problems/invert-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find First and Last Position of Element in Sorted Array",
    "frequency": "47.0",
    "acceptanceRate": "0.4682874104872264",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Word Break II",
    "frequency": "47.0",
    "acceptanceRate": "0.5364536357075469",
    "link": "https://leetcode.com/problems/word-break-ii",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Trie",
      "Memoization"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Kth Smallest Element in a BST",
    "frequency": "47.0",
    "acceptanceRate": "0.7532957775488365",
    "link": "https://leetcode.com/problems/kth-smallest-element-in-a-bst",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Delete Node in a BST",
    "frequency": "47.0",
    "acceptanceRate": "0.5299282336051427",
    "link": "https://leetcode.com/problems/delete-node-in-a-bst",
    "topics": [
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Candies Allocated to K Children",
    "frequency": "47.0",
    "acceptanceRate": "0.5008458390177354",
    "link": "https://leetcode.com/problems/maximum-candies-allocated-to-k-children",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule",
    "frequency": "47.0",
    "acceptanceRate": "0.49234264912256587",
    "link": "https://leetcode.com/problems/course-schedule",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Basic Calculator III",
    "frequency": "47.0",
    "acceptanceRate": "0.52469160116735",
    "link": "https://leetcode.com/problems/basic-calculator-iii",
    "topics": [
      "Math",
      "String",
      "Stack",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Cache With Time Limit",
    "frequency": "47.0",
    "acceptanceRate": "0.7578738827979018",
    "link": "https://leetcode.com/problems/cache-with-time-limit",
    "topics": []
  },
  {
    "difficulty": "Easy",
    "title": "Reverse Vowels of a String",
    "frequency": "47.0",
    "acceptanceRate": "0.581874454982085",
    "link": "https://leetcode.com/problems/reverse-vowels-of-a-string",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Plates Between Candles",
    "frequency": "47.0",
    "acceptanceRate": "0.4666856756362479",
    "link": "https://leetcode.com/problems/plates-between-candles",
    "topics": [
      "Array",
      "String",
      "Binary Search",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Zigzag Conversion",
    "frequency": "47.0",
    "acceptanceRate": "0.5160678115303926",
    "link": "https://leetcode.com/problems/zigzag-conversion",
    "topics": [
      "String"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Degree of an Array",
    "frequency": "47.0",
    "acceptanceRate": "0.5742057825337067",
    "link": "https://leetcode.com/problems/degree-of-an-array",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Sideway Jumps",
    "frequency": "47.0",
    "acceptanceRate": "0.5083339022558591",
    "link": "https://leetcode.com/problems/minimum-sideway-jumps",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  }
]
