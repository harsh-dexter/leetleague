[
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "100.0",
    "acceptanceRate": "0.45214611041922415",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "93.7",
    "acceptanceRate": "0.493952607579036",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "93.7",
    "acceptanceRate": "0.6231995235830335",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Generate Parentheses",
    "frequency": "85.7",
    "acceptanceRate": "0.7713286717803378",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Diagonal Traverse",
    "frequency": "85.7",
    "acceptanceRate": "0.6317318066223124",
    "link": "https://leetcode.com/problems/diagonal-traverse",
    "topics": [
      "Array",
      "Matrix",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Construct Binary Tree from Inorder and Postorder Traversal",
    "frequency": "85.7",
    "acceptanceRate": "0.6608200104533679",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Sort the Matrix Diagonally",
    "frequency": "85.7",
    "acceptanceRate": "0.8297868426498654",
    "link": "https://leetcode.com/problems/sort-the-matrix-diagonally",
    "topics": [
      "Array",
      "Sorting",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Integer to Roman",
    "frequency": "85.7",
    "acceptanceRate": "0.6861927118001762",
    "link": "https://leetcode.com/problems/integer-to-roman",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Set Matrix Zeroes",
    "frequency": "85.7",
    "acceptanceRate": "0.6070887140469675",
    "link": "https://leetcode.com/problems/set-matrix-zeroes",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "85.7",
    "acceptanceRate": "0.6510194684590559",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Consecutive Sequence",
    "frequency": "85.7",
    "acceptanceRate": "0.47040831242787495",
    "link": "https://leetcode.com/problems/longest-consecutive-sequence",
    "topics": [
      "Array",
      "Hash Table",
      "Union Find"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "85.7",
    "acceptanceRate": "0.36936175949627814",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search in Rotated Sorted Array",
    "frequency": "74.3",
    "acceptanceRate": "0.42837216325866995",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Diameter of Binary Tree",
    "frequency": "74.3",
    "acceptanceRate": "0.6358637950396262",
    "link": "https://leetcode.com/problems/diameter-of-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Word Break",
    "frequency": "74.3",
    "acceptanceRate": "0.4827375533449676",
    "link": "https://leetcode.com/problems/word-break",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "74.3",
    "acceptanceRate": "0.42322837860550094",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "74.3",
    "acceptanceRate": "0.5577699653967975",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Rotting Oranges",
    "frequency": "74.3",
    "acceptanceRate": "0.5661843620180039",
    "link": "https://leetcode.com/problems/rotting-oranges",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  }
]
