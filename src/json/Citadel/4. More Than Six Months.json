[
  {
    "difficulty": "Medium",
    "title": "Longest Non-decreasing Subarray From Two Arrays",
    "frequency": "100.0",
    "acceptanceRate": "0.2981855832758111",
    "link": "https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Binary Tree Maximum Path Sum",
    "frequency": "98.0",
    "acceptanceRate": "0.41224264845326536",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Knight Moves",
    "frequency": "94.2",
    "acceptanceRate": "0.41329156777804593",
    "link": "https://leetcode.com/problems/minimum-knight-moves",
    "topics": [
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Delete and Earn",
    "frequency": "94.2",
    "acceptanceRate": "0.5672788571185733",
    "link": "https://leetcode.com/problems/delete-and-earn",
    "topics": [
      "Array",
      "Hash Table",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Equal Sum of Two Arrays After Replacing Zeros",
    "frequency": "80.8",
    "acceptanceRate": "0.5016214325632321",
    "link": "https://leetcode.com/problems/minimum-equal-sum-of-two-arrays-after-replacing-zeros",
    "topics": [
      "Array",
      "Greedy"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Operations to Make Numbers Non-positive",
    "frequency": "77.4",
    "acceptanceRate": "0.4220088242927589",
    "link": "https://leetcode.com/problems/minimum-operations-to-make-numbers-non-positive",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Good Binary Strings",
    "frequency": "77.4",
    "acceptanceRate": "0.5249371022643184",
    "link": "https://leetcode.com/problems/number-of-good-binary-strings",
    "topics": [
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "LFU Cache",
    "frequency": "77.4",
    "acceptanceRate": "0.4660898637811462",
    "link": "https://leetcode.com/problems/lfu-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "73.5",
    "acceptanceRate": "0.45214576213144547",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest String Chain",
    "frequency": "71.2",
    "acceptanceRate": "0.6201512673699018",
    "link": "https://leetcode.com/problems/longest-string-chain",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Palindromic Substrings",
    "frequency": "71.2",
    "acceptanceRate": "0.7167859571435372",
    "link": "https://leetcode.com/problems/palindromic-substrings",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Serialize and Deserialize Binary Tree",
    "frequency": "65.8",
    "acceptanceRate": "0.5896946953630543",
    "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
    "topics": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Evaluate Reverse Polish Notation",
    "frequency": "65.8",
    "acceptanceRate": "0.5495024017596329",
    "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation",
    "topics": [
      "Array",
      "Math",
      "Stack"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Sliding Window Maximum",
    "frequency": "65.8",
    "acceptanceRate": "0.47604171417820246",
    "link": "https://leetcode.com/problems/sliding-window-maximum",
    "topics": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "62.5",
    "acceptanceRate": "0.5525965329429721",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "58.5",
    "acceptanceRate": "0.54991878709743",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Length of Longest Subarray With at Most K Frequency",
    "frequency": "58.5",
    "acceptanceRate": "0.5577122271225969",
    "link": "https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency",
    "topics": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Couples Holding Hands",
    "frequency": "58.5",
    "acceptanceRate": "0.5839613387880093",
    "link": "https://leetcode.com/problems/couples-holding-hands",
    "topics": [
      "Greedy",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Robot Room Cleaner",
    "frequency": "58.5",
    "acceptanceRate": "0.7752279751307165",
    "link": "https://leetcode.com/problems/robot-room-cleaner",
    "topics": [
      "Backtracking",
      "Interactive"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find Median from Data Stream",
    "frequency": "58.5",
    "acceptanceRate": "0.5327813617707072",
    "link": "https://leetcode.com/problems/find-median-from-data-stream",
    "topics": [
      "Two Pointers",
      "Design",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Evaluate Division",
    "frequency": "58.5",
    "acceptanceRate": "0.6314695091079937",
    "link": "https://leetcode.com/problems/evaluate-division",
    "topics": [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find the Duplicate Number",
    "frequency": "58.5",
    "acceptanceRate": "0.6283577384693005",
    "link": "https://leetcode.com/problems/find-the-duplicate-number",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Bit Manipulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "58.5",
    "acceptanceRate": "0.7092882008000586",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Validate Binary Search Tree",
    "frequency": "58.5",
    "acceptanceRate": "0.34380403551085315",
    "link": "https://leetcode.com/problems/validate-binary-search-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Sudoku Solver",
    "frequency": "58.5",
    "acceptanceRate": "0.6390866531877745",
    "link": "https://leetcode.com/problems/sudoku-solver",
    "topics": [
      "Array",
      "Hash Table",
      "Backtracking",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Permutations",
    "frequency": "58.5",
    "acceptanceRate": "0.8066012553007272",
    "link": "https://leetcode.com/problems/permutations",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search Suggestions System",
    "frequency": "53.7",
    "acceptanceRate": "0.6505026464247127",
    "link": "https://leetcode.com/problems/search-suggestions-system",
    "topics": [
      "Array",
      "String",
      "Binary Search",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "53.7",
    "acceptanceRate": "0.5677420052593406",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "53.7",
    "acceptanceRate": "0.6231992538801062",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "53.7",
    "acceptanceRate": "0.6510193095174875",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "N-Queens",
    "frequency": "53.7",
    "acceptanceRate": "0.7281708939408218",
    "link": "https://leetcode.com/problems/n-queens",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Design Search Autocomplete System",
    "frequency": "53.7",
    "acceptanceRate": "0.4940635941634056",
    "link": "https://leetcode.com/problems/design-search-autocomplete-system",
    "topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Regular Expression Matching",
    "frequency": "53.7",
    "acceptanceRate": "0.29280116328628375",
    "link": "https://leetcode.com/problems/regular-expression-matching",
    "topics": [
      "String",
      "Dynamic Programming",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Total Damage With Spell Casting",
    "frequency": "53.7",
    "acceptanceRate": "0.2774327122153209",
    "link": "https://leetcode.com/problems/maximum-total-damage-with-spell-casting",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Dynamic Programming",
      "Sorting",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Best Time to Buy and Sell Stock II",
    "frequency": "53.7",
    "acceptanceRate": "0.6950026730452624",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Circular Queue",
    "frequency": "53.7",
    "acceptanceRate": "0.5264418953615425",
    "link": "https://leetcode.com/problems/design-circular-queue",
    "topics": [
      "Array",
      "Linked List",
      "Design",
      "Queue"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Best Position for a Service Centre",
    "frequency": "47.5",
    "acceptanceRate": "0.3487944380444229",
    "link": "https://leetcode.com/problems/best-position-for-a-service-centre",
    "topics": [
      "Array",
      "Math",
      "Geometry",
      "Randomized"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Design Excel Sum Formula",
    "frequency": "47.5",
    "acceptanceRate": "0.42568163292465855",
    "link": "https://leetcode.com/problems/design-excel-sum-formula",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Graph",
      "Design",
      "Topological Sort",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Implement Trie (Prefix Tree)",
    "frequency": "47.5",
    "acceptanceRate": "0.6793476261333812",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Parallel Courses III",
    "frequency": "47.5",
    "acceptanceRate": "0.6674963944974485",
    "link": "https://leetcode.com/problems/parallel-courses-iii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Length of Repeated Subarray",
    "frequency": "47.5",
    "acceptanceRate": "0.5101333414238255",
    "link": "https://leetcode.com/problems/maximum-length-of-repeated-subarray",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Fizz Buzz",
    "frequency": "47.5",
    "acceptanceRate": "0.7437057263879774",
    "link": "https://leetcode.com/problems/fizz-buzz",
    "topics": [
      "Math",
      "String",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum",
    "frequency": "47.5",
    "acceptanceRate": "0.7467468656021409",
    "link": "https://leetcode.com/problems/combination-sum",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Perfect Squares",
    "frequency": "47.5",
    "acceptanceRate": "0.556720955872363",
    "link": "https://leetcode.com/problems/perfect-squares",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Sort Items by Groups Respecting Dependencies",
    "frequency": "47.5",
    "acceptanceRate": "0.6563638142659898",
    "link": "https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Climbing Stairs",
    "frequency": "47.5",
    "acceptanceRate": "0.5354071662997495",
    "link": "https://leetcode.com/problems/climbing-stairs",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Letter Combinations of a Phone Number",
    "frequency": "47.5",
    "acceptanceRate": "0.6385753475280027",
    "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
    "topics": [
      "Hash Table",
      "String",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Median of Two Sorted Arrays",
    "frequency": "47.5",
    "acceptanceRate": "0.43814597895533036",
    "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
    "topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Height Trees",
    "frequency": "47.5",
    "acceptanceRate": "0.42014412911485716",
    "link": "https://leetcode.com/problems/minimum-height-trees",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Count Ways To Build Good Strings",
    "frequency": "47.5",
    "acceptanceRate": "0.592145182134194",
    "link": "https://leetcode.com/problems/count-ways-to-build-good-strings",
    "topics": [
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximal Square",
    "frequency": "47.5",
    "acceptanceRate": "0.4876133314788993",
    "link": "https://leetcode.com/problems/maximal-square",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Alien Dictionary",
    "frequency": "47.5",
    "acceptanceRate": "0.3667370231009105",
    "link": "https://leetcode.com/problems/alien-dictionary",
    "topics": [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Longest Increasing Path in a Matrix",
    "frequency": "47.5",
    "acceptanceRate": "0.5534762586302827",
    "link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Costs Using the Train Line",
    "frequency": "47.5",
    "acceptanceRate": "0.7759452936444088",
    "link": "https://leetcode.com/problems/minimum-costs-using-the-train-line",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Best Time to Buy and Sell Stock III",
    "frequency": "47.5",
    "acceptanceRate": "0.5112077786505705",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "House Robber",
    "frequency": "47.5",
    "acceptanceRate": "0.5230498335398295",
    "link": "https://leetcode.com/problems/house-robber",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Transform to Chessboard",
    "frequency": "47.5",
    "acceptanceRate": "0.5055323081662516",
    "link": "https://leetcode.com/problems/transform-to-chessboard",
    "topics": [
      "Array",
      "Math",
      "Bit Manipulation",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "47.5",
    "acceptanceRate": "0.3707094094916058",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Asteroid Collision",
    "frequency": "38.9",
    "acceptanceRate": "0.45500659848234903",
    "link": "https://leetcode.com/problems/asteroid-collision",
    "topics": [
      "Array",
      "Stack",
      "Simulation"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
    "frequency": "38.9",
    "acceptanceRate": "0.3577149824563679",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Sqrt(x)",
    "frequency": "38.9",
    "acceptanceRate": "0.40371814671155276",
    "link": "https://leetcode.com/problems/sqrtx",
    "topics": [
      "Math",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Count Number of Maximum Bitwise-OR Subsets",
    "frequency": "38.9",
    "acceptanceRate": "0.8794639313734468",
    "link": "https://leetcode.com/problems/count-number-of-maximum-bitwise-or-subsets",
    "topics": [
      "Array",
      "Backtracking",
      "Bit Manipulation",
      "Enumeration"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search a 2D Matrix II",
    "frequency": "38.9",
    "acceptanceRate": "0.5522251243876155",
    "link": "https://leetcode.com/problems/search-a-2d-matrix-ii",
    "topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Word Ladder II",
    "frequency": "38.9",
    "acceptanceRate": "0.27152592915800633",
    "link": "https://leetcode.com/problems/word-ladder-ii",
    "topics": [
      "Hash Table",
      "String",
      "Backtracking",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Consecutive Numbers Sum",
    "frequency": "38.9",
    "acceptanceRate": "0.420202765468534",
    "link": "https://leetcode.com/problems/consecutive-numbers-sum",
    "topics": [
      "Math",
      "Enumeration"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Common Subsequence",
    "frequency": "38.9",
    "acceptanceRate": "0.582494259379739",
    "link": "https://leetcode.com/problems/longest-common-subsequence",
    "topics": [
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Design Front Middle Back Queue",
    "frequency": "38.9",
    "acceptanceRate": "0.5626833592193408",
    "link": "https://leetcode.com/problems/design-front-middle-back-queue",
    "topics": [
      "Array",
      "Linked List",
      "Design",
      "Queue",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "38.9",
    "acceptanceRate": "0.5778283165036205",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Paint House",
    "frequency": "38.9",
    "acceptanceRate": "0.6373080782394743",
    "link": "https://leetcode.com/problems/paint-house",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Max Points on a Line",
    "frequency": "38.9",
    "acceptanceRate": "0.2895514653845652",
    "link": "https://leetcode.com/problems/max-points-on-a-line",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Geometry"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Pow(x, n)",
    "frequency": "38.9",
    "acceptanceRate": "0.37023184585699886",
    "link": "https://leetcode.com/problems/powx-n",
    "topics": [
      "Math",
      "Recursion"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Rank Transform of a Matrix",
    "frequency": "38.9",
    "acceptanceRate": "0.4142347814604516",
    "link": "https://leetcode.com/problems/rank-transform-of-a-matrix",
    "topics": [
      "Array",
      "Union Find",
      "Graph",
      "Topological Sort",
      "Sorting",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Increasing Subsequence",
    "frequency": "38.9",
    "acceptanceRate": "0.5780836795005291",
    "link": "https://leetcode.com/problems/longest-increasing-subsequence",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "38.9",
    "acceptanceRate": "0.49395252843651954",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Rotting Oranges",
    "frequency": "38.9",
    "acceptanceRate": "0.5661844214336468",
    "link": "https://leetcode.com/problems/rotting-oranges",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Populating Next Right Pointers in Each Node II",
    "frequency": "38.9",
    "acceptanceRate": "0.5556620212908557",
    "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii",
    "topics": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Reorganize String",
    "frequency": "38.9",
    "acceptanceRate": "0.5619634145417838",
    "link": "https://leetcode.com/problems/reorganize-string",
    "topics": [
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "First Completely Painted Row or Column",
    "frequency": "38.9",
    "acceptanceRate": "0.6392151838043829",
    "link": "https://leetcode.com/problems/first-completely-painted-row-or-column",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "The Skyline Problem",
    "frequency": "38.9",
    "acceptanceRate": "0.4396233271583687",
    "link": "https://leetcode.com/problems/the-skyline-problem",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Line Sweep",
      "Heap (Priority Queue)",
      "Ordered Set"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Permutations II",
    "frequency": "38.9",
    "acceptanceRate": "0.615917727605333",
    "link": "https://leetcode.com/problems/permutations-ii",
    "topics": [
      "Array",
      "Backtracking",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Simplify Path",
    "frequency": "38.9",
    "acceptanceRate": "0.47854346003751436",
    "link": "https://leetcode.com/problems/simplify-path",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Subarray Sums Divisible by K",
    "frequency": "38.9",
    "acceptanceRate": "0.5561771980621089",
    "link": "https://leetcode.com/problems/subarray-sums-divisible-by-k",
    "topics": [
      "Array",
      "Hash Table",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Bus Routes",
    "frequency": "38.9",
    "acceptanceRate": "0.4695297092963377",
    "link": "https://leetcode.com/problems/bus-routes",
    "topics": [
      "Array",
      "Hash Table",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Knight Probability in Chessboard",
    "frequency": "38.9",
    "acceptanceRate": "0.5659459211311573",
    "link": "https://leetcode.com/problems/knight-probability-in-chessboard",
    "topics": [
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Best Time to Buy and Sell Stock IV",
    "frequency": "38.9",
    "acceptanceRate": "0.47086154391046825",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Egg Drop With 2 Eggs and N Floors",
    "frequency": "38.9",
    "acceptanceRate": "0.7373311247994203",
    "link": "https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors",
    "topics": [
      "Math",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Word Search",
    "frequency": "38.9",
    "acceptanceRate": "0.45266938011238234",
    "link": "https://leetcode.com/problems/word-search",
    "topics": [
      "Array",
      "String",
      "Backtracking",
      "Depth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Populating Next Right Pointers in Each Node",
    "frequency": "38.9",
    "acceptanceRate": "0.6544149639689759",
    "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
    "topics": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Moving Average from Data Stream",
    "frequency": "38.9",
    "acceptanceRate": "0.7993882465731537",
    "link": "https://leetcode.com/problems/moving-average-from-data-stream",
    "topics": [
      "Array",
      "Design",
      "Queue",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Basic Calculator",
    "frequency": "38.9",
    "acceptanceRate": "0.45589558921827417",
    "link": "https://leetcode.com/problems/basic-calculator",
    "topics": [
      "Math",
      "String",
      "Stack",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule II",
    "frequency": "38.9",
    "acceptanceRate": "0.5342350291611208",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule",
    "frequency": "38.9",
    "acceptanceRate": "0.492342885688383",
    "link": "https://leetcode.com/problems/course-schedule",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "frequency": "38.9",
    "acceptanceRate": "0.6168283891746636",
    "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
    "topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ]
  }
]
