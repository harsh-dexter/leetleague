[
  {
    "difficulty": "Hard",
    "title": "First Missing Positive",
    "frequency": "100.0",
    "acceptanceRate": "0.41084732999714285",
    "link": "https://leetcode.com/problems/first-missing-positive",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Cheapest Flights Within K Stops",
    "frequency": "85.6",
    "acceptanceRate": "0.4039895913277053",
    "link": "https://leetcode.com/problems/cheapest-flights-within-k-stops",
    "topics": [
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "78.1",
    "acceptanceRate": "0.6510209523696747",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game",
    "frequency": "78.1",
    "acceptanceRate": "0.39479176631539076",
    "link": "https://leetcode.com/problems/jump-game",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Window Substring",
    "frequency": "78.1",
    "acceptanceRate": "0.45350666922328364",
    "link": "https://leetcode.com/problems/minimum-window-substring",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Reverse Nodes in k-Group",
    "frequency": "67.7",
    "acceptanceRate": "0.6304369585397218",
    "link": "https://leetcode.com/problems/reverse-nodes-in-k-group",
    "topics": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Reachable Nodes With Restrictions",
    "frequency": "67.7",
    "acceptanceRate": "0.5950097060567419",
    "link": "https://leetcode.com/problems/reachable-nodes-with-restrictions",
    "topics": [
      "Array",
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Longest Valid Parentheses",
    "frequency": "67.7",
    "acceptanceRate": "0.36313118342494255",
    "link": "https://leetcode.com/problems/longest-valid-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Word Search",
    "frequency": "67.7",
    "acceptanceRate": "0.45267040514161516",
    "link": "https://leetcode.com/problems/word-search",
    "topics": [
      "Array",
      "String",
      "Backtracking",
      "Depth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Palindromic Substring",
    "frequency": "67.7",
    "acceptanceRate": "0.3584616666918127",
    "link": "https://leetcode.com/problems/longest-palindromic-substring",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "67.7",
    "acceptanceRate": "0.49395264637400116",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Length of Longest Subarray With at Most K Frequency",
    "frequency": "67.7",
    "acceptanceRate": "0.5577122271225969",
    "link": "https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency",
    "topics": [
      "Array",
      "Hash Table",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Sum Of Special Evenly-Spaced Elements In Array",
    "frequency": "67.7",
    "acceptanceRate": "0.4920049200492005",
    "link": "https://leetcode.com/problems/sum-of-special-evenly-spaced-elements-in-array",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "67.7",
    "acceptanceRate": "0.36936159236523763",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Ideal Subsequence",
    "frequency": "67.7",
    "acceptanceRate": "0.4683468802993977",
    "link": "https://leetcode.com/problems/longest-ideal-subsequence",
    "topics": [
      "Hash Table",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Find First and Last Position of Element in Sorted Array",
    "frequency": "67.7",
    "acceptanceRate": "0.46828847885193964",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Generate Parentheses",
    "frequency": "67.7",
    "acceptanceRate": "0.7713291060549546",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Increasing Triplet Subsequence",
    "frequency": "67.7",
    "acceptanceRate": "0.39124984440099875",
    "link": "https://leetcode.com/problems/increasing-triplet-subsequence",
    "topics": [
      "Array",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Product of Array Except Self",
    "frequency": "67.7",
    "acceptanceRate": "0.677800454261773",
    "link": "https://leetcode.com/problems/product-of-array-except-self",
    "topics": [
      "Array",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Majority Element",
    "frequency": "67.7",
    "acceptanceRate": "0.6574036573829073",
    "link": "https://leetcode.com/problems/majority-element",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game II",
    "frequency": "67.7",
    "acceptanceRate": "0.41503414711178893",
    "link": "https://leetcode.com/problems/jump-game-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Evaluate Division",
    "frequency": "67.7",
    "acceptanceRate": "0.6314714847355362",
    "link": "https://leetcode.com/problems/evaluate-division",
    "topics": [
      "Array",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph",
      "Shortest Path"
    ]
  }
]
