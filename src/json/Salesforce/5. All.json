[
  {
    "difficulty": "Medium",
    "title": "Word Break",
    "frequency": "93.6",
    "acceptanceRate": "0.48273764959175913",
    "link": "https://leetcode.com/problems/word-break",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Subarray Product Less Than K",
    "frequency": "87.3",
    "acceptanceRate": "0.5285340562664164",
    "link": "https://leetcode.com/problems/subarray-product-less-than-k",
    "topics": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "String Compression",
    "frequency": "84.8",
    "acceptanceRate": "0.580915717497265",
    "link": "https://leetcode.com/problems/string-compression",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "LFU Cache",
    "frequency": "80.4",
    "acceptanceRate": "0.4660898637811462",
    "link": "https://leetcode.com/problems/lfu-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Distinct Subsequences",
    "frequency": "80.4",
    "acceptanceRate": "0.500998941013352",
    "link": "https://leetcode.com/problems/distinct-subsequences",
    "topics": [
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "80.4",
    "acceptanceRate": "0.49395267933200643",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "78.8",
    "acceptanceRate": "0.45214539356143535",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "75.1",
    "acceptanceRate": "0.7092882781909262",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "75.1",
    "acceptanceRate": "0.6231992538801062",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "73.0",
    "acceptanceRate": "0.36936173184826904",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Frequency Stack",
    "frequency": "73.0",
    "acceptanceRate": "0.6620493032659615",
    "link": "https://leetcode.com/problems/maximum-frequency-stack",
    "topics": [
      "Hash Table",
      "Stack",
      "Design",
      "Ordered Set"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Count the Number of Fair Pairs",
    "frequency": "73.0",
    "acceptanceRate": "0.5291637303813359",
    "link": "https://leetcode.com/problems/count-the-number-of-fair-pairs",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Palindromic Substrings",
    "frequency": "73.0",
    "acceptanceRate": "0.7167859571435372",
    "link": "https://leetcode.com/problems/palindromic-substrings",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Design a Text Editor",
    "frequency": "73.0",
    "acceptanceRate": "0.47138071447136626",
    "link": "https://leetcode.com/problems/design-a-text-editor",
    "topics": [
      "Linked List",
      "String",
      "Stack",
      "Design",
      "Simulation",
      "Doubly-Linked List"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Height Checker",
    "frequency": "73.0",
    "acceptanceRate": "0.8113928378391797",
    "link": "https://leetcode.com/problems/height-checker",
    "topics": [
      "Array",
      "Sorting",
      "Counting Sort"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Check If a Number Is Majority Element in a Sorted Array",
    "frequency": "70.8",
    "acceptanceRate": "0.5908462374784931",
    "link": "https://leetcode.com/problems/check-if-a-number-is-majority-element-in-a-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Beautiful Towers I",
    "frequency": "70.8",
    "acceptanceRate": "0.433646463471382",
    "link": "https://leetcode.com/problems/beautiful-towers-i",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Beautiful Towers II",
    "frequency": "70.8",
    "acceptanceRate": "0.3459771366358193",
    "link": "https://leetcode.com/problems/beautiful-towers-ii",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule II",
    "frequency": "70.8",
    "acceptanceRate": "0.5342350291611208",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Check Whether Two Strings are Almost Equivalent",
    "frequency": "70.8",
    "acceptanceRate": "0.6364656307145949",
    "link": "https://leetcode.com/problems/check-whether-two-strings-are-almost-equivalent",
    "topics": [
      "Hash Table",
      "String",
      "Counting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Split Array Largest Sum",
    "frequency": "68.3",
    "acceptanceRate": "0.580995560819648",
    "link": "https://leetcode.com/problems/split-array-largest-sum",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "68.3",
    "acceptanceRate": "0.552596541931788",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "68.3",
    "acceptanceRate": "0.42322822762811346",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "68.3",
    "acceptanceRate": "0.6510193782985645",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Kth Largest Element in an Array",
    "frequency": "65.5",
    "acceptanceRate": "0.6797700833982673",
    "link": "https://leetcode.com/problems/kth-largest-element-in-an-array",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Beautiful Arrangement",
    "frequency": "65.5",
    "acceptanceRate": "0.6452784543104094",
    "link": "https://leetcode.com/problems/beautiful-arrangement",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Binary Tree Maximum Path Sum",
    "frequency": "65.5",
    "acceptanceRate": "0.41224264845326536",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Maximum Product of Three Numbers",
    "frequency": "62.3",
    "acceptanceRate": "0.45311603363931174",
    "link": "https://leetcode.com/problems/maximum-product-of-three-numbers",
    "topics": [
      "Array",
      "Math",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Integer to Roman",
    "frequency": "62.3",
    "acceptanceRate": "0.6861928580376627",
    "link": "https://leetcode.com/problems/integer-to-roman",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Asteroid Collision",
    "frequency": "62.3",
    "acceptanceRate": "0.45500659848234903",
    "link": "https://leetcode.com/problems/asteroid-collision",
    "topics": [
      "Array",
      "Stack",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Largest Number",
    "frequency": "62.3",
    "acceptanceRate": "0.412803811932624",
    "link": "https://leetcode.com/problems/largest-number",
    "topics": [
      "Array",
      "String",
      "Greedy",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "58.6",
    "acceptanceRate": "0.370709504473534",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Coin Change",
    "frequency": "58.6",
    "acceptanceRate": "0.46495443407851283",
    "link": "https://leetcode.com/problems/coin-change",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Meeting Rooms II",
    "frequency": "58.6",
    "acceptanceRate": "0.5214164659444622",
    "link": "https://leetcode.com/problems/meeting-rooms-ii",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Task Scheduler",
    "frequency": "58.6",
    "acceptanceRate": "0.6153909539748507",
    "link": "https://leetcode.com/problems/task-scheduler",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Palindromic Substring",
    "frequency": "58.6",
    "acceptanceRate": "0.35846104860827005",
    "link": "https://leetcode.com/problems/longest-palindromic-substring",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Window Substring",
    "frequency": "58.6",
    "acceptanceRate": "0.45350747638232236",
    "link": "https://leetcode.com/problems/minimum-window-substring",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Count Palindromic Subsequences",
    "frequency": "58.6",
    "acceptanceRate": "0.39309342421812343",
    "link": "https://leetcode.com/problems/count-palindromic-subsequences",
    "topics": [
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Validate Binary Search Tree",
    "frequency": "54.3",
    "acceptanceRate": "0.3438039571887417",
    "link": "https://leetcode.com/problems/validate-binary-search-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Top K Frequent Elements",
    "frequency": "54.3",
    "acceptanceRate": "0.6456598417590443",
    "link": "https://leetcode.com/problems/top-k-frequent-elements",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Decode Ways",
    "frequency": "54.3",
    "acceptanceRate": "0.36530982861754346",
    "link": "https://leetcode.com/problems/decode-ways",
    "topics": [
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Min Stack",
    "frequency": "54.3",
    "acceptanceRate": "0.564450954127768",
    "link": "https://leetcode.com/problems/min-stack",
    "topics": [
      "Stack",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximal Square",
    "frequency": "54.3",
    "acceptanceRate": "0.4876133314788993",
    "link": "https://leetcode.com/problems/maximal-square",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "IPO",
    "frequency": "49.0",
    "acceptanceRate": "0.5302026973246128",
    "link": "https://leetcode.com/problems/ipo",
    "topics": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Maximize Greatness of an Array",
    "frequency": "49.0",
    "acceptanceRate": "0.5864617466875623",
    "link": "https://leetcode.com/problems/maximize-greatness-of-an-array",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Product of Array Except Self",
    "frequency": "49.0",
    "acceptanceRate": "0.6777995199303269",
    "link": "https://leetcode.com/problems/product-of-array-except-self",
    "topics": [
      "Array",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Reconstruct Original Digits from English",
    "frequency": "49.0",
    "acceptanceRate": "0.5157334259339642",
    "link": "https://leetcode.com/problems/reconstruct-original-digits-from-english",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Is Subsequence",
    "frequency": "49.0",
    "acceptanceRate": "0.4838264296140033",
    "link": "https://leetcode.com/problems/is-subsequence",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
    "frequency": "49.0",
    "acceptanceRate": "0.21752369802097132",
    "link": "https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Dynamic Programming",
      "Bit Manipulation",
      "Ordered Set",
      "Bitmask"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Search in Rotated Sorted Array",
    "frequency": "49.0",
    "acceptanceRate": "0.4283722138743466",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Count Binary Substrings",
    "frequency": "49.0",
    "acceptanceRate": "0.659166376012681",
    "link": "https://leetcode.com/problems/count-binary-substrings",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Decode String",
    "frequency": "49.0",
    "acceptanceRate": "0.6115249906697672",
    "link": "https://leetcode.com/problems/decode-string",
    "topics": [
      "String",
      "Stack",
      "Recursion"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Degree of an Array",
    "frequency": "49.0",
    "acceptanceRate": "0.5742057825337067",
    "link": "https://leetcode.com/problems/degree-of-an-array",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum",
    "frequency": "49.0",
    "acceptanceRate": "0.7467468656021409",
    "link": "https://leetcode.com/problems/combination-sum",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game",
    "frequency": "49.0",
    "acceptanceRate": "0.39479197867291327",
    "link": "https://leetcode.com/problems/jump-game",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Daily Temperatures",
    "frequency": "49.0",
    "acceptanceRate": "0.6736502939048284",
    "link": "https://leetcode.com/problems/daily-temperatures",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Max Area of Island",
    "frequency": "49.0",
    "acceptanceRate": "0.7316416136206765",
    "link": "https://leetcode.com/problems/max-area-of-island",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Populating Next Right Pointers in Each Node",
    "frequency": "49.0",
    "acceptanceRate": "0.6544149639689759",
    "link": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node",
    "topics": [
      "Linked List",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Capacity To Ship Packages Within D Days",
    "frequency": "49.0",
    "acceptanceRate": "0.7211759556022923",
    "link": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days",
    "topics": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "49.0",
    "acceptanceRate": "0.5778283165036205",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "42.3",
    "acceptanceRate": "0.567741907864408",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Roman to Integer",
    "frequency": "42.3",
    "acceptanceRate": "0.6486627884371093",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Rotting Oranges",
    "frequency": "42.3",
    "acceptanceRate": "0.5661849297144634",
    "link": "https://leetcode.com/problems/rotting-oranges",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Smallest Subtree with all the Deepest Nodes",
    "frequency": "42.3",
    "acceptanceRate": "0.7247234518141739",
    "link": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes",
    "topics": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Design In-Memory File System",
    "frequency": "42.3",
    "acceptanceRate": "0.4816948941663167",
    "link": "https://leetcode.com/problems/design-in-memory-file-system",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Pow(x, n)",
    "frequency": "42.3",
    "acceptanceRate": "0.37023180307379455",
    "link": "https://leetcode.com/problems/powx-n",
    "topics": [
      "Math",
      "Recursion"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find Median from Data Stream",
    "frequency": "42.3",
    "acceptanceRate": "0.5327816407313548",
    "link": "https://leetcode.com/problems/find-median-from-data-stream",
    "topics": [
      "Two Pointers",
      "Design",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Lowest Common Ancestor of a Binary Tree",
    "frequency": "42.3",
    "acceptanceRate": "0.6675499347216417",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Move Zeroes",
    "frequency": "42.3",
    "acceptanceRate": "0.6280402658363383",
    "link": "https://leetcode.com/problems/move-zeroes",
    "topics": [
      "Array",
      "Two Pointers"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "House Robber",
    "frequency": "42.3",
    "acceptanceRate": "0.5230497484771839",
    "link": "https://leetcode.com/problems/house-robber",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Kth Smallest Element in a Sorted Matrix",
    "frequency": "42.3",
    "acceptanceRate": "0.6356660329525441",
    "link": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix",
    "topics": [
      "Array",
      "Binary Search",
      "Sorting",
      "Heap (Priority Queue)",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "frequency": "42.3",
    "acceptanceRate": "0.6683774773521286",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Maximum Difference Between Increasing Elements",
    "frequency": "42.3",
    "acceptanceRate": "0.6610062659893959",
    "link": "https://leetcode.com/problems/maximum-difference-between-increasing-elements",
    "topics": [
      "Array"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Graph Valid Tree",
    "frequency": "42.3",
    "acceptanceRate": "0.4933560205084969",
    "link": "https://leetcode.com/problems/graph-valid-tree",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Serialize and Deserialize Binary Tree",
    "frequency": "42.3",
    "acceptanceRate": "0.5896946953630543",
    "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
    "topics": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Wildcard Matching",
    "frequency": "42.3",
    "acceptanceRate": "0.2989833857244126",
    "link": "https://leetcode.com/problems/wildcard-matching",
    "topics": [
      "String",
      "Dynamic Programming",
      "Greedy",
      "Recursion"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Range Addition",
    "frequency": "42.3",
    "acceptanceRate": "0.7234787757990669",
    "link": "https://leetcode.com/problems/range-addition",
    "topics": [
      "Array",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "First Missing Positive",
    "frequency": "42.3",
    "acceptanceRate": "0.4108465766394882",
    "link": "https://leetcode.com/problems/first-missing-positive",
    "topics": [
      "Array",
      "Hash Table"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Sort Colors",
    "frequency": "33.0",
    "acceptanceRate": "0.675831142046278",
    "link": "https://leetcode.com/problems/sort-colors",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Subsets",
    "frequency": "33.0",
    "acceptanceRate": "0.808795565390318",
    "link": "https://leetcode.com/problems/subsets",
    "topics": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Path Sum",
    "frequency": "33.0",
    "acceptanceRate": "0.6648152266005115",
    "link": "https://leetcode.com/problems/minimum-path-sum",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Best Time to Buy and Sell Stock II",
    "frequency": "33.0",
    "acceptanceRate": "0.6950025067480458",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Pairs of Songs With Total Durations Divisible by 60",
    "frequency": "33.0",
    "acceptanceRate": "0.5324772640938334",
    "link": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60",
    "topics": [
      "Array",
      "Hash Table",
      "Counting"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Stream of Characters",
    "frequency": "33.0",
    "acceptanceRate": "0.5122860949942819",
    "link": "https://leetcode.com/problems/stream-of-characters",
    "topics": [
      "Array",
      "String",
      "Design",
      "Trie",
      "Data Stream"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Flatten Binary Tree to Linked List",
    "frequency": "33.0",
    "acceptanceRate": "0.6851010744073592",
    "link": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list",
    "topics": [
      "Linked List",
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Number of Matching Subsequences",
    "frequency": "33.0",
    "acceptanceRate": "0.5068902297144416",
    "link": "https://leetcode.com/problems/number-of-matching-subsequences",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Binary Search",
      "Dynamic Programming",
      "Trie",
      "Sorting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Triangle",
    "frequency": "33.0",
    "acceptanceRate": "0.5929423967075687",
    "link": "https://leetcode.com/problems/triangle",
    "topics": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "33.0",
    "acceptanceRate": "0.549918579117808",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Majority Element",
    "frequency": "33.0",
    "acceptanceRate": "0.6574028018936169",
    "link": "https://leetcode.com/problems/majority-element",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Isomorphic Strings",
    "frequency": "33.0",
    "acceptanceRate": "0.4685795790862557",
    "link": "https://leetcode.com/problems/isomorphic-strings",
    "topics": [
      "Hash Table",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "2 Keys Keyboard",
    "frequency": "33.0",
    "acceptanceRate": "0.5908827395526525",
    "link": "https://leetcode.com/problems/2-keys-keyboard",
    "topics": [
      "Math",
      "Dynamic Programming"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "The Skyline Problem",
    "frequency": "33.0",
    "acceptanceRate": "0.4396233271583687",
    "link": "https://leetcode.com/problems/the-skyline-problem",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Binary Indexed Tree",
      "Segment Tree",
      "Line Sweep",
      "Heap (Priority Queue)",
      "Ordered Set"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Majority Element II",
    "frequency": "33.0",
    "acceptanceRate": "0.5438033603743202",
    "link": "https://leetcode.com/problems/majority-element-ii",
    "topics": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Different Ways to Add Parentheses",
    "frequency": "33.0",
    "acceptanceRate": "0.7235302545489278",
    "link": "https://leetcode.com/problems/different-ways-to-add-parentheses",
    "topics": [
      "Math",
      "String",
      "Dynamic Programming",
      "Recursion",
      "Memoization"
    ]
  },
  {
    "difficulty": "Easy",
    "title": "Reverse Words in a String III",
    "frequency": "33.0",
    "acceptanceRate": "0.8365988595052404",
    "link": "https://leetcode.com/problems/reverse-words-in-a-string-iii",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Walls and Gates",
    "frequency": "33.0",
    "acceptanceRate": "0.6296791509568449",
    "link": "https://leetcode.com/problems/walls-and-gates",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "N-Queens",
    "frequency": "33.0",
    "acceptanceRate": "0.7281704967757537",
    "link": "https://leetcode.com/problems/n-queens",
    "topics": [
      "Array",
      "Backtracking"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Predict the Winner",
    "frequency": "33.0",
    "acceptanceRate": "0.5574273878146738",
    "link": "https://leetcode.com/problems/predict-the-winner",
    "topics": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Recursion",
      "Game Theory"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Longest Valid Parentheses",
    "frequency": "33.0",
    "acceptanceRate": "0.3631311456770452",
    "link": "https://leetcode.com/problems/longest-valid-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Stack"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Count Primes",
    "frequency": "33.0",
    "acceptanceRate": "0.347906460282023",
    "link": "https://leetcode.com/problems/count-primes",
    "topics": [
      "Array",
      "Math",
      "Enumeration",
      "Number Theory"
    ]
  }
]
