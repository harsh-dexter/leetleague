[
  {
    "difficulty": "Medium",
    "title": "Time Based Key-Value Store",
    "frequency": "100.0",
    "acceptanceRate": "0.49366304491851065",
    "link": "https://leetcode.com/problems/time-based-key-value-store",
    "topics": [
      "Hash Table",
      "String",
      "Binary Search",
      "Design"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Read N Characters Given read4 II - Call Multiple Times",
    "frequency": "94.9",
    "acceptanceRate": "0.42905969922527715",
    "link": "https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times",
    "topics": [
      "Array",
      "Simulation",
      "Interactive"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Window Substring",
    "frequency": "94.9",
    "acceptanceRate": "0.45350682478059534",
    "link": "https://leetcode.com/problems/minimum-window-substring",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Rotting Oranges",
    "frequency": "93.7",
    "acceptanceRate": "0.5661841837717154",
    "link": "https://leetcode.com/problems/rotting-oranges",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Max Stack",
    "frequency": "78.2",
    "acceptanceRate": "0.4553192278942039",
    "link": "https://leetcode.com/problems/max-stack",
    "topics": [
      "Linked List",
      "Stack",
      "Design",
      "Doubly-Linked List",
      "Ordered Set"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Range Sum Query 2D - Immutable",
    "frequency": "78.2",
    "acceptanceRate": "0.5652765632997782",
    "link": "https://leetcode.com/problems/range-sum-query-2d-immutable",
    "topics": [
      "Array",
      "Design",
      "Matrix",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Min Stack",
    "frequency": "68.5",
    "acceptanceRate": "0.5644517299387589",
    "link": "https://leetcode.com/problems/min-stack",
    "topics": [
      "Stack",
      "Design"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "63.8",
    "acceptanceRate": "0.36936157346298143",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Longest Consecutive Sequence",
    "frequency": "63.8",
    "acceptanceRate": "0.4704086761606057",
    "link": "https://leetcode.com/problems/longest-consecutive-sequence",
    "topics": [
      "Array",
      "Hash Table",
      "Union Find"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Word Ladder II",
    "frequency": "57.9",
    "acceptanceRate": "0.271526407856053",
    "link": "https://leetcode.com/problems/word-ladder-ii",
    "topics": [
      "Hash Table",
      "String",
      "Backtracking",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Meeting Rooms II",
    "frequency": "57.9",
    "acceptanceRate": "0.5214181010083032",
    "link": "https://leetcode.com/problems/meeting-rooms-ii",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Water and Jug Problem",
    "frequency": "57.9",
    "acceptanceRate": "0.43087157499369977",
    "link": "https://leetcode.com/problems/water-and-jug-problem",
    "topics": [
      "Math",
      "Depth-First Search",
      "Breadth-First Search"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Asteroid Collision",
    "frequency": "57.9",
    "acceptanceRate": "0.4550055560010539",
    "link": "https://leetcode.com/problems/asteroid-collision",
    "topics": [
      "Array",
      "Stack",
      "Simulation"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Implement Trie (Prefix Tree)",
    "frequency": "57.9",
    "acceptanceRate": "0.6793485897950162",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Process Tasks Using Servers",
    "frequency": "49.6",
    "acceptanceRate": "0.4114853370058328",
    "link": "https://leetcode.com/problems/process-tasks-using-servers",
    "topics": [
      "Array",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Car Pooling",
    "frequency": "49.6",
    "acceptanceRate": "0.5604938783980079",
    "link": "https://leetcode.com/problems/car-pooling",
    "topics": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)",
      "Simulation",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "String Compression",
    "frequency": "49.6",
    "acceptanceRate": "0.580915717497265",
    "link": "https://leetcode.com/problems/string-compression",
    "topics": [
      "Two Pointers",
      "String"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Smallest Range Covering Elements from K Lists",
    "frequency": "49.6",
    "acceptanceRate": "0.6974692747987687",
    "link": "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sliding Window",
      "Sorting",
      "Heap (Priority Queue)"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Convert Sorted List to Binary Search Tree",
    "frequency": "49.6",
    "acceptanceRate": "0.6445920225309912",
    "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Find Minimum Time to Finish All Jobs",
    "frequency": "49.6",
    "acceptanceRate": "0.43518588531821045",
    "link": "https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ]
  },
  {
    "difficulty": "Medium",
    "title": "Product of Array Except Self",
    "frequency": "49.6",
    "acceptanceRate": "0.6777996139428187",
    "link": "https://leetcode.com/problems/product-of-array-except-self",
    "topics": [
      "Array",
      "Prefix Sum"
    ]
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Candies You Can Get from Boxes",
    "frequency": "49.6",
    "acceptanceRate": "0.687707430504175",
    "link": "https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Graph"
    ]
  }
]
