[
  {
    "difficulty": "Hard",
    "title": "Max Stack",
    "frequency": "100.0",
    "acceptanceRate": "0.4553177840865414",
    "link": "https://leetcode.com/problems/max-stack",
    "topics": [
      "Linked List",
      "Stack",
      "Design",
      "Doubly-Linked List",
      "Ordered Set"
    ],
    "id": "LinkedIn-Max Stack",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "All O`one Data Structure",
    "frequency": "93.9",
    "acceptanceRate": "0.44134779761452186",
    "link": "https://leetcode.com/problems/all-oone-data-structure",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "LinkedIn-All O`one Data Structure",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Max Consecutive Ones III",
    "frequency": "76.7",
    "acceptanceRate": "0.6593934025174093",
    "link": "https://leetcode.com/problems/max-consecutive-ones-iii",
    "topics": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "id": "LinkedIn-Max Consecutive Ones III",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Word Ladder",
    "frequency": "70.6",
    "acceptanceRate": "0.42811826737370073",
    "link": "https://leetcode.com/problems/word-ladder",
    "topics": [
      "Hash Table",
      "String",
      "Breadth-First Search"
    ],
    "id": "LinkedIn-Word Ladder",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Nested List Weight Sum II",
    "frequency": "62.0",
    "acceptanceRate": "0.6557146449899617",
    "link": "https://leetcode.com/problems/nested-list-weight-sum-ii",
    "topics": [
      "Stack",
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "id": "LinkedIn-Nested List Weight Sum II",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Kth Smallest Product of Two Sorted Arrays",
    "frequency": "62.0",
    "acceptanceRate": "0.3093643144234038",
    "link": "https://leetcode.com/problems/kth-smallest-product-of-two-sorted-arrays",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "LinkedIn-Kth Smallest Product of Two Sorted Arrays",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Letter Combinations of a Phone Number",
    "frequency": "62.0",
    "acceptanceRate": "0.6385756647080152",
    "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
    "topics": [
      "Hash Table",
      "String",
      "Backtracking"
    ],
    "id": "LinkedIn-Letter Combinations of a Phone Number",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Process Tasks Using Servers",
    "frequency": "62.0",
    "acceptanceRate": "0.4114853370058328",
    "link": "https://leetcode.com/problems/process-tasks-using-servers",
    "topics": [
      "Array",
      "Heap (Priority Queue)"
    ],
    "id": "LinkedIn-Process Tasks Using Servers",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Closest Binary Search Tree Value II",
    "frequency": "62.0",
    "acceptanceRate": "0.6026240281377268",
    "link": "https://leetcode.com/problems/closest-binary-search-tree-value-ii",
    "topics": [
      "Two Pointers",
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Heap (Priority Queue)",
      "Binary Tree"
    ],
    "id": "LinkedIn-Closest Binary Search Tree Value II",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "62.0",
    "acceptanceRate": "0.549918579117808",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "id": "LinkedIn-Insert Delete GetRandom O(1)",
    "company": "LinkedIn",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Pow(x, n)",
    "frequency": "79.9",
    "acceptanceRate": "0.37023180307379455",
    "link": "https://leetcode.com/problems/powx-n",
    "topics": [
      "Math",
      "Recursion"
    ],
    "id": "LinkedIn-Pow(x, n)",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Sort Transformed Array",
    "frequency": "73.2",
    "acceptanceRate": "0.5709273741238992",
    "link": "https://leetcode.com/problems/sort-transformed-array",
    "topics": [
      "Array",
      "Math",
      "Two Pointers",
      "Sorting"
    ],
    "id": "LinkedIn-Sort Transformed Array",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Nested List Weight Sum",
    "frequency": "66.0",
    "acceptanceRate": "0.8554000344037734",
    "link": "https://leetcode.com/problems/nested-list-weight-sum",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search"
    ],
    "id": "LinkedIn-Nested List Weight Sum",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Find the Celebrity",
    "frequency": "66.0",
    "acceptanceRate": "0.48438403563355176",
    "link": "https://leetcode.com/problems/find-the-celebrity",
    "topics": [
      "Two Pointers",
      "Graph",
      "Interactive"
    ],
    "id": "LinkedIn-Find the Celebrity",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Find Leaves of Binary Tree",
    "frequency": "66.0",
    "acceptanceRate": "0.810721302930833",
    "link": "https://leetcode.com/problems/find-leaves-of-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Find Leaves of Binary Tree",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "62.9",
    "acceptanceRate": "0.6231992538801062",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "LinkedIn-Number of Islands",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Shortest Word Distance II",
    "frequency": "62.9",
    "acceptanceRate": "0.621334883686483",
    "link": "https://leetcode.com/problems/shortest-word-distance-ii",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "String",
      "Design"
    ],
    "id": "LinkedIn-Shortest Word Distance II",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Upside Down",
    "frequency": "59.2",
    "acceptanceRate": "0.6450428958113502",
    "link": "https://leetcode.com/problems/binary-tree-upside-down",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Binary Tree Upside Down",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Longest Valid Parentheses",
    "frequency": "59.2",
    "acceptanceRate": "0.3631311456770452",
    "link": "https://leetcode.com/problems/longest-valid-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Stack"
    ],
    "id": "LinkedIn-Longest Valid Parentheses",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Palindromic Subsequence",
    "frequency": "59.2",
    "acceptanceRate": "0.6409934421654807",
    "link": "https://leetcode.com/problems/longest-palindromic-subsequence",
    "topics": [
      "String",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Longest Palindromic Subsequence",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Exclusive Time of Functions",
    "frequency": "59.2",
    "acceptanceRate": "0.6479177009848633",
    "link": "https://leetcode.com/problems/exclusive-time-of-functions",
    "topics": [
      "Array",
      "Stack"
    ],
    "id": "LinkedIn-Exclusive Time of Functions",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "54.8",
    "acceptanceRate": "0.42322822762811346",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ],
    "id": "LinkedIn-Valid Parentheses",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Easy",
    "title": "Can Place Flowers",
    "frequency": "54.8",
    "acceptanceRate": "0.2889926055078509",
    "link": "https://leetcode.com/problems/can-place-flowers",
    "topics": [
      "Array",
      "Greedy"
    ],
    "id": "LinkedIn-Can Place Flowers",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Find First and Last Position of Element in Sorted Array",
    "frequency": "54.8",
    "acceptanceRate": "0.4682874104872264",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "LinkedIn-Find First and Last Position of Element in Sorted Array",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Paint House",
    "frequency": "54.8",
    "acceptanceRate": "0.6373080782394743",
    "link": "https://leetcode.com/problems/paint-house",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Paint House",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Window Substring",
    "frequency": "54.8",
    "acceptanceRate": "0.45350747638232236",
    "link": "https://leetcode.com/problems/minimum-window-substring",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "id": "LinkedIn-Minimum Window Substring",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Count Integers in Intervals",
    "frequency": "54.8",
    "acceptanceRate": "0.34161250608411836",
    "link": "https://leetcode.com/problems/count-integers-in-intervals",
    "topics": [
      "Design",
      "Segment Tree",
      "Ordered Set"
    ],
    "id": "LinkedIn-Count Integers in Intervals",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Edit Distance",
    "frequency": "49.0",
    "acceptanceRate": "0.5878976197609908",
    "link": "https://leetcode.com/problems/edit-distance",
    "topics": [
      "String",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Edit Distance",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Accounts Merge",
    "frequency": "49.0",
    "acceptanceRate": "0.5957992244722102",
    "link": "https://leetcode.com/problems/accounts-merge",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Sorting"
    ],
    "id": "LinkedIn-Accounts Merge",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Find K Closest Elements",
    "frequency": "49.0",
    "acceptanceRate": "0.486686656754684",
    "link": "https://leetcode.com/problems/find-k-closest-elements",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "LinkedIn-Find K Closest Elements",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Serialize and Deserialize Binary Tree",
    "frequency": "49.0",
    "acceptanceRate": "0.5896946953630543",
    "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
    "topics": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ],
    "id": "LinkedIn-Serialize and Deserialize Binary Tree",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Paint House II",
    "frequency": "49.0",
    "acceptanceRate": "0.5641459705615923",
    "link": "https://leetcode.com/problems/paint-house-ii",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Paint House II",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Subarray",
    "frequency": "49.0",
    "acceptanceRate": "0.5209977640581438",
    "link": "https://leetcode.com/problems/maximum-subarray",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Maximum Subarray",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Product Subarray",
    "frequency": "49.0",
    "acceptanceRate": "0.34941614794619197",
    "link": "https://leetcode.com/problems/maximum-product-subarray",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Maximum Product Subarray",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Flatten Nested List Iterator",
    "frequency": "49.0",
    "acceptanceRate": "0.6522839525510098",
    "link": "https://leetcode.com/problems/flatten-nested-list-iterator",
    "topics": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Design",
      "Queue",
      "Iterator"
    ],
    "id": "LinkedIn-Flatten Nested List Iterator",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Search in Rotated Sorted Array",
    "frequency": "49.0",
    "acceptanceRate": "0.4283722138743466",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "LinkedIn-Search in Rotated Sorted Array",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Find K Pairs with Smallest Sums",
    "frequency": "49.0",
    "acceptanceRate": "0.4069636992721836",
    "link": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums",
    "topics": [
      "Array",
      "Heap (Priority Queue)"
    ],
    "id": "LinkedIn-Find K Pairs with Smallest Sums",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Partition to K Equal Sum Subsets",
    "frequency": "49.0",
    "acceptanceRate": "0.3812602522279146",
    "link": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Memoization",
      "Bitmask"
    ],
    "id": "LinkedIn-Partition to K Equal Sum Subsets",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Bulb Switcher",
    "frequency": "40.9",
    "acceptanceRate": "0.540826122720978",
    "link": "https://leetcode.com/problems/bulb-switcher",
    "topics": [
      "Math",
      "Brainteaser"
    ],
    "id": "LinkedIn-Bulb Switcher",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Factor Combinations",
    "frequency": "40.9",
    "acceptanceRate": "0.5024211255576286",
    "link": "https://leetcode.com/problems/factor-combinations",
    "topics": [
      "Backtracking"
    ],
    "id": "LinkedIn-Factor Combinations",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Lowest Common Ancestor of a Binary Search Tree",
    "frequency": "40.9",
    "acceptanceRate": "0.6831070323134043",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "id": "LinkedIn-Lowest Common Ancestor of a Binary Search Tree",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum",
    "frequency": "40.9",
    "acceptanceRate": "0.7467468656021409",
    "link": "https://leetcode.com/problems/combination-sum",
    "topics": [
      "Array",
      "Backtracking"
    ],
    "id": "LinkedIn-Combination Sum",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Easy",
    "title": "Isomorphic Strings",
    "frequency": "40.9",
    "acceptanceRate": "0.4685795790862557",
    "link": "https://leetcode.com/problems/isomorphic-strings",
    "topics": [
      "Hash Table",
      "String"
    ],
    "id": "LinkedIn-Isomorphic Strings",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Graph Valid Tree",
    "frequency": "40.9",
    "acceptanceRate": "0.4933560205084969",
    "link": "https://leetcode.com/problems/graph-valid-tree",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "id": "LinkedIn-Graph Valid Tree",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Word Ladder II",
    "frequency": "40.9",
    "acceptanceRate": "0.27152610758453916",
    "link": "https://leetcode.com/problems/word-ladder-ii",
    "topics": [
      "Hash Table",
      "String",
      "Backtracking",
      "Breadth-First Search"
    ],
    "id": "LinkedIn-Word Ladder II",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Easy",
    "title": "Symmetric Tree",
    "frequency": "40.9",
    "acceptanceRate": "0.5927867908424697",
    "link": "https://leetcode.com/problems/symmetric-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Symmetric Tree",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Knight Moves",
    "frequency": "40.9",
    "acceptanceRate": "0.41329156777804593",
    "link": "https://leetcode.com/problems/minimum-knight-moves",
    "topics": [
      "Breadth-First Search"
    ],
    "id": "LinkedIn-Minimum Knight Moves",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Cinema Seat Allocation",
    "frequency": "40.9",
    "acceptanceRate": "0.428224012806009",
    "link": "https://leetcode.com/problems/cinema-seat-allocation",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Bit Manipulation"
    ],
    "id": "LinkedIn-Cinema Seat Allocation",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Lowest Common Ancestor of a Binary Tree III",
    "frequency": "40.9",
    "acceptanceRate": "0.8246671008016527",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree-iii",
    "topics": [
      "Hash Table",
      "Two Pointers",
      "Tree",
      "Binary Tree"
    ],
    "id": "LinkedIn-Lowest Common Ancestor of a Binary Tree III",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Kth Largest Element in an Array",
    "frequency": "40.9",
    "acceptanceRate": "0.6797700833982673",
    "link": "https://leetcode.com/problems/kth-largest-element-in-an-array",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ],
    "id": "LinkedIn-Kth Largest Element in an Array",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Robot Room Cleaner",
    "frequency": "40.9",
    "acceptanceRate": "0.7752279751307165",
    "link": "https://leetcode.com/problems/robot-room-cleaner",
    "topics": [
      "Backtracking",
      "Interactive"
    ],
    "id": "LinkedIn-Robot Room Cleaner",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Task Scheduler",
    "frequency": "40.9",
    "acceptanceRate": "0.6153909539748507",
    "link": "https://leetcode.com/problems/task-scheduler",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ],
    "id": "LinkedIn-Task Scheduler",
    "company": "LinkedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Maximize Subarrays After Removing One Conflicting Pair",
    "frequency": "65.1",
    "acceptanceRate": "0.3245154211873704",
    "link": "https://leetcode.com/problems/maximize-subarrays-after-removing-one-conflicting-pair",
    "topics": [
      "Array",
      "Segment Tree",
      "Enumeration",
      "Prefix Sum"
    ],
    "id": "LinkedIn-Maximize Subarrays After Removing One Conflicting Pair",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Max Area of Island",
    "frequency": "53.2",
    "acceptanceRate": "0.7316416136206765",
    "link": "https://leetcode.com/problems/max-area-of-island",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "LinkedIn-Max Area of Island",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Sqrt(x)",
    "frequency": "53.2",
    "acceptanceRate": "0.40371786897905787",
    "link": "https://leetcode.com/problems/sqrtx",
    "topics": [
      "Math",
      "Binary Search"
    ],
    "id": "LinkedIn-Sqrt(x)",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Shortest Word Distance",
    "frequency": "49.7",
    "acceptanceRate": "0.6594968094700921",
    "link": "https://leetcode.com/problems/shortest-word-distance",
    "topics": [
      "Array",
      "String"
    ],
    "id": "LinkedIn-Shortest Word Distance",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Second Minimum Node In a Binary Tree",
    "frequency": "45.3",
    "acceptanceRate": "0.4532741603206002",
    "link": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Second Minimum Node In a Binary Tree",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Connected Components in an Undirected Graph",
    "frequency": "45.3",
    "acceptanceRate": "0.6420086435906586",
    "link": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "id": "LinkedIn-Number of Connected Components in an Undirected Graph",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Maximum Depth of Binary Tree",
    "frequency": "45.3",
    "acceptanceRate": "0.7713814396646365",
    "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Maximum Depth of Binary Tree",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Divisible Triplet Sums",
    "frequency": "45.3",
    "acceptanceRate": "0.6780637725701113",
    "link": "https://leetcode.com/problems/number-of-divisible-triplet-sums",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "id": "LinkedIn-Number of Divisible Triplet Sums",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Can I Win",
    "frequency": "39.7",
    "acceptanceRate": "0.30377970685287237",
    "link": "https://leetcode.com/problems/can-i-win",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Bit Manipulation",
      "Memoization",
      "Game Theory",
      "Bitmask"
    ],
    "id": "LinkedIn-Can I Win",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Repeated DNA Sequences",
    "frequency": "39.7",
    "acceptanceRate": "0.5132022978148232",
    "link": "https://leetcode.com/problems/repeated-dna-sequences",
    "topics": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ],
    "id": "LinkedIn-Repeated DNA Sequences",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Shortest Word Distance III",
    "frequency": "39.7",
    "acceptanceRate": "0.5910015691072046",
    "link": "https://leetcode.com/problems/shortest-word-distance-iii",
    "topics": [
      "Array",
      "String"
    ],
    "id": "LinkedIn-Shortest Word Distance III",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Intersection of Two Linked Lists",
    "frequency": "39.7",
    "acceptanceRate": "0.6112536319835228",
    "link": "https://leetcode.com/problems/intersection-of-two-linked-lists",
    "topics": [
      "Hash Table",
      "Linked List",
      "Two Pointers"
    ],
    "id": "LinkedIn-Intersection of Two Linked Lists",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Rotate List",
    "frequency": "39.7",
    "acceptanceRate": "0.3994476663735721",
    "link": "https://leetcode.com/problems/rotate-list",
    "topics": [
      "Linked List",
      "Two Pointers"
    ],
    "id": "LinkedIn-Rotate List",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Valid Number",
    "frequency": "39.7",
    "acceptanceRate": "0.21563512503115395",
    "link": "https://leetcode.com/problems/valid-number",
    "topics": [
      "String"
    ],
    "id": "LinkedIn-Valid Number",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "39.7",
    "acceptanceRate": "0.45214550965761185",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "LinkedIn-LRU Cache",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Find Smallest Letter Greater Than Target",
    "frequency": "39.7",
    "acceptanceRate": "0.5407901782986692",
    "link": "https://leetcode.com/problems/find-smallest-letter-greater-than-target",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "LinkedIn-Find Smallest Letter Greater Than Target",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
    "frequency": "39.7",
    "acceptanceRate": "0.3577149824563679",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "id": "LinkedIn-Insert Delete GetRandom O(1) - Duplicates allowed",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Possible Bipartition",
    "frequency": "39.7",
    "acceptanceRate": "0.5150773648728767",
    "link": "https://leetcode.com/problems/possible-bipartition",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "id": "LinkedIn-Possible Bipartition",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Valid Parenthesis String",
    "frequency": "39.7",
    "acceptanceRate": "0.3890940168170698",
    "link": "https://leetcode.com/problems/valid-parenthesis-string",
    "topics": [
      "String",
      "Dynamic Programming",
      "Stack",
      "Greedy"
    ],
    "id": "LinkedIn-Valid Parenthesis String",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Min Stack",
    "frequency": "32.0",
    "acceptanceRate": "0.564450954127768",
    "link": "https://leetcode.com/problems/min-stack",
    "topics": [
      "Stack",
      "Design"
    ],
    "id": "LinkedIn-Min Stack",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule II",
    "frequency": "32.0",
    "acceptanceRate": "0.5342350291611208",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "id": "LinkedIn-Course Schedule II",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "32.0",
    "acceptanceRate": "0.49395267933200643",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ],
    "id": "LinkedIn-Merge Intervals",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Lowest Common Ancestor of a Binary Tree",
    "frequency": "32.0",
    "acceptanceRate": "0.6675499347216417",
    "link": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Lowest Common Ancestor of a Binary Tree",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Shuffle an Array",
    "frequency": "32.0",
    "acceptanceRate": "0.5904289804092742",
    "link": "https://leetcode.com/problems/shuffle-an-array",
    "topics": [
      "Array",
      "Math",
      "Design",
      "Randomized"
    ],
    "id": "LinkedIn-Shuffle an Array",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Largest Color Value in a Directed Graph",
    "frequency": "32.0",
    "acceptanceRate": "0.5767873323761725",
    "link": "https://leetcode.com/problems/largest-color-value-in-a-directed-graph",
    "topics": [
      "Hash Table",
      "Dynamic Programming",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Counting"
    ],
    "id": "LinkedIn-Largest Color Value in a Directed Graph",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Number of Visible People in a Queue",
    "frequency": "32.0",
    "acceptanceRate": "0.7129632743660456",
    "link": "https://leetcode.com/problems/number-of-visible-people-in-a-queue",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "LinkedIn-Number of Visible People in a Queue",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Delete Node in a BST",
    "frequency": "32.0",
    "acceptanceRate": "0.5299282336051427",
    "link": "https://leetcode.com/problems/delete-node-in-a-bst",
    "topics": [
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "id": "LinkedIn-Delete Node in a BST",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Dot Product of Two Sparse Vectors",
    "frequency": "32.0",
    "acceptanceRate": "0.899342220834228",
    "link": "https://leetcode.com/problems/dot-product-of-two-sparse-vectors",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Design"
    ],
    "id": "LinkedIn-Dot Product of Two Sparse Vectors",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Expression Add Operators",
    "frequency": "32.0",
    "acceptanceRate": "0.4167625219870472",
    "link": "https://leetcode.com/problems/expression-add-operators",
    "topics": [
      "Math",
      "String",
      "Backtracking"
    ],
    "id": "LinkedIn-Expression Add Operators",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "32.0",
    "acceptanceRate": "0.5577699379132833",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "id": "LinkedIn-Two Sum",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Koko Eating Bananas",
    "frequency": "32.0",
    "acceptanceRate": "0.49067301427387977",
    "link": "https://leetcode.com/problems/koko-eating-bananas",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "LinkedIn-Koko Eating Bananas",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Partition Labels",
    "frequency": "32.0",
    "acceptanceRate": "0.8153346802689039",
    "link": "https://leetcode.com/problems/partition-labels",
    "topics": [
      "Hash Table",
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "id": "LinkedIn-Partition Labels",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Random Pick with Weight",
    "frequency": "32.0",
    "acceptanceRate": "0.4827836751158982",
    "link": "https://leetcode.com/problems/random-pick-with-weight",
    "topics": [
      "Array",
      "Math",
      "Binary Search",
      "Prefix Sum",
      "Randomized"
    ],
    "id": "LinkedIn-Random Pick with Weight",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "01 Matrix",
    "frequency": "32.0",
    "acceptanceRate": "0.5147655368812064",
    "link": "https://leetcode.com/problems/01-matrix",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search",
      "Matrix"
    ],
    "id": "LinkedIn-01 Matrix",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Closest Leaf in a Binary Tree",
    "frequency": "32.0",
    "acceptanceRate": "0.4704793196402153",
    "link": "https://leetcode.com/problems/closest-leaf-in-a-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Closest Leaf in a Binary Tree",
    "company": "LinkedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Design Authentication Manager",
    "frequency": "77.8",
    "acceptanceRate": "0.5785423458465672",
    "link": "https://leetcode.com/problems/design-authentication-manager",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "LinkedIn-Design Authentication Manager",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Building H2O",
    "frequency": "64.8",
    "acceptanceRate": "0.5758696646024687",
    "link": "https://leetcode.com/problems/building-h2o",
    "topics": [
      "Concurrency"
    ],
    "id": "LinkedIn-Building H2O",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Find Pivot Index",
    "frequency": "59.1",
    "acceptanceRate": "0.6057028214719556",
    "link": "https://leetcode.com/problems/find-pivot-index",
    "topics": [
      "Array",
      "Prefix Sum"
    ],
    "id": "LinkedIn-Find Pivot Index",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Valid Perfect Square",
    "frequency": "56.7",
    "acceptanceRate": "0.4418959712096306",
    "link": "https://leetcode.com/problems/valid-perfect-square",
    "topics": [
      "Math",
      "Binary Search"
    ],
    "id": "LinkedIn-Valid Perfect Square",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Max Points on a Line",
    "frequency": "54.1",
    "acceptanceRate": "0.2895514653845652",
    "link": "https://leetcode.com/problems/max-points-on-a-line",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Geometry"
    ],
    "id": "LinkedIn-Max Points on a Line",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Valid Triangle Number",
    "frequency": "54.1",
    "acceptanceRate": "0.5234449388412803",
    "link": "https://leetcode.com/problems/valid-triangle-number",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "id": "LinkedIn-Valid Triangle Number",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Level Order Traversal",
    "frequency": "51.0",
    "acceptanceRate": "0.7059658947038693",
    "link": "https://leetcode.com/problems/binary-tree-level-order-traversal",
    "topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Binary Tree Level Order Traversal",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Design Bounded Blocking Queue",
    "frequency": "51.0",
    "acceptanceRate": "0.7299444681759931",
    "link": "https://leetcode.com/problems/design-bounded-blocking-queue",
    "topics": [
      "Concurrency"
    ],
    "id": "LinkedIn-Design Bounded Blocking Queue",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Evaluate Reverse Polish Notation",
    "frequency": "51.0",
    "acceptanceRate": "0.5495024017596329",
    "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation",
    "topics": [
      "Array",
      "Math",
      "Stack"
    ],
    "id": "LinkedIn-Evaluate Reverse Polish Notation",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "House Robber",
    "frequency": "51.0",
    "acceptanceRate": "0.5230498335398295",
    "link": "https://leetcode.com/problems/house-robber",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-House Robber",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Design HashMap",
    "frequency": "47.4",
    "acceptanceRate": "0.6589390156242249",
    "link": "https://leetcode.com/problems/design-hashmap",
    "topics": [
      "Array",
      "Hash Table",
      "Linked List",
      "Design",
      "Hash Function"
    ],
    "id": "LinkedIn-Design HashMap",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Robot Bounded In Circle",
    "frequency": "47.4",
    "acceptanceRate": "0.5622965278408281",
    "link": "https://leetcode.com/problems/robot-bounded-in-circle",
    "topics": [
      "Math",
      "String",
      "Simulation"
    ],
    "id": "LinkedIn-Robot Bounded In Circle",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Fizz Buzz",
    "frequency": "43.0",
    "acceptanceRate": "0.7437054757275476",
    "link": "https://leetcode.com/problems/fizz-buzz",
    "topics": [
      "Math",
      "String",
      "Simulation"
    ],
    "id": "LinkedIn-Fizz Buzz",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Palindromic Substring",
    "frequency": "43.0",
    "acceptanceRate": "0.35846104860827005",
    "link": "https://leetcode.com/problems/longest-palindromic-substring",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Longest Palindromic Substring",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Merge Two Sorted Lists",
    "frequency": "43.0",
    "acceptanceRate": "0.6684089226593315",
    "link": "https://leetcode.com/problems/merge-two-sorted-lists",
    "topics": [
      "Linked List",
      "Recursion"
    ],
    "id": "LinkedIn-Merge Two Sorted Lists",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Intersection of Two Arrays",
    "frequency": "43.0",
    "acceptanceRate": "0.7647430672399825",
    "link": "https://leetcode.com/problems/intersection-of-two-arrays",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Binary Search",
      "Sorting"
    ],
    "id": "LinkedIn-Intersection of Two Arrays",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Merge Sorted Array",
    "frequency": "43.0",
    "acceptanceRate": "0.5291952521829845",
    "link": "https://leetcode.com/problems/merge-sorted-array",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "LinkedIn-Merge Sorted Array",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "frequency": "43.0",
    "acceptanceRate": "0.6168283891746636",
    "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
    "topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Binary Tree Zigzag Level Order Traversal",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Integer to Roman",
    "frequency": "43.0",
    "acceptanceRate": "0.6861928580376627",
    "link": "https://leetcode.com/problems/integer-to-roman",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ],
    "id": "LinkedIn-Integer to Roman",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "37.4",
    "acceptanceRate": "0.5677420052593406",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ],
    "id": "LinkedIn-Merge k Sorted Lists",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "House Robber IV",
    "frequency": "37.4",
    "acceptanceRate": "0.6516200246079688",
    "link": "https://leetcode.com/problems/house-robber-iv",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "LinkedIn-House Robber IV",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Valid Sudoku",
    "frequency": "37.4",
    "acceptanceRate": "0.6227675793740958",
    "link": "https://leetcode.com/problems/valid-sudoku",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "id": "LinkedIn-Valid Sudoku",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "37.4",
    "acceptanceRate": "0.36936173184826904",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "id": "LinkedIn-Longest Substring Without Repeating Characters",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Diameter of Binary Tree",
    "frequency": "37.4",
    "acceptanceRate": "0.6358636823587297",
    "link": "https://leetcode.com/problems/diameter-of-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Diameter of Binary Tree",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Palindromic Substrings",
    "frequency": "37.4",
    "acceptanceRate": "0.7167859571435372",
    "link": "https://leetcode.com/problems/palindromic-substrings",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Palindromic Substrings",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "K Closest Points to Origin",
    "frequency": "37.4",
    "acceptanceRate": "0.6793958596907643",
    "link": "https://leetcode.com/problems/k-closest-points-to-origin",
    "topics": [
      "Array",
      "Math",
      "Divide and Conquer",
      "Geometry",
      "Sorting",
      "Heap (Priority Queue)",
      "Quickselect"
    ],
    "id": "LinkedIn-K Closest Points to Origin",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Median of Two Sorted Arrays",
    "frequency": "37.4",
    "acceptanceRate": "0.43814598750115397",
    "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
    "topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer"
    ],
    "id": "LinkedIn-Median of Two Sorted Arrays",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Find Largest Value in Each Tree Row",
    "frequency": "29.6",
    "acceptanceRate": "0.6627273661494193",
    "link": "https://leetcode.com/problems/find-largest-value-in-each-tree-row",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Find Largest Value in Each Tree Row",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Next Permutation",
    "frequency": "29.6",
    "acceptanceRate": "0.4305775328017951",
    "link": "https://leetcode.com/problems/next-permutation",
    "topics": [
      "Array",
      "Two Pointers"
    ],
    "id": "LinkedIn-Next Permutation",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Minimum Time to Type Word Using Special Typewriter",
    "frequency": "29.6",
    "acceptanceRate": "0.7771306948017184",
    "link": "https://leetcode.com/problems/minimum-time-to-type-word-using-special-typewriter",
    "topics": [
      "String",
      "Greedy"
    ],
    "id": "LinkedIn-Minimum Time to Type Word Using Special Typewriter",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Sum of All Odd Length Subarrays",
    "frequency": "29.6",
    "acceptanceRate": "0.835186957887891",
    "link": "https://leetcode.com/problems/sum-of-all-odd-length-subarrays",
    "topics": [
      "Array",
      "Math",
      "Prefix Sum"
    ],
    "id": "LinkedIn-Sum of All Odd Length Subarrays",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Validate Binary Search Tree",
    "frequency": "29.6",
    "acceptanceRate": "0.3438039571887417",
    "link": "https://leetcode.com/problems/validate-binary-search-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "id": "LinkedIn-Validate Binary Search Tree",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "House Robber II",
    "frequency": "29.6",
    "acceptanceRate": "0.43562736352699327",
    "link": "https://leetcode.com/problems/house-robber-ii",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-House Robber II",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Maximize Total Tastiness of Purchased Fruits",
    "frequency": "29.6",
    "acceptanceRate": "0.6449090909090909",
    "link": "https://leetcode.com/problems/maximize-total-tastiness-of-purchased-fruits",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Maximize Total Tastiness of Purchased Fruits",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Design Add and Search Words Data Structure",
    "frequency": "29.6",
    "acceptanceRate": "0.47066560985497075",
    "link": "https://leetcode.com/problems/design-add-and-search-words-data-structure",
    "topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ],
    "id": "LinkedIn-Design Add and Search Words Data Structure",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Create Binary Tree From Descriptions",
    "frequency": "29.6",
    "acceptanceRate": "0.8164001540301169",
    "link": "https://leetcode.com/problems/create-binary-tree-from-descriptions",
    "topics": [
      "Array",
      "Hash Table",
      "Tree",
      "Binary Tree"
    ],
    "id": "LinkedIn-Create Binary Tree From Descriptions",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Profit in Job Scheduling",
    "frequency": "29.6",
    "acceptanceRate": "0.5441759218125277",
    "link": "https://leetcode.com/problems/maximum-profit-in-job-scheduling",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "id": "LinkedIn-Maximum Profit in Job Scheduling",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "29.6",
    "acceptanceRate": "0.552596541931788",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "LinkedIn-Best Time to Buy and Sell Stock",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Moving Average from Data Stream",
    "frequency": "29.6",
    "acceptanceRate": "0.7993882465731537",
    "link": "https://leetcode.com/problems/moving-average-from-data-stream",
    "topics": [
      "Array",
      "Design",
      "Queue",
      "Data Stream"
    ],
    "id": "LinkedIn-Moving Average from Data Stream",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Same Tree",
    "frequency": "29.6",
    "acceptanceRate": "0.6512686619125213",
    "link": "https://leetcode.com/problems/same-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "LinkedIn-Same Tree",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
    "frequency": "29.6",
    "acceptanceRate": "0.7023384374541363",
    "link": "https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
    "topics": [
      "Array",
      "Sliding Window"
    ],
    "id": "LinkedIn-Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
    "company": "LinkedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Permutations II",
    "frequency": "54.9",
    "acceptanceRate": "0.615917727605333",
    "link": "https://leetcode.com/problems/permutations-ii",
    "topics": [
      "Array",
      "Backtracking",
      "Sorting"
    ],
    "id": "LinkedIn-Permutations II",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Permutations",
    "frequency": "54.9",
    "acceptanceRate": "0.8066011364163758",
    "link": "https://leetcode.com/problems/permutations",
    "topics": [
      "Array",
      "Backtracking"
    ],
    "id": "LinkedIn-Permutations",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Sparse Matrix Multiplication",
    "frequency": "53.4",
    "acceptanceRate": "0.6892226639833767",
    "link": "https://leetcode.com/problems/sparse-matrix-multiplication",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "id": "LinkedIn-Sparse Matrix Multiplication",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Product of Array Except Self",
    "frequency": "51.8",
    "acceptanceRate": "0.6777995199303269",
    "link": "https://leetcode.com/problems/product-of-array-except-self",
    "topics": [
      "Array",
      "Prefix Sum"
    ],
    "id": "LinkedIn-Product of Array Except Self",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Hard",
    "title": "Text Justification",
    "frequency": "51.8",
    "acceptanceRate": "0.48149935664104093",
    "link": "https://leetcode.com/problems/text-justification",
    "topics": [
      "Array",
      "String",
      "Simulation"
    ],
    "id": "LinkedIn-Text Justification",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Sum of Square Numbers",
    "frequency": "50.0",
    "acceptanceRate": "0.3650554406304044",
    "link": "https://leetcode.com/problems/sum-of-square-numbers",
    "topics": [
      "Math",
      "Two Pointers",
      "Binary Search"
    ],
    "id": "LinkedIn-Sum of Square Numbers",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Hard",
    "title": "Time to Cross a Bridge",
    "frequency": "50.0",
    "acceptanceRate": "0.43513513513513513",
    "link": "https://leetcode.com/problems/time-to-cross-a-bridge",
    "topics": [
      "Array",
      "Heap (Priority Queue)",
      "Simulation"
    ],
    "id": "LinkedIn-Time to Cross a Bridge",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Number of Non-overlapping Palindrome Substrings",
    "frequency": "50.0",
    "acceptanceRate": "0.4156976135101724",
    "link": "https://leetcode.com/problems/maximum-number-of-non-overlapping-palindrome-substrings",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "LinkedIn-Maximum Number of Non-overlapping Palindrome Substrings",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Insert Interval",
    "frequency": "50.0",
    "acceptanceRate": "0.43473645466038635",
    "link": "https://leetcode.com/problems/insert-interval",
    "topics": [
      "Array"
    ],
    "id": "LinkedIn-Insert Interval",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Deletions to Make Array Divisible",
    "frequency": "50.0",
    "acceptanceRate": "0.5767212443071686",
    "link": "https://leetcode.com/problems/minimum-deletions-to-make-array-divisible",
    "topics": [
      "Array",
      "Math",
      "Sorting",
      "Heap (Priority Queue)",
      "Number Theory"
    ],
    "id": "LinkedIn-Minimum Deletions to Make Array Divisible",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum III - Data structure design",
    "frequency": "50.0",
    "acceptanceRate": "0.3868837868274785",
    "link": "https://leetcode.com/problems/two-sum-iii-data-structure-design",
    "topics": [
      "Array",
      "Hash Table",
      "Two Pointers",
      "Design",
      "Data Stream"
    ],
    "id": "LinkedIn-Two Sum III - Data structure design",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Binary Search Tree Iterator",
    "frequency": "50.0",
    "acceptanceRate": "0.7486926503064439",
    "link": "https://leetcode.com/problems/binary-search-tree-iterator",
    "topics": [
      "Stack",
      "Tree",
      "Design",
      "Binary Search Tree",
      "Binary Tree",
      "Iterator"
    ],
    "id": "LinkedIn-Binary Search Tree Iterator",
    "company": "LinkedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Reorder List",
    "frequency": "20.8",
    "acceptanceRate": "0.6250476843297371",
    "link": "https://leetcode.com/problems/reorder-list",
    "topics": [
      "Linked List",
      "Two Pointers",
      "Stack",
      "Recursion"
    ],
    "id": "LinkedIn-Reorder List",
    "company": "LinkedIn",
    "timeframe": "all"
  }
]