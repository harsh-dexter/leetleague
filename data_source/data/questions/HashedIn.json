[
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "100.0",
    "acceptanceRate": "0.5778291958481471",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ],
    "id": "HashedIn-Container With Most Water",
    "company": "HashedIn",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Cost to Make Array Equal",
    "frequency": "100.0",
    "acceptanceRate": "0.4632379781368273",
    "link": "https://leetcode.com/problems/minimum-cost-to-make-array-equal",
    "topics": [
      "Array",
      "Binary Search",
      "Greedy",
      "Sorting",
      "Prefix Sum"
    ],
    "id": "HashedIn-Minimum Cost to Make Array Equal",
    "company": "HashedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Next Permutation",
    "frequency": "100.0",
    "acceptanceRate": "0.43057752623445206",
    "link": "https://leetcode.com/problems/next-permutation",
    "topics": [
      "Array",
      "Two Pointers"
    ],
    "id": "HashedIn-Next Permutation",
    "company": "HashedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Chalkboard XOR Game",
    "frequency": "100.0",
    "acceptanceRate": "0.6295199566250991",
    "link": "https://leetcode.com/problems/chalkboard-xor-game",
    "topics": [
      "Array",
      "Math",
      "Bit Manipulation",
      "Brainteaser",
      "Game Theory"
    ],
    "id": "HashedIn-Chalkboard XOR Game",
    "company": "HashedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game II",
    "frequency": "100.0",
    "acceptanceRate": "0.4150342458178816",
    "link": "https://leetcode.com/problems/jump-game-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "HashedIn-Jump Game II",
    "company": "HashedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Edit Distance",
    "frequency": "100.0",
    "acceptanceRate": "0.5878982137282472",
    "link": "https://leetcode.com/problems/edit-distance",
    "topics": [
      "String",
      "Dynamic Programming"
    ],
    "id": "HashedIn-Edit Distance",
    "company": "HashedIn",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Find Candidates for Data Scientist Position",
    "frequency": "100.0",
    "acceptanceRate": "0.7610571736785329",
    "link": "https://leetcode.com/problems/find-candidates-for-data-scientist-position",
    "topics": [
      "Database"
    ],
    "id": "HashedIn-Find Candidates for Data Scientist Position",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Maximize Items",
    "frequency": "100.0",
    "acceptanceRate": "0.7523250122369065",
    "link": "https://leetcode.com/problems/maximize-items",
    "topics": [
      "Database"
    ],
    "id": "HashedIn-Maximize Items",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Count the Number of Powerful Integers",
    "frequency": "83.9",
    "acceptanceRate": "0.46513657009195425",
    "link": "https://leetcode.com/problems/count-the-number-of-powerful-integers",
    "topics": [
      "Math",
      "String",
      "Dynamic Programming"
    ],
    "id": "HashedIn-Count the Number of Powerful Integers",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimize Length of Array Using Operations",
    "frequency": "83.9",
    "acceptanceRate": "0.34864864864864864",
    "link": "https://leetcode.com/problems/minimize-length-of-array-using-operations",
    "topics": [
      "Array",
      "Math",
      "Greedy",
      "Number Theory"
    ],
    "id": "HashedIn-Minimize Length of Array Using Operations",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Subarray",
    "frequency": "72.1",
    "acceptanceRate": "0.5209982621027541",
    "link": "https://leetcode.com/problems/maximum-subarray",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ],
    "id": "HashedIn-Maximum Subarray",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "62.7",
    "acceptanceRate": "0.5525965736768343",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "HashedIn-Best Time to Buy and Sell Stock",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "62.7",
    "acceptanceRate": "0.3707105624040494",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "HashedIn-3Sum",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Points Inside the Square",
    "frequency": "62.7",
    "acceptanceRate": "0.38182389443091663",
    "link": "https://leetcode.com/problems/maximum-points-inside-the-square",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Binary Search",
      "Sorting"
    ],
    "id": "HashedIn-Maximum Points Inside the Square",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Product Subarray",
    "frequency": "62.7",
    "acceptanceRate": "0.3494172590598055",
    "link": "https://leetcode.com/problems/maximum-product-subarray",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "HashedIn-Maximum Product Subarray",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "62.7",
    "acceptanceRate": "0.6510207934299767",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "HashedIn-Trapping Rain Water",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Time to Repair Cars",
    "frequency": "62.7",
    "acceptanceRate": "0.5991672990715053",
    "link": "https://leetcode.com/problems/minimum-time-to-repair-cars",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "HashedIn-Minimum Time to Repair Cars",
    "company": "HashedIn",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "60.6",
    "acceptanceRate": "0.709289019979725",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "id": "HashedIn-Group Anagrams",
    "company": "HashedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Easy",
    "title": "Isomorphic Strings",
    "frequency": "60.6",
    "acceptanceRate": "0.4685800275723814",
    "link": "https://leetcode.com/problems/isomorphic-strings",
    "topics": [
      "Hash Table",
      "String"
    ],
    "id": "HashedIn-Isomorphic Strings",
    "company": "HashedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "60.6",
    "acceptanceRate": "0.6232011028511795",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "HashedIn-Number of Islands",
    "company": "HashedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Beautiful Arrangement",
    "frequency": "60.6",
    "acceptanceRate": "0.6452775069853577",
    "link": "https://leetcode.com/problems/beautiful-arrangement",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Bitmask"
    ],
    "id": "HashedIn-Beautiful Arrangement",
    "company": "HashedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game",
    "frequency": "60.6",
    "acceptanceRate": "0.3947916759941618",
    "link": "https://leetcode.com/problems/jump-game",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "HashedIn-Jump Game",
    "company": "HashedIn",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Koko Eating Bananas",
    "frequency": "60.6",
    "acceptanceRate": "0.49067254597836185",
    "link": "https://leetcode.com/problems/koko-eating-bananas",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "HashedIn-Koko Eating Bananas",
    "company": "HashedIn",
    "timeframe": "all"
  }
]