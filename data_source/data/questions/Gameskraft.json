[
  {
    "difficulty": "Hard",
    "title": "Maximize Sum of Weights after Edge Removals",
    "frequency": "100.0",
    "acceptanceRate": "0.2908775121991564",
    "link": "https://leetcode.com/problems/maximize-sum-of-weights-after-edge-removals",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "id": "Gameskraft-Maximize Sum of Weights after Edge Removals",
    "company": "Gameskraft",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "IPO",
    "frequency": "65.9",
    "acceptanceRate": "0.5301970818223468",
    "link": "https://leetcode.com/problems/ipo",
    "topics": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "Gameskraft-IPO",
    "company": "Gameskraft",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "LFU Cache",
    "frequency": "65.9",
    "acceptanceRate": "0.4660922759966748",
    "link": "https://leetcode.com/problems/lfu-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "Gameskraft-LFU Cache",
    "company": "Gameskraft",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Sliding Window Maximum",
    "frequency": "65.9",
    "acceptanceRate": "0.47604022390322664",
    "link": "https://leetcode.com/problems/sliding-window-maximum",
    "topics": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "id": "Gameskraft-Sliding Window Maximum",
    "company": "Gameskraft",
    "timeframe": "more_than_180"
  }
]