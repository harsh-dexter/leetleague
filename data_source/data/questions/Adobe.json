[
  {
    "difficulty": "Medium",
    "title": "Top K Frequent Words",
    "frequency": "100.0",
    "acceptanceRate": "0.592771260185311",
    "link": "https://leetcode.com/problems/top-k-frequent-words",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting"
    ],
    "id": "Adobe-Top K Frequent Words",
    "company": "Adobe",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Top K Frequent Elements",
    "frequency": "92.0",
    "acceptanceRate": "0.6456596965737327",
    "link": "https://leetcode.com/problems/top-k-frequent-elements",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ],
    "id": "Adobe-Top K Frequent Elements",
    "company": "Adobe",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Product Subarray",
    "frequency": "92.0",
    "acceptanceRate": "0.34941614794619197",
    "link": "https://leetcode.com/problems/maximum-product-subarray",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "Adobe-Maximum Product Subarray",
    "company": "Adobe",
    "timeframe": "90"
  },
  {
    "difficulty": "Easy",
    "title": "Split the Array",
    "frequency": "80.8",
    "acceptanceRate": "0.5922734052667847",
    "link": "https://leetcode.com/problems/split-the-array",
    "topics": [
      "Array",
      "Hash Table",
      "Counting"
    ],
    "id": "Adobe-Split the Array",
    "company": "Adobe",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "80.8",
    "acceptanceRate": "0.45214562575373923",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "Adobe-LRU Cache",
    "company": "Adobe",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Repeating Character Replacement",
    "frequency": "80.8",
    "acceptanceRate": "0.5721163769892559",
    "link": "https://leetcode.com/problems/longest-repeating-character-replacement",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "id": "Adobe-Longest Repeating Character Replacement",
    "company": "Adobe",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Longest Increasing Path in a Matrix",
    "frequency": "80.8",
    "acceptanceRate": "0.5534762586302827",
    "link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Matrix"
    ],
    "id": "Adobe-Longest Increasing Path in a Matrix",
    "company": "Adobe",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Integer to Roman",
    "frequency": "78.7",
    "acceptanceRate": "0.6861925885666443",
    "link": "https://leetcode.com/problems/integer-to-roman",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ],
    "id": "Adobe-Integer to Roman",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Word Ladder",
    "frequency": "78.7",
    "acceptanceRate": "0.42811826737370073",
    "link": "https://leetcode.com/problems/word-ladder",
    "topics": [
      "Hash Table",
      "String",
      "Breadth-First Search"
    ],
    "id": "Adobe-Word Ladder",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Window Substring",
    "frequency": "78.7",
    "acceptanceRate": "0.45350747638232236",
    "link": "https://leetcode.com/problems/minimum-window-substring",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "id": "Adobe-Minimum Window Substring",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Rotting Oranges",
    "frequency": "78.7",
    "acceptanceRate": "0.566184675573941",
    "link": "https://leetcode.com/problems/rotting-oranges",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "id": "Adobe-Rotting Oranges",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Product of Array Except Self",
    "frequency": "78.7",
    "acceptanceRate": "0.6777995792305304",
    "link": "https://leetcode.com/problems/product-of-array-except-self",
    "topics": [
      "Array",
      "Prefix Sum"
    ],
    "id": "Adobe-Product of Array Except Self",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "78.7",
    "acceptanceRate": "0.552596541931788",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "Adobe-Best Time to Buy and Sell Stock",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Majority Element",
    "frequency": "78.7",
    "acceptanceRate": "0.6574028018936169",
    "link": "https://leetcode.com/problems/majority-element",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting"
    ],
    "id": "Adobe-Majority Element",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Decode Ways",
    "frequency": "78.7",
    "acceptanceRate": "0.36530982861754346",
    "link": "https://leetcode.com/problems/decode-ways",
    "topics": [
      "String",
      "Dynamic Programming"
    ],
    "id": "Adobe-Decode Ways",
    "company": "Adobe",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "100.0",
    "acceptanceRate": "0.5577699165086937",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "id": "Adobe-Two Sum",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Longest Common Prefix",
    "frequency": "80.1",
    "acceptanceRate": "0.4548305774598658",
    "link": "https://leetcode.com/problems/longest-common-prefix",
    "topics": [
      "String",
      "Trie"
    ],
    "id": "Adobe-Longest Common Prefix",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "75.8",
    "acceptanceRate": "0.3707094094916058",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "Adobe-3Sum",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Reverse Integer",
    "frequency": "74.8",
    "acceptanceRate": "0.30308922695548246",
    "link": "https://leetcode.com/problems/reverse-integer",
    "topics": [
      "Math"
    ],
    "id": "Adobe-Reverse Integer",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Median of Two Sorted Arrays",
    "frequency": "74.3",
    "acceptanceRate": "0.4381460348224133",
    "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
    "topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer"
    ],
    "id": "Adobe-Median of Two Sorted Arrays",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "73.2",
    "acceptanceRate": "0.6510194577693873",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "Adobe-Trapping Rain Water",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Merge Sorted Array",
    "frequency": "72.7",
    "acceptanceRate": "0.5291952521829845",
    "link": "https://leetcode.com/problems/merge-sorted-array",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "Adobe-Merge Sorted Array",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Substring Without Repeating Characters",
    "frequency": "72.1",
    "acceptanceRate": "0.3693616958685081",
    "link": "https://leetcode.com/problems/longest-substring-without-repeating-characters",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "id": "Adobe-Longest Substring Without Repeating Characters",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Palindrome Number",
    "frequency": "69.6",
    "acceptanceRate": "0.5922454353509216",
    "link": "https://leetcode.com/problems/palindrome-number",
    "topics": [
      "Math"
    ],
    "id": "Adobe-Palindrome Number",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "69.0",
    "acceptanceRate": "0.7092883319407988",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "id": "Adobe-Group Anagrams",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "67.6",
    "acceptanceRate": "0.42322823820875544",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ],
    "id": "Adobe-Valid Parentheses",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Add Two Numbers",
    "frequency": "66.1",
    "acceptanceRate": "0.4622507291808296",
    "link": "https://leetcode.com/problems/add-two-numbers",
    "topics": [
      "Linked List",
      "Math",
      "Recursion"
    ],
    "id": "Adobe-Add Two Numbers",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "65.3",
    "acceptanceRate": "0.5778283165036205",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ],
    "id": "Adobe-Container With Most Water",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Climbing Stairs",
    "frequency": "65.3",
    "acceptanceRate": "0.5354071840932856",
    "link": "https://leetcode.com/problems/climbing-stairs",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ],
    "id": "Adobe-Climbing Stairs",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Remove Duplicates from Sorted Array",
    "frequency": "64.4",
    "acceptanceRate": "0.6035551873801481",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array",
    "topics": [
      "Array",
      "Two Pointers"
    ],
    "id": "Adobe-Remove Duplicates from Sorted Array",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Palindromic Substring",
    "frequency": "64.4",
    "acceptanceRate": "0.358461107628481",
    "link": "https://leetcode.com/problems/longest-palindromic-substring",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "id": "Adobe-Longest Palindromic Substring",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Next Permutation",
    "frequency": "64.4",
    "acceptanceRate": "0.4305775328017951",
    "link": "https://leetcode.com/problems/next-permutation",
    "topics": [
      "Array",
      "Two Pointers"
    ],
    "id": "Adobe-Next Permutation",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Remove Element",
    "frequency": "64.4",
    "acceptanceRate": "0.600316358048653",
    "link": "https://leetcode.com/problems/remove-element",
    "topics": [
      "Array",
      "Two Pointers"
    ],
    "id": "Adobe-Remove Element",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Spiral Matrix",
    "frequency": "62.7",
    "acceptanceRate": "0.5393976057408939",
    "link": "https://leetcode.com/problems/spiral-matrix",
    "topics": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "id": "Adobe-Spiral Matrix",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Roman to Integer",
    "frequency": "62.7",
    "acceptanceRate": "0.6486627884371093",
    "link": "https://leetcode.com/problems/roman-to-integer",
    "topics": [
      "Hash Table",
      "Math",
      "String"
    ],
    "id": "Adobe-Roman to Integer",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Merge Two Sorted Lists",
    "frequency": "61.7",
    "acceptanceRate": "0.6684088801523707",
    "link": "https://leetcode.com/problems/merge-two-sorted-lists",
    "topics": [
      "Linked List",
      "Recursion"
    ],
    "id": "Adobe-Merge Two Sorted Lists",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Set Matrix Zeroes",
    "frequency": "60.7",
    "acceptanceRate": "0.6070884864800216",
    "link": "https://leetcode.com/problems/set-matrix-zeroes",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "id": "Adobe-Set Matrix Zeroes",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game",
    "frequency": "58.5",
    "acceptanceRate": "0.39479197867291327",
    "link": "https://leetcode.com/problems/jump-game",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "Adobe-Jump Game",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Generate Parentheses",
    "frequency": "57.3",
    "acceptanceRate": "0.7713286717803378",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ],
    "id": "Adobe-Generate Parentheses",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Plus One",
    "frequency": "57.3",
    "acceptanceRate": "0.4754763031468927",
    "link": "https://leetcode.com/problems/plus-one",
    "topics": [
      "Array",
      "Math"
    ],
    "id": "Adobe-Plus One",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Letter Combinations of a Phone Number",
    "frequency": "56.1",
    "acceptanceRate": "0.6385755061179695",
    "link": "https://leetcode.com/problems/letter-combinations-of-a-phone-number",
    "topics": [
      "Hash Table",
      "String",
      "Backtracking"
    ],
    "id": "Adobe-Letter Combinations of a Phone Number",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Rotate Image",
    "frequency": "56.1",
    "acceptanceRate": "0.7790165261990751",
    "link": "https://leetcode.com/problems/rotate-image",
    "topics": [
      "Array",
      "Math",
      "Matrix"
    ],
    "id": "Adobe-Rotate Image",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Merge Intervals",
    "frequency": "53.3",
    "acceptanceRate": "0.49395260388425144",
    "link": "https://leetcode.com/problems/merge-intervals",
    "topics": [
      "Array",
      "Sorting"
    ],
    "id": "Adobe-Merge Intervals",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Find First and Last Position of Element in Sorted Array",
    "frequency": "53.3",
    "acceptanceRate": "0.46828759474545545",
    "link": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "Adobe-Find First and Last Position of Element in Sorted Array",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Permutations",
    "frequency": "53.3",
    "acceptanceRate": "0.8066012553007272",
    "link": "https://leetcode.com/problems/permutations",
    "topics": [
      "Array",
      "Backtracking"
    ],
    "id": "Adobe-Permutations",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Remove Duplicates from Sorted Array II",
    "frequency": "51.7",
    "acceptanceRate": "0.6290186962409604",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii",
    "topics": [
      "Array",
      "Two Pointers"
    ],
    "id": "Adobe-Remove Duplicates from Sorted Array II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Sqrt(x)",
    "frequency": "51.7",
    "acceptanceRate": "0.40371814671155276",
    "link": "https://leetcode.com/problems/sqrtx",
    "topics": [
      "Math",
      "Binary Search"
    ],
    "id": "Adobe-Sqrt(x)",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Unique Paths",
    "frequency": "50.0",
    "acceptanceRate": "0.6577287347956182",
    "link": "https://leetcode.com/problems/unique-paths",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "id": "Adobe-Unique Paths",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum II",
    "frequency": "50.0",
    "acceptanceRate": "0.5767453180420465",
    "link": "https://leetcode.com/problems/combination-sum-ii",
    "topics": [
      "Array",
      "Backtracking"
    ],
    "id": "Adobe-Combination Sum II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Sort Colors",
    "frequency": "50.0",
    "acceptanceRate": "0.675831142046278",
    "link": "https://leetcode.com/problems/sort-colors",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "Adobe-Sort Colors",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game II",
    "frequency": "50.0",
    "acceptanceRate": "0.415032966531176",
    "link": "https://leetcode.com/problems/jump-game-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "Adobe-Jump Game II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Subarray",
    "frequency": "50.0",
    "acceptanceRate": "0.5209977640581438",
    "link": "https://leetcode.com/problems/maximum-subarray",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Dynamic Programming"
    ],
    "id": "Adobe-Maximum Subarray",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Valid Sudoku",
    "frequency": "50.0",
    "acceptanceRate": "0.6227675793740958",
    "link": "https://leetcode.com/problems/valid-sudoku",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "id": "Adobe-Valid Sudoku",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "50.0",
    "acceptanceRate": "0.5677420052593406",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ],
    "id": "Adobe-Merge k Sorted Lists",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "First Missing Positive",
    "frequency": "48.2",
    "acceptanceRate": "0.4108465766394882",
    "link": "https://leetcode.com/problems/first-missing-positive",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "id": "Adobe-First Missing Positive",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Search Insert Position",
    "frequency": "46.1",
    "acceptanceRate": "0.4901243579627091",
    "link": "https://leetcode.com/problems/search-insert-position",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "Adobe-Search Insert Position",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Pow(x, n)",
    "frequency": "46.1",
    "acceptanceRate": "0.370231906887774",
    "link": "https://leetcode.com/problems/powx-n",
    "topics": [
      "Math",
      "Recursion"
    ],
    "id": "Adobe-Pow(x, n)",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "frequency": "46.1",
    "acceptanceRate": "0.6683774773521286",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ],
    "id": "Adobe-Construct Binary Tree from Preorder and Inorder Traversal",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Divide Two Integers",
    "frequency": "46.1",
    "acceptanceRate": "0.18396975085033054",
    "link": "https://leetcode.com/problems/divide-two-integers",
    "topics": [
      "Math",
      "Bit Manipulation"
    ],
    "id": "Adobe-Divide Two Integers",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Subsets",
    "frequency": "46.1",
    "acceptanceRate": "0.8087956878508169",
    "link": "https://leetcode.com/problems/subsets",
    "topics": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ],
    "id": "Adobe-Subsets",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Search in Rotated Sorted Array",
    "frequency": "46.1",
    "acceptanceRate": "0.42837216325866995",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "Adobe-Search in Rotated Sorted Array",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Find the Index of the First Occurrence in a String",
    "frequency": "43.8",
    "acceptanceRate": "0.4497159539277782",
    "link": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string",
    "topics": [
      "Two Pointers",
      "String",
      "String Matching"
    ],
    "id": "Adobe-Find the Index of the First Occurrence in a String",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Swap Nodes in Pairs",
    "frequency": "43.8",
    "acceptanceRate": "0.6720136828647639",
    "link": "https://leetcode.com/problems/swap-nodes-in-pairs",
    "topics": [
      "Linked List",
      "Recursion"
    ],
    "id": "Adobe-Swap Nodes in Pairs",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Length of Last Word",
    "frequency": "43.8",
    "acceptanceRate": "0.5631924456525931",
    "link": "https://leetcode.com/problems/length-of-last-word",
    "topics": [
      "String"
    ],
    "id": "Adobe-Length of Last Word",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Largest Rectangle in Histogram",
    "frequency": "43.8",
    "acceptanceRate": "0.4737769446459488",
    "link": "https://leetcode.com/problems/largest-rectangle-in-histogram",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "Adobe-Largest Rectangle in Histogram",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Reverse Nodes in k-Group",
    "frequency": "43.8",
    "acceptanceRate": "0.630436472551844",
    "link": "https://leetcode.com/problems/reverse-nodes-in-k-group",
    "topics": [
      "Linked List",
      "Recursion"
    ],
    "id": "Adobe-Reverse Nodes in k-Group",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Reverse Linked List II",
    "frequency": "43.8",
    "acceptanceRate": "0.495917143135072",
    "link": "https://leetcode.com/problems/reverse-linked-list-ii",
    "topics": [
      "Linked List"
    ],
    "id": "Adobe-Reverse Linked List II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "4Sum",
    "frequency": "41.2",
    "acceptanceRate": "0.3821900891354193",
    "link": "https://leetcode.com/problems/4sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "Adobe-4Sum",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "3Sum Closest",
    "frequency": "41.2",
    "acceptanceRate": "0.468869600214817",
    "link": "https://leetcode.com/problems/3sum-closest",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "Adobe-3Sum Closest",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "String to Integer (atoi)",
    "frequency": "41.2",
    "acceptanceRate": "0.19229419795412275",
    "link": "https://leetcode.com/problems/string-to-integer-atoi",
    "topics": [
      "String"
    ],
    "id": "Adobe-String to Integer (atoi)",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Zigzag Level Order Traversal",
    "frequency": "41.2",
    "acceptanceRate": "0.6168283891746636",
    "link": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal",
    "topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Binary Tree Zigzag Level Order Traversal",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Wildcard Matching",
    "frequency": "41.2",
    "acceptanceRate": "0.29898326214211846",
    "link": "https://leetcode.com/problems/wildcard-matching",
    "topics": [
      "String",
      "Dynamic Programming",
      "Greedy",
      "Recursion"
    ],
    "id": "Adobe-Wildcard Matching",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Zigzag Conversion",
    "frequency": "41.2",
    "acceptanceRate": "0.5160678115303926",
    "link": "https://leetcode.com/problems/zigzag-conversion",
    "topics": [
      "String"
    ],
    "id": "Adobe-Zigzag Conversion",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Partition List",
    "frequency": "38.3",
    "acceptanceRate": "0.5898677373641946",
    "link": "https://leetcode.com/problems/partition-list",
    "topics": [
      "Linked List",
      "Two Pointers"
    ],
    "id": "Adobe-Partition List",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Symmetric Tree",
    "frequency": "38.3",
    "acceptanceRate": "0.5927867908424697",
    "link": "https://leetcode.com/problems/symmetric-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Symmetric Tree",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Remove Nth Node From End of List",
    "frequency": "38.3",
    "acceptanceRate": "0.4896105904273307",
    "link": "https://leetcode.com/problems/remove-nth-node-from-end-of-list",
    "topics": [
      "Linked List",
      "Two Pointers"
    ],
    "id": "Adobe-Remove Nth Node From End of List",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Binary Tree Inorder Traversal",
    "frequency": "38.3",
    "acceptanceRate": "0.7858399541084903",
    "link": "https://leetcode.com/problems/binary-tree-inorder-traversal",
    "topics": [
      "Stack",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Binary Tree Inorder Traversal",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Insert Interval",
    "frequency": "38.3",
    "acceptanceRate": "0.43473645466038635",
    "link": "https://leetcode.com/problems/insert-interval",
    "topics": [
      "Array"
    ],
    "id": "Adobe-Insert Interval",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Sudoku Solver",
    "frequency": "38.3",
    "acceptanceRate": "0.6390866531877745",
    "link": "https://leetcode.com/problems/sudoku-solver",
    "topics": [
      "Array",
      "Hash Table",
      "Backtracking",
      "Matrix"
    ],
    "id": "Adobe-Sudoku Solver",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Text Justification",
    "frequency": "34.8",
    "acceptanceRate": "0.48149935664104093",
    "link": "https://leetcode.com/problems/text-justification",
    "topics": [
      "Array",
      "String",
      "Simulation"
    ],
    "id": "Adobe-Text Justification",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Balanced Binary Tree",
    "frequency": "34.8",
    "acceptanceRate": "0.5534206156043029",
    "link": "https://leetcode.com/problems/balanced-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Balanced Binary Tree",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Same Tree",
    "frequency": "34.8",
    "acceptanceRate": "0.6512685923910883",
    "link": "https://leetcode.com/problems/same-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Same Tree",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Longest Valid Parentheses",
    "frequency": "34.8",
    "acceptanceRate": "0.3631311456770452",
    "link": "https://leetcode.com/problems/longest-valid-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Stack"
    ],
    "id": "Adobe-Longest Valid Parentheses",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Add Binary",
    "frequency": "34.8",
    "acceptanceRate": "0.5567702663015909",
    "link": "https://leetcode.com/problems/add-binary",
    "topics": [
      "Math",
      "String",
      "Bit Manipulation",
      "Simulation"
    ],
    "id": "Adobe-Add Binary",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Word Search",
    "frequency": "34.8",
    "acceptanceRate": "0.45266938011238234",
    "link": "https://leetcode.com/problems/word-search",
    "topics": [
      "Array",
      "String",
      "Backtracking",
      "Depth-First Search",
      "Matrix"
    ],
    "id": "Adobe-Word Search",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Combinations",
    "frequency": "30.6",
    "acceptanceRate": "0.728964998447839",
    "link": "https://leetcode.com/problems/combinations",
    "topics": [
      "Backtracking"
    ],
    "id": "Adobe-Combinations",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Substring with Concatenation of All Words",
    "frequency": "30.6",
    "acceptanceRate": "0.32997499702748073",
    "link": "https://leetcode.com/problems/substring-with-concatenation-of-all-words",
    "topics": [
      "Hash Table",
      "String",
      "Sliding Window"
    ],
    "id": "Adobe-Substring with Concatenation of All Words",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Spiral Matrix II",
    "frequency": "30.6",
    "acceptanceRate": "0.734312719680276",
    "link": "https://leetcode.com/problems/spiral-matrix-ii",
    "topics": [
      "Array",
      "Matrix",
      "Simulation"
    ],
    "id": "Adobe-Spiral Matrix II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Permutation Sequence",
    "frequency": "30.6",
    "acceptanceRate": "0.4994329004732563",
    "link": "https://leetcode.com/problems/permutation-sequence",
    "topics": [
      "Math",
      "Recursion"
    ],
    "id": "Adobe-Permutation Sequence",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Search in Rotated Sorted Array II",
    "frequency": "30.6",
    "acceptanceRate": "0.3887964488253302",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "Adobe-Search in Rotated Sorted Array II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Rotate List",
    "frequency": "30.6",
    "acceptanceRate": "0.3994476663735721",
    "link": "https://leetcode.com/problems/rotate-list",
    "topics": [
      "Linked List",
      "Two Pointers"
    ],
    "id": "Adobe-Rotate List",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Remove Duplicates from Sorted List",
    "frequency": "30.6",
    "acceptanceRate": "0.5487081617461452",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list",
    "topics": [
      "Linked List"
    ],
    "id": "Adobe-Remove Duplicates from Sorted List",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Maximum Depth of Binary Tree",
    "frequency": "30.6",
    "acceptanceRate": "0.7713815272678225",
    "link": "https://leetcode.com/problems/maximum-depth-of-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Maximum Depth of Binary Tree",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Validate Binary Search Tree",
    "frequency": "30.6",
    "acceptanceRate": "0.34380403551085315",
    "link": "https://leetcode.com/problems/validate-binary-search-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "id": "Adobe-Validate Binary Search Tree",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Edit Distance",
    "frequency": "30.6",
    "acceptanceRate": "0.5878978269295445",
    "link": "https://leetcode.com/problems/edit-distance",
    "topics": [
      "String",
      "Dynamic Programming"
    ],
    "id": "Adobe-Edit Distance",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Unique Paths II",
    "frequency": "30.6",
    "acceptanceRate": "0.4315438505851779",
    "link": "https://leetcode.com/problems/unique-paths-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "id": "Adobe-Unique Paths II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Search a 2D Matrix",
    "frequency": "30.6",
    "acceptanceRate": "0.5228958306958686",
    "link": "https://leetcode.com/problems/search-a-2d-matrix",
    "topics": [
      "Array",
      "Binary Search",
      "Matrix"
    ],
    "id": "Adobe-Search a 2D Matrix",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Path Sum",
    "frequency": "25.2",
    "acceptanceRate": "0.5300475989532051",
    "link": "https://leetcode.com/problems/path-sum",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Path Sum",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Simplify Path",
    "frequency": "25.2",
    "acceptanceRate": "0.47854346003751436",
    "link": "https://leetcode.com/problems/simplify-path",
    "topics": [
      "String",
      "Stack"
    ],
    "id": "Adobe-Simplify Path",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "N-Queens",
    "frequency": "25.2",
    "acceptanceRate": "0.7281704967757537",
    "link": "https://leetcode.com/problems/n-queens",
    "topics": [
      "Array",
      "Backtracking"
    ],
    "id": "Adobe-N-Queens",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Count and Say",
    "frequency": "25.2",
    "acceptanceRate": "0.6050656775612677",
    "link": "https://leetcode.com/problems/count-and-say",
    "topics": [
      "String"
    ],
    "id": "Adobe-Count and Say",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Restore IP Addresses",
    "frequency": "18.2",
    "acceptanceRate": "0.531583393083398",
    "link": "https://leetcode.com/problems/restore-ip-addresses",
    "topics": [
      "String",
      "Backtracking"
    ],
    "id": "Adobe-Restore IP Addresses",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Subsets II",
    "frequency": "18.2",
    "acceptanceRate": "0.595072748658621",
    "link": "https://leetcode.com/problems/subsets-ii",
    "topics": [
      "Array",
      "Backtracking",
      "Bit Manipulation"
    ],
    "id": "Adobe-Subsets II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Unique Binary Search Trees",
    "frequency": "18.2",
    "acceptanceRate": "0.6244520536210353",
    "link": "https://leetcode.com/problems/unique-binary-search-trees",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "id": "Adobe-Unique Binary Search Trees",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Maximal Rectangle",
    "frequency": "18.2",
    "acceptanceRate": "0.5370845822665518",
    "link": "https://leetcode.com/problems/maximal-rectangle",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Matrix",
      "Monotonic Stack"
    ],
    "id": "Adobe-Maximal Rectangle",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Remove Duplicates from Sorted List II",
    "frequency": "18.2",
    "acceptanceRate": "0.4989080936318432",
    "link": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii",
    "topics": [
      "Linked List",
      "Two Pointers"
    ],
    "id": "Adobe-Remove Duplicates from Sorted List II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Permutations II",
    "frequency": "18.2",
    "acceptanceRate": "0.615917727605333",
    "link": "https://leetcode.com/problems/permutations-ii",
    "topics": [
      "Array",
      "Backtracking",
      "Sorting"
    ],
    "id": "Adobe-Permutations II",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Multiply Strings",
    "frequency": "18.2",
    "acceptanceRate": "0.4228943914738829",
    "link": "https://leetcode.com/problems/multiply-strings",
    "topics": [
      "Math",
      "String",
      "Simulation"
    ],
    "id": "Adobe-Multiply Strings",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Construct Binary Tree from Inorder and Postorder Traversal",
    "frequency": "18.2",
    "acceptanceRate": "0.6608200104533679",
    "link": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Tree",
      "Binary Tree"
    ],
    "id": "Adobe-Construct Binary Tree from Inorder and Postorder Traversal",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Convert Sorted Array to Binary Search Tree",
    "frequency": "18.2",
    "acceptanceRate": "0.7407934506434607",
    "link": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree",
    "topics": [
      "Array",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "id": "Adobe-Convert Sorted Array to Binary Search Tree",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Minimum Depth of Binary Tree",
    "frequency": "18.2",
    "acceptanceRate": "0.5066668022955421",
    "link": "https://leetcode.com/problems/minimum-depth-of-binary-tree",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Minimum Depth of Binary Tree",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Combination Sum",
    "frequency": "18.2",
    "acceptanceRate": "0.7467468656021409",
    "link": "https://leetcode.com/problems/combination-sum",
    "topics": [
      "Array",
      "Backtracking"
    ],
    "id": "Adobe-Combination Sum",
    "company": "Adobe",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Level Order Traversal",
    "frequency": "17.4",
    "acceptanceRate": "0.7059657203049214",
    "link": "https://leetcode.com/problems/binary-tree-level-order-traversal",
    "topics": [
      "Tree",
      "Breadth-First Search",
      "Binary Tree"
    ],
    "id": "Adobe-Binary Tree Level Order Traversal",
    "company": "Adobe",
    "timeframe": "all"
  }
]