[
  {
    "difficulty": "Hard",
    "title": "Binary Tree Maximum Path Sum",
    "frequency": "100.0",
    "acceptanceRate": "0.4122430202415382",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "Directi-Binary Tree Maximum Path Sum",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Difference Between Maximum and Minimum Price Sum",
    "frequency": "100.0",
    "acceptanceRate": "0.3183270902780164",
    "link": "https://leetcode.com/problems/difference-between-maximum-and-minimum-price-sum",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "id": "Directi-Difference Between Maximum and Minimum Price Sum",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Find Longest Awesome Substring",
    "frequency": "100.0",
    "acceptanceRate": "0.45241488116443584",
    "link": "https://leetcode.com/problems/find-longest-awesome-substring",
    "topics": [
      "Hash Table",
      "String",
      "Bit Manipulation"
    ],
    "id": "Directi-Find Longest Awesome Substring",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Min Cost to Connect All Points",
    "frequency": "100.0",
    "acceptanceRate": "0.6902167172645849",
    "link": "https://leetcode.com/problems/min-cost-to-connect-all-points",
    "topics": [
      "Array",
      "Union Find",
      "Graph",
      "Minimum Spanning Tree"
    ],
    "id": "Directi-Min Cost to Connect All Points",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Maximum XOR of Two Non-Overlapping Subtrees",
    "frequency": "100.0",
    "acceptanceRate": "0.49552772808586765",
    "link": "https://leetcode.com/problems/maximum-xor-of-two-non-overlapping-subtrees",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Graph",
      "Trie"
    ],
    "id": "Directi-Maximum XOR of Two Non-Overlapping Subtrees",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Cost to Buy Apples",
    "frequency": "100.0",
    "acceptanceRate": "0.671071953010279",
    "link": "https://leetcode.com/problems/minimum-cost-to-buy-apples",
    "topics": [
      "Array",
      "Graph",
      "Heap (Priority Queue)",
      "Shortest Path"
    ],
    "id": "Directi-Minimum Cost to Buy Apples",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Largest Submatrix With Rearrangements",
    "frequency": "100.0",
    "acceptanceRate": "0.7517110676865972",
    "link": "https://leetcode.com/problems/largest-submatrix-with-rearrangements",
    "topics": [
      "Array",
      "Greedy",
      "Sorting",
      "Matrix"
    ],
    "id": "Directi-Largest Submatrix With Rearrangements",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Find the Winner of an Array Game",
    "frequency": "100.0",
    "acceptanceRate": "0.567408906882591",
    "link": "https://leetcode.com/problems/find-the-winner-of-an-array-game",
    "topics": [
      "Array",
      "Simulation"
    ],
    "id": "Directi-Find the Winner of an Array Game",
    "company": "Directi",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Sub-arrays With Odd Sum",
    "frequency": "100.0",
    "acceptanceRate": "0.560402376129768",
    "link": "https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum",
    "topics": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Prefix Sum"
    ],
    "id": "Directi-Number of Sub-arrays With Odd Sum",
    "company": "Directi",
    "timeframe": "more_than_180"
  }
]