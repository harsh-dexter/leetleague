[
  {
    "difficulty": "Hard",
    "title": "Maximum Score of Non-overlapping Intervals",
    "frequency": "100.0",
    "acceptanceRate": "0.3064978278953693",
    "link": "https://leetcode.com/problems/maximum-score-of-non-overlapping-intervals",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "id": "Sprinklr-Maximum Score of Non-overlapping Intervals",
    "company": "Sprinklr",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Edge Weight Equilibrium Queries in a Tree",
    "frequency": "100.0",
    "acceptanceRate": "0.4281724754244862",
    "link": "https://leetcode.com/problems/minimum-edge-weight-equilibrium-queries-in-a-tree",
    "topics": [
      "Array",
      "Tree",
      "Graph",
      "Strongly Connected Component"
    ],
    "id": "Sprinklr-Minimum Edge Weight Equilibrium Queries in a Tree",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Asteroid Collision",
    "frequency": "100.0",
    "acceptanceRate": "0.45500737161532884",
    "link": "https://leetcode.com/problems/asteroid-collision",
    "topics": [
      "Array",
      "Stack",
      "Simulation"
    ],
    "id": "Sprinklr-Asteroid Collision",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Robot Collisions",
    "frequency": "90.5",
    "acceptanceRate": "0.5610641049690483",
    "link": "https://leetcode.com/problems/robot-collisions",
    "topics": [
      "Array",
      "Stack",
      "Sorting",
      "Simulation"
    ],
    "id": "Sprinklr-Robot Collisions",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimize the Difference Between Target and Chosen Elements",
    "frequency": "84.2",
    "acceptanceRate": "0.35870661771588447",
    "link": "https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Matrix"
    ],
    "id": "Sprinklr-Minimize the Difference Between Target and Chosen Elements",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Serialize and Deserialize Binary Tree",
    "frequency": "84.2",
    "acceptanceRate": "0.5896944200034516",
    "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
    "topics": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ],
    "id": "Sprinklr-Serialize and Deserialize Binary Tree",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Number of Food Buckets to Feed the Hamsters",
    "frequency": "84.2",
    "acceptanceRate": "0.47045155152224827",
    "link": "https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters",
    "topics": [
      "String",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "Sprinklr-Minimum Number of Food Buckets to Feed the Hamsters",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Apply Operations on Array to Maximize Sum of Squares",
    "frequency": "84.2",
    "acceptanceRate": "0.43175331579830994",
    "link": "https://leetcode.com/problems/apply-operations-on-array-to-maximize-sum-of-squares",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Bit Manipulation"
    ],
    "id": "Sprinklr-Apply Operations on Array to Maximize Sum of Squares",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "84.2",
    "acceptanceRate": "0.5499183718923905",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "id": "Sprinklr-Insert Delete GetRandom O(1)",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Provinces",
    "frequency": "84.2",
    "acceptanceRate": "0.6865495230645632",
    "link": "https://leetcode.com/problems/number-of-provinces",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "id": "Sprinklr-Number of Provinces",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Set Matrix Zeroes",
    "frequency": "76.0",
    "acceptanceRate": "0.6070895622880023",
    "link": "https://leetcode.com/problems/set-matrix-zeroes",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "id": "Sprinklr-Set Matrix Zeroes",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Partition Labels",
    "frequency": "76.0",
    "acceptanceRate": "0.8153348894045592",
    "link": "https://leetcode.com/problems/partition-labels",
    "topics": [
      "Hash Table",
      "Two Pointers",
      "String",
      "Greedy"
    ],
    "id": "Sprinklr-Partition Labels",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "76.0",
    "acceptanceRate": "0.6510218585991906",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "Sprinklr-Trapping Rain Water",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Validate IP Address",
    "frequency": "76.0",
    "acceptanceRate": "0.27817524620453365",
    "link": "https://leetcode.com/problems/validate-ip-address",
    "topics": [
      "String"
    ],
    "id": "Sprinklr-Validate IP Address",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Container With Most Water",
    "frequency": "76.0",
    "acceptanceRate": "0.5778293416922462",
    "link": "https://leetcode.com/problems/container-with-most-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Greedy"
    ],
    "id": "Sprinklr-Container With Most Water",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Maximize Score After N Operations",
    "frequency": "76.0",
    "acceptanceRate": "0.5785412456365975",
    "link": "https://leetcode.com/problems/maximize-score-after-n-operations",
    "topics": [
      "Array",
      "Math",
      "Dynamic Programming",
      "Backtracking",
      "Bit Manipulation",
      "Number Theory",
      "Bitmask"
    ],
    "id": "Sprinklr-Maximize Score After N Operations",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Next Greater Numerically Balanced Number",
    "frequency": "76.0",
    "acceptanceRate": "0.49083484294881635",
    "link": "https://leetcode.com/problems/next-greater-numerically-balanced-number",
    "topics": [
      "Hash Table",
      "Math",
      "Backtracking",
      "Counting",
      "Enumeration"
    ],
    "id": "Sprinklr-Next Greater Numerically Balanced Number",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Max Points on a Line",
    "frequency": "76.0",
    "acceptanceRate": "0.28955383571551063",
    "link": "https://leetcode.com/problems/max-points-on-a-line",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Geometry"
    ],
    "id": "Sprinklr-Max Points on a Line",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Closest Subsequence Sum",
    "frequency": "64.6",
    "acceptanceRate": "0.4160445423134075",
    "link": "https://leetcode.com/problems/closest-subsequence-sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Bit Manipulation",
      "Sorting",
      "Bitmask"
    ],
    "id": "Sprinklr-Closest Subsequence Sum",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Choose Edges to Maximize Score in a Tree",
    "frequency": "64.6",
    "acceptanceRate": "0.5582437275985663",
    "link": "https://leetcode.com/problems/choose-edges-to-maximize-score-in-a-tree",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search"
    ],
    "id": "Sprinklr-Choose Edges to Maximize Score in a Tree",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Create Components With Same Value",
    "frequency": "64.6",
    "acceptanceRate": "0.5196614658299269",
    "link": "https://leetcode.com/problems/create-components-with-same-value",
    "topics": [
      "Array",
      "Math",
      "Tree",
      "Depth-First Search",
      "Enumeration"
    ],
    "id": "Sprinklr-Create Components With Same Value",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Same-End Substrings",
    "frequency": "64.6",
    "acceptanceRate": "0.6135626674185817",
    "link": "https://leetcode.com/problems/number-of-same-end-substrings",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Counting",
      "Prefix Sum"
    ],
    "id": "Sprinklr-Number of Same-End Substrings",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Count the Number of Powerful Integers",
    "frequency": "64.6",
    "acceptanceRate": "0.46513657009195425",
    "link": "https://leetcode.com/problems/count-the-number-of-powerful-integers",
    "topics": [
      "Math",
      "String",
      "Dynamic Programming"
    ],
    "id": "Sprinklr-Count the Number of Powerful Integers",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Number of Great Partitions",
    "frequency": "64.6",
    "acceptanceRate": "0.32303504784353343",
    "link": "https://leetcode.com/problems/number-of-great-partitions",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "Sprinklr-Number of Great Partitions",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Apply Bitwise Operations to Make Strings Equal",
    "frequency": "64.6",
    "acceptanceRate": "0.4172484925420502",
    "link": "https://leetcode.com/problems/apply-bitwise-operations-to-make-strings-equal",
    "topics": [
      "String",
      "Bit Manipulation"
    ],
    "id": "Sprinklr-Apply Bitwise Operations to Make Strings Equal",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Largest Rectangle in Histogram",
    "frequency": "64.6",
    "acceptanceRate": "0.47377702625828294",
    "link": "https://leetcode.com/problems/largest-rectangle-in-histogram",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "Sprinklr-Largest Rectangle in Histogram",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Subarray Sum After One Operation",
    "frequency": "64.6",
    "acceptanceRate": "0.6525722684958353",
    "link": "https://leetcode.com/problems/maximum-subarray-sum-after-one-operation",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "Sprinklr-Maximum Subarray Sum After One Operation",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Best Time to Buy and Sell Stock",
    "frequency": "64.6",
    "acceptanceRate": "0.5525969358423186",
    "link": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock",
    "topics": [
      "Array",
      "Dynamic Programming"
    ],
    "id": "Sprinklr-Best Time to Buy and Sell Stock",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Time to Revert Word to Initial State I",
    "frequency": "64.6",
    "acceptanceRate": "0.41299970167064437",
    "link": "https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i",
    "topics": [
      "String",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "id": "Sprinklr-Minimum Time to Revert Word to Initial State I",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Minimum Time to Revert Word to Initial State II",
    "frequency": "64.6",
    "acceptanceRate": "0.34371094509400957",
    "link": "https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-ii",
    "topics": [
      "String",
      "Rolling Hash",
      "String Matching",
      "Hash Function"
    ],
    "id": "Sprinklr-Minimum Time to Revert Word to Initial State II",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Count Valid Paths in a Tree",
    "frequency": "64.6",
    "acceptanceRate": "0.34432756380704915",
    "link": "https://leetcode.com/problems/count-valid-paths-in-a-tree",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Number Theory"
    ],
    "id": "Sprinklr-Count Valid Paths in a Tree",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Sort Colors",
    "frequency": "64.6",
    "acceptanceRate": "0.6758310923121347",
    "link": "https://leetcode.com/problems/sort-colors",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "Sprinklr-Sort Colors",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "3Sum",
    "frequency": "64.6",
    "acceptanceRate": "0.3707113114190416",
    "link": "https://leetcode.com/problems/3sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "Sprinklr-3Sum",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Russian Doll Envelopes",
    "frequency": "64.6",
    "acceptanceRate": "0.3732991914997274",
    "link": "https://leetcode.com/problems/russian-doll-envelopes",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "id": "Sprinklr-Russian Doll Envelopes",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Single Element in a Sorted Array",
    "frequency": "64.6",
    "acceptanceRate": "0.5920692446350735",
    "link": "https://leetcode.com/problems/single-element-in-a-sorted-array",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "Sprinklr-Single Element in a Sorted Array",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Sum of Matrix After Queries",
    "frequency": "64.6",
    "acceptanceRate": "0.3122581518062508",
    "link": "https://leetcode.com/problems/sum-of-matrix-after-queries",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "id": "Sprinklr-Sum of Matrix After Queries",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Longest Valid Parentheses",
    "frequency": "64.6",
    "acceptanceRate": "0.36313103906145955",
    "link": "https://leetcode.com/problems/longest-valid-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Stack"
    ],
    "id": "Sprinklr-Longest Valid Parentheses",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Univalue Path",
    "frequency": "64.6",
    "acceptanceRate": "0.4262875699953458",
    "link": "https://leetcode.com/problems/longest-univalue-path",
    "topics": [
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "Sprinklr-Longest Univalue Path",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "64.6",
    "acceptanceRate": "0.45214888759813204",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "Sprinklr-LRU Cache",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "First Missing Positive",
    "frequency": "64.6",
    "acceptanceRate": "0.4108479047070338",
    "link": "https://leetcode.com/problems/first-missing-positive",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "id": "Sprinklr-First Missing Positive",
    "company": "Sprinklr",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Sum of Subarray Minimums",
    "frequency": "50.5",
    "acceptanceRate": "0.37623390043456567",
    "link": "https://leetcode.com/problems/sum-of-subarray-minimums",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "Sprinklr-Sum of Subarray Minimums",
    "company": "Sprinklr",
    "timeframe": "all"
  }
]