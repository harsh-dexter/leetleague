[
  {
    "difficulty": "Medium",
    "title": "Walls and Gates",
    "frequency": "100.0",
    "acceptanceRate": "0.6296791509568449",
    "link": "https://leetcode.com/problems/walls-and-gates",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "id": "DoorDash-Walls and Gates",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Longest Increasing Path in a Matrix",
    "frequency": "92.0",
    "acceptanceRate": "0.5534762586302827",
    "link": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort",
      "Memoization",
      "Matrix"
    ],
    "id": "DoorDash-Longest Increasing Path in a Matrix",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Binary Tree Maximum Path Sum",
    "frequency": "86.7",
    "acceptanceRate": "0.41224280010589104",
    "link": "https://leetcode.com/problems/binary-tree-maximum-path-sum",
    "topics": [
      "Dynamic Programming",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "DoorDash-Binary Tree Maximum Path Sum",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Koko Eating Bananas",
    "frequency": "86.7",
    "acceptanceRate": "0.49067301427387977",
    "link": "https://leetcode.com/problems/koko-eating-bananas",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "DoorDash-Koko Eating Bananas",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Design File System",
    "frequency": "86.7",
    "acceptanceRate": "0.6413755041392486",
    "link": "https://leetcode.com/problems/design-file-system",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "id": "DoorDash-Design File System",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Search Suggestions System",
    "frequency": "79.9",
    "acceptanceRate": "0.6505026464247127",
    "link": "https://leetcode.com/problems/search-suggestions-system",
    "topics": [
      "Array",
      "String",
      "Binary Search",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "DoorDash-Search Suggestions System",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Shortest Distance from All Buildings",
    "frequency": "70.3",
    "acceptanceRate": "0.4437276667084348",
    "link": "https://leetcode.com/problems/shortest-distance-from-all-buildings",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "id": "DoorDash-Shortest Distance from All Buildings",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Profit in Job Scheduling",
    "frequency": "70.3",
    "acceptanceRate": "0.5441726985180008",
    "link": "https://leetcode.com/problems/maximum-profit-in-job-scheduling",
    "topics": [
      "Array",
      "Binary Search",
      "Dynamic Programming",
      "Sorting"
    ],
    "id": "DoorDash-Maximum Profit in Job Scheduling",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Design In-Memory File System",
    "frequency": "70.3",
    "acceptanceRate": "0.4816948941663167",
    "link": "https://leetcode.com/problems/design-in-memory-file-system",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie",
      "Sorting"
    ],
    "id": "DoorDash-Design In-Memory File System",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Next Greater Element III",
    "frequency": "70.3",
    "acceptanceRate": "0.34586631403766466",
    "link": "https://leetcode.com/problems/next-greater-element-iii",
    "topics": [
      "Math",
      "Two Pointers",
      "String"
    ],
    "id": "DoorDash-Next Greater Element III",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Hard",
    "title": "Making A Large Island",
    "frequency": "70.3",
    "acceptanceRate": "0.5489046988177128",
    "link": "https://leetcode.com/problems/making-a-large-island",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "DoorDash-Making A Large Island",
    "company": "DoorDash",
    "timeframe": "30"
  },
  {
    "difficulty": "Medium",
    "title": "Single-Threaded CPU",
    "frequency": "72.7",
    "acceptanceRate": "0.4648191183347267",
    "link": "https://leetcode.com/problems/single-threaded-cpu",
    "topics": [
      "Array",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "DoorDash-Single-Threaded CPU",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "01 Matrix",
    "frequency": "45.4",
    "acceptanceRate": "0.5147651813305447",
    "link": "https://leetcode.com/problems/01-matrix",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Breadth-First Search",
      "Matrix"
    ],
    "id": "DoorDash-01 Matrix",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Largest Rectangle in Histogram",
    "frequency": "45.4",
    "acceptanceRate": "0.4737767587697204",
    "link": "https://leetcode.com/problems/largest-rectangle-in-histogram",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "DoorDash-Largest Rectangle in Histogram",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game",
    "frequency": "45.4",
    "acceptanceRate": "0.3947921593161437",
    "link": "https://leetcode.com/problems/jump-game",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "DoorDash-Jump Game",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule",
    "frequency": "45.4",
    "acceptanceRate": "0.49234347710196147",
    "link": "https://leetcode.com/problems/course-schedule",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "id": "DoorDash-Course Schedule",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule II",
    "frequency": "45.4",
    "acceptanceRate": "0.5342350291611208",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "id": "DoorDash-Course Schedule II",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Hard",
    "title": "Basic Calculator",
    "frequency": "45.4",
    "acceptanceRate": "0.45589558921827417",
    "link": "https://leetcode.com/problems/basic-calculator",
    "topics": [
      "Math",
      "String",
      "Stack",
      "Recursion"
    ],
    "id": "DoorDash-Basic Calculator",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "45.4",
    "acceptanceRate": "0.45214576213144547",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "DoorDash-LRU Cache",
    "company": "DoorDash",
    "timeframe": "90"
  },
  {
    "difficulty": "Medium",
    "title": "Count Nodes With the Highest Score",
    "frequency": "59.1",
    "acceptanceRate": "0.5126480395538692",
    "link": "https://leetcode.com/problems/count-nodes-with-the-highest-score",
    "topics": [
      "Array",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "DoorDash-Count Nodes With the Highest Score",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Number of Steps to Make Two Strings Anagram",
    "frequency": "56.3",
    "acceptanceRate": "0.8215204393310427",
    "link": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram",
    "topics": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "id": "DoorDash-Minimum Number of Steps to Make Two Strings Anagram",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Minimum Size Subarray Sum",
    "frequency": "52.9",
    "acceptanceRate": "0.49391032213026165",
    "link": "https://leetcode.com/problems/minimum-size-subarray-sum",
    "topics": [
      "Array",
      "Binary Search",
      "Sliding Window",
      "Prefix Sum"
    ],
    "id": "DoorDash-Minimum Size Subarray Sum",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Basic Calculator II",
    "frequency": "48.9",
    "acceptanceRate": "0.4581138691872612",
    "link": "https://leetcode.com/problems/basic-calculator-ii",
    "topics": [
      "Math",
      "String",
      "Stack"
    ],
    "id": "DoorDash-Basic Calculator II",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Serialize and Deserialize Binary Tree",
    "frequency": "43.6",
    "acceptanceRate": "0.5896943616903895",
    "link": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree",
    "topics": [
      "String",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Design",
      "Binary Tree"
    ],
    "id": "DoorDash-Serialize and Deserialize Binary Tree",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Word Search II",
    "frequency": "43.6",
    "acceptanceRate": "0.3732633211647155",
    "link": "https://leetcode.com/problems/word-search-ii",
    "topics": [
      "Array",
      "String",
      "Backtracking",
      "Trie",
      "Matrix"
    ],
    "id": "DoorDash-Word Search II",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Minimize Malware Spread",
    "frequency": "43.6",
    "acceptanceRate": "0.4244718413272332",
    "link": "https://leetcode.com/problems/minimize-malware-spread",
    "topics": [
      "Array",
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "id": "DoorDash-Minimize Malware Spread",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Sliding Window Median",
    "frequency": "43.6",
    "acceptanceRate": "0.38691979014997274",
    "link": "https://leetcode.com/problems/sliding-window-median",
    "topics": [
      "Array",
      "Hash Table",
      "Sliding Window",
      "Heap (Priority Queue)"
    ],
    "id": "DoorDash-Sliding Window Median",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Max Area of Island",
    "frequency": "43.6",
    "acceptanceRate": "0.7316417973813468",
    "link": "https://leetcode.com/problems/max-area-of-island",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "DoorDash-Max Area of Island",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "4Sum",
    "frequency": "43.6",
    "acceptanceRate": "0.38219027018726465",
    "link": "https://leetcode.com/problems/4sum",
    "topics": [
      "Array",
      "Two Pointers",
      "Sorting"
    ],
    "id": "DoorDash-4Sum",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Check if One String Swap Can Make Strings Equal",
    "frequency": "43.6",
    "acceptanceRate": "0.49453245772264176",
    "link": "https://leetcode.com/problems/check-if-one-string-swap-can-make-strings-equal",
    "topics": [
      "Hash Table",
      "String",
      "Counting"
    ],
    "id": "DoorDash-Check if One String Swap Can Make Strings Equal",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Most Profit Assigning Work",
    "frequency": "43.6",
    "acceptanceRate": "0.5593843602581683",
    "link": "https://leetcode.com/problems/most-profit-assigning-work",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Greedy",
      "Sorting"
    ],
    "id": "DoorDash-Most Profit Assigning Work",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Binary Tree Vertical Order Traversal",
    "frequency": "36.3",
    "acceptanceRate": "0.571412329907316",
    "link": "https://leetcode.com/problems/binary-tree-vertical-order-traversal",
    "topics": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Sorting",
      "Binary Tree"
    ],
    "id": "DoorDash-Binary Tree Vertical Order Traversal",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Sliding Window Maximum",
    "frequency": "36.3",
    "acceptanceRate": "0.47604171417820246",
    "link": "https://leetcode.com/problems/sliding-window-maximum",
    "topics": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "id": "DoorDash-Sliding Window Maximum",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Basic Calculator III",
    "frequency": "36.3",
    "acceptanceRate": "0.52469160116735",
    "link": "https://leetcode.com/problems/basic-calculator-iii",
    "topics": [
      "Math",
      "String",
      "Stack",
      "Recursion"
    ],
    "id": "DoorDash-Basic Calculator III",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "36.3",
    "acceptanceRate": "0.6231993887316181",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "DoorDash-Number of Islands",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Ways to Make a Fair Array",
    "frequency": "36.3",
    "acceptanceRate": "0.644989189340971",
    "link": "https://leetcode.com/problems/ways-to-make-a-fair-array",
    "topics": [
      "Array",
      "Prefix Sum"
    ],
    "id": "DoorDash-Ways to Make a Fair Array",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Common Subsequence",
    "frequency": "36.3",
    "acceptanceRate": "0.582494259379739",
    "link": "https://leetcode.com/problems/longest-common-subsequence",
    "topics": [
      "String",
      "Dynamic Programming"
    ],
    "id": "DoorDash-Longest Common Subsequence",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Find K Closest Elements",
    "frequency": "36.3",
    "acceptanceRate": "0.486686656754684",
    "link": "https://leetcode.com/problems/find-k-closest-elements",
    "topics": [
      "Array",
      "Two Pointers",
      "Binary Search",
      "Sliding Window",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "DoorDash-Find K Closest Elements",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Hard",
    "title": "Vertical Order Traversal of a Binary Tree",
    "frequency": "36.3",
    "acceptanceRate": "0.5133056725792462",
    "link": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree",
    "topics": [
      "Hash Table",
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Sorting",
      "Binary Tree"
    ],
    "id": "DoorDash-Vertical Order Traversal of a Binary Tree",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Buddy Strings",
    "frequency": "36.3",
    "acceptanceRate": "0.33643969856328565",
    "link": "https://leetcode.com/problems/buddy-strings",
    "topics": [
      "Hash Table",
      "String"
    ],
    "id": "DoorDash-Buddy Strings",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Easy",
    "title": "Find Nearest Point That Has the Same X or Y Coordinate",
    "frequency": "36.3",
    "acceptanceRate": "0.6943535233007477",
    "link": "https://leetcode.com/problems/find-nearest-point-that-has-the-same-x-or-y-coordinate",
    "topics": [
      "Array"
    ],
    "id": "DoorDash-Find Nearest Point That Has the Same X or Y Coordinate",
    "company": "DoorDash",
    "timeframe": "180"
  },
  {
    "difficulty": "Medium",
    "title": "Count Sub Islands",
    "frequency": "70.0",
    "acceptanceRate": "0.728263014007497",
    "link": "https://leetcode.com/problems/count-sub-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "DoorDash-Count Sub Islands",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Asteroid Collision",
    "frequency": "68.9",
    "acceptanceRate": "0.45500659848234903",
    "link": "https://leetcode.com/problems/asteroid-collision",
    "topics": [
      "Array",
      "Stack",
      "Simulation"
    ],
    "id": "DoorDash-Asteroid Collision",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Best Meeting Point",
    "frequency": "60.7",
    "acceptanceRate": "0.6125143892983315",
    "link": "https://leetcode.com/problems/best-meeting-point",
    "topics": [
      "Array",
      "Math",
      "Sorting",
      "Matrix"
    ],
    "id": "DoorDash-Best Meeting Point",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Implement Trie (Prefix Tree)",
    "frequency": "58.9",
    "acceptanceRate": "0.6793476261333812",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "id": "DoorDash-Implement Trie (Prefix Tree)",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Two Sum",
    "frequency": "58.9",
    "acceptanceRate": "0.5577699653967975",
    "link": "https://leetcode.com/problems/two-sum",
    "topics": [
      "Array",
      "Hash Table"
    ],
    "id": "DoorDash-Two Sum",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Task Scheduler",
    "frequency": "57.0",
    "acceptanceRate": "0.615391540870786",
    "link": "https://leetcode.com/problems/task-scheduler",
    "topics": [
      "Array",
      "Hash Table",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)",
      "Counting"
    ],
    "id": "DoorDash-Task Scheduler",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Number of Visible People in a Queue",
    "frequency": "49.4",
    "acceptanceRate": "0.7129656877170266",
    "link": "https://leetcode.com/problems/number-of-visible-people-in-a-queue",
    "topics": [
      "Array",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "DoorDash-Number of Visible People in a Queue",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Next Permutation",
    "frequency": "49.4",
    "acceptanceRate": "0.4305775328017951",
    "link": "https://leetcode.com/problems/next-permutation",
    "topics": [
      "Array",
      "Two Pointers"
    ],
    "id": "DoorDash-Next Permutation",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Count All Valid Pickup and Delivery Options",
    "frequency": "46.0",
    "acceptanceRate": "0.6487684827228887",
    "link": "https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options",
    "topics": [
      "Math",
      "Dynamic Programming",
      "Combinatorics"
    ],
    "id": "DoorDash-Count All Valid Pickup and Delivery Options",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Swim in Rising Water",
    "frequency": "46.0",
    "acceptanceRate": "0.6285262869935629",
    "link": "https://leetcode.com/problems/swim-in-rising-water",
    "topics": [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "id": "DoorDash-Swim in Rising Water",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Design Add and Search Words Data Structure",
    "frequency": "46.0",
    "acceptanceRate": "0.47066560985497075",
    "link": "https://leetcode.com/problems/design-add-and-search-words-data-structure",
    "topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie"
    ],
    "id": "DoorDash-Design Add and Search Words Data Structure",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Maximum Gap",
    "frequency": "41.8",
    "acceptanceRate": "0.49356723483502274",
    "link": "https://leetcode.com/problems/maximum-gap",
    "topics": [
      "Array",
      "Sorting",
      "Bucket Sort",
      "Radix Sort"
    ],
    "id": "DoorDash-Maximum Gap",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Sudoku Solver",
    "frequency": "41.8",
    "acceptanceRate": "0.6390861285730938",
    "link": "https://leetcode.com/problems/sudoku-solver",
    "topics": [
      "Array",
      "Hash Table",
      "Backtracking",
      "Matrix"
    ],
    "id": "DoorDash-Sudoku Solver",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Jump Game II",
    "frequency": "41.8",
    "acceptanceRate": "0.415032966531176",
    "link": "https://leetcode.com/problems/jump-game-ii",
    "topics": [
      "Array",
      "Dynamic Programming",
      "Greedy"
    ],
    "id": "DoorDash-Jump Game II",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Shortest Path to Get Food",
    "frequency": "36.5",
    "acceptanceRate": "0.5669343417278341",
    "link": "https://leetcode.com/problems/shortest-path-to-get-food",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "id": "DoorDash-Shortest Path to Get Food",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Find the Celebrity",
    "frequency": "36.5",
    "acceptanceRate": "0.48438403563355176",
    "link": "https://leetcode.com/problems/find-the-celebrity",
    "topics": [
      "Two Pointers",
      "Graph",
      "Interactive"
    ],
    "id": "DoorDash-Find the Celebrity",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Immediate Food Delivery II",
    "frequency": "36.5",
    "acceptanceRate": "0.5431590135558603",
    "link": "https://leetcode.com/problems/immediate-food-delivery-ii",
    "topics": [
      "Database"
    ],
    "id": "DoorDash-Immediate Food Delivery II",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Immediate Food Delivery I",
    "frequency": "36.5",
    "acceptanceRate": "0.8091076226842031",
    "link": "https://leetcode.com/problems/immediate-food-delivery-i",
    "topics": [
      "Database"
    ],
    "id": "DoorDash-Immediate Food Delivery I",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Analyze User Website Visit Pattern",
    "frequency": "36.5",
    "acceptanceRate": "0.4372699971913551",
    "link": "https://leetcode.com/problems/analyze-user-website-visit-pattern",
    "topics": [
      "Array",
      "Hash Table",
      "Sorting"
    ],
    "id": "DoorDash-Analyze User Website Visit Pattern",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Capacity To Ship Packages Within D Days",
    "frequency": "36.5",
    "acceptanceRate": "0.721177358490566",
    "link": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days",
    "topics": [
      "Array",
      "Binary Search"
    ],
    "id": "DoorDash-Capacity To Ship Packages Within D Days",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Task Scheduler II",
    "frequency": "29.1",
    "acceptanceRate": "0.5397256916203358",
    "link": "https://leetcode.com/problems/task-scheduler-ii",
    "topics": [
      "Array",
      "Hash Table",
      "Simulation"
    ],
    "id": "DoorDash-Task Scheduler II",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Path Sum II",
    "frequency": "29.1",
    "acceptanceRate": "0.6049772763926738",
    "link": "https://leetcode.com/problems/path-sum-ii",
    "topics": [
      "Backtracking",
      "Tree",
      "Depth-First Search",
      "Binary Tree"
    ],
    "id": "DoorDash-Path Sum II",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "LFU Cache",
    "frequency": "29.1",
    "acceptanceRate": "0.4660898637811462",
    "link": "https://leetcode.com/problems/lfu-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "DoorDash-LFU Cache",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Implement Trie II (Prefix Tree)",
    "frequency": "29.1",
    "acceptanceRate": "0.6308755998142511",
    "link": "https://leetcode.com/problems/implement-trie-ii-prefix-tree",
    "topics": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ],
    "id": "DoorDash-Implement Trie II (Prefix Tree)",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Counting Words With a Given Prefix",
    "frequency": "29.1",
    "acceptanceRate": "0.8452511492869518",
    "link": "https://leetcode.com/problems/counting-words-with-a-given-prefix",
    "topics": [
      "Array",
      "String",
      "String Matching"
    ],
    "id": "DoorDash-Counting Words With a Given Prefix",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Closed Islands",
    "frequency": "29.1",
    "acceptanceRate": "0.6670954007184992",
    "link": "https://leetcode.com/problems/number-of-closed-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "DoorDash-Number of Closed Islands",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Design Browser History",
    "frequency": "29.1",
    "acceptanceRate": "0.7774686768883133",
    "link": "https://leetcode.com/problems/design-browser-history",
    "topics": [
      "Array",
      "Linked List",
      "Stack",
      "Design",
      "Doubly-Linked List",
      "Data Stream"
    ],
    "id": "DoorDash-Design Browser History",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Group Anagrams",
    "frequency": "29.1",
    "acceptanceRate": "0.7092882545499255",
    "link": "https://leetcode.com/problems/group-anagrams",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Sorting"
    ],
    "id": "DoorDash-Group Anagrams",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Interval List Intersections",
    "frequency": "29.1",
    "acceptanceRate": "0.7267720917127461",
    "link": "https://leetcode.com/problems/interval-list-intersections",
    "topics": [
      "Array",
      "Two Pointers",
      "Line Sweep"
    ],
    "id": "DoorDash-Interval List Intersections",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Top K Frequent Elements",
    "frequency": "29.1",
    "acceptanceRate": "0.6456596310666731",
    "link": "https://leetcode.com/problems/top-k-frequent-elements",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Heap (Priority Queue)",
      "Bucket Sort",
      "Counting",
      "Quickselect"
    ],
    "id": "DoorDash-Top K Frequent Elements",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Subsequence With the Minimum Score",
    "frequency": "29.1",
    "acceptanceRate": "0.326135438422599",
    "link": "https://leetcode.com/problems/subsequence-with-the-minimum-score",
    "topics": [
      "Two Pointers",
      "String",
      "Binary Search"
    ],
    "id": "DoorDash-Subsequence With the Minimum Score",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Mice and Cheese",
    "frequency": "29.1",
    "acceptanceRate": "0.4730146436613456",
    "link": "https://leetcode.com/problems/mice-and-cheese",
    "topics": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "DoorDash-Mice and Cheese",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Path With Maximum Minimum Value",
    "frequency": "29.1",
    "acceptanceRate": "0.5412731529408017",
    "link": "https://leetcode.com/problems/path-with-maximum-minimum-value",
    "topics": [
      "Array",
      "Binary Search",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Heap (Priority Queue)",
      "Matrix"
    ],
    "id": "DoorDash-Path With Maximum Minimum Value",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Performance of a Team",
    "frequency": "29.1",
    "acceptanceRate": "0.4751514702683188",
    "link": "https://leetcode.com/problems/maximum-performance-of-a-team",
    "topics": [
      "Array",
      "Greedy",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "DoorDash-Maximum Performance of a Team",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Valid Sudoku",
    "frequency": "29.1",
    "acceptanceRate": "0.6227676961475801",
    "link": "https://leetcode.com/problems/valid-sudoku",
    "topics": [
      "Array",
      "Hash Table",
      "Matrix"
    ],
    "id": "DoorDash-Valid Sudoku",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Employee Free Time",
    "frequency": "29.1",
    "acceptanceRate": "0.7259759595862569",
    "link": "https://leetcode.com/problems/employee-free-time",
    "topics": [
      "Array",
      "Line Sweep",
      "Sorting",
      "Heap (Priority Queue)"
    ],
    "id": "DoorDash-Employee Free Time",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Diameter of N-Ary Tree",
    "frequency": "29.1",
    "acceptanceRate": "0.7519435365202558",
    "link": "https://leetcode.com/problems/diameter-of-n-ary-tree",
    "topics": [
      "Tree",
      "Depth-First Search"
    ],
    "id": "DoorDash-Diameter of N-Ary Tree",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Maximum Path Quality of a Graph",
    "frequency": "29.1",
    "acceptanceRate": "0.596989256918232",
    "link": "https://leetcode.com/problems/maximum-path-quality-of-a-graph",
    "topics": [
      "Array",
      "Backtracking",
      "Graph"
    ],
    "id": "DoorDash-Maximum Path Quality of a Graph",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Provinces",
    "frequency": "29.1",
    "acceptanceRate": "0.686550180360498",
    "link": "https://leetcode.com/problems/number-of-provinces",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "id": "DoorDash-Number of Provinces",
    "company": "DoorDash",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Design Search Autocomplete System",
    "frequency": "24.1",
    "acceptanceRate": "0.4940635941634056",
    "link": "https://leetcode.com/problems/design-search-autocomplete-system",
    "topics": [
      "String",
      "Depth-First Search",
      "Design",
      "Trie",
      "Sorting",
      "Heap (Priority Queue)",
      "Data Stream"
    ],
    "id": "DoorDash-Design Search Autocomplete System",
    "company": "DoorDash",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Longest Palindromic Substring",
    "frequency": "24.1",
    "acceptanceRate": "0.3584610347381002",
    "link": "https://leetcode.com/problems/longest-palindromic-substring",
    "topics": [
      "Two Pointers",
      "String",
      "Dynamic Programming"
    ],
    "id": "DoorDash-Longest Palindromic Substring",
    "company": "DoorDash",
    "timeframe": "all"
  },
  {
    "difficulty": "Hard",
    "title": "Similar String Groups",
    "frequency": "24.1",
    "acceptanceRate": "0.5538086793196406",
    "link": "https://leetcode.com/problems/similar-string-groups",
    "topics": [
      "Array",
      "Hash Table",
      "String",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find"
    ],
    "id": "DoorDash-Similar String Groups",
    "company": "DoorDash",
    "timeframe": "all"
  },
  {
    "difficulty": "Hard",
    "title": "Merge k Sorted Lists",
    "frequency": "24.1",
    "acceptanceRate": "0.5677420052593406",
    "link": "https://leetcode.com/problems/merge-k-sorted-lists",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Heap (Priority Queue)",
      "Merge Sort"
    ],
    "id": "DoorDash-Merge k Sorted Lists",
    "company": "DoorDash",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Insert Delete GetRandom O(1)",
    "frequency": "24.1",
    "acceptanceRate": "0.54991878709743",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "topics": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ],
    "id": "DoorDash-Insert Delete GetRandom O(1)",
    "company": "DoorDash",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Range Sum Query 2D - Immutable",
    "frequency": "24.1",
    "acceptanceRate": "0.5652765632997782",
    "link": "https://leetcode.com/problems/range-sum-query-2d-immutable",
    "topics": [
      "Array",
      "Design",
      "Matrix",
      "Prefix Sum"
    ],
    "id": "DoorDash-Range Sum Query 2D - Immutable",
    "company": "DoorDash",
    "timeframe": "all"
  },
  {
    "difficulty": "Medium",
    "title": "Brace Expansion",
    "frequency": "24.1",
    "acceptanceRate": "0.6672212978369384",
    "link": "https://leetcode.com/problems/brace-expansion",
    "topics": [
      "String",
      "Backtracking",
      "Breadth-First Search"
    ],
    "id": "DoorDash-Brace Expansion",
    "company": "DoorDash",
    "timeframe": "all"
  },
  {
    "difficulty": "Hard",
    "title": "K-Similar Strings",
    "frequency": "24.1",
    "acceptanceRate": "0.400472407129053",
    "link": "https://leetcode.com/problems/k-similar-strings",
    "topics": [
      "String",
      "Breadth-First Search"
    ],
    "id": "DoorDash-K-Similar Strings",
    "company": "DoorDash",
    "timeframe": "all"
  }
]