[
  {
    "difficulty": "Easy",
    "title": "Majority Element",
    "frequency": "100.0",
    "acceptanceRate": "0.6574032703498719",
    "link": "https://leetcode.com/problems/majority-element",
    "topics": [
      "Array",
      "Hash Table",
      "Divide and Conquer",
      "Sorting",
      "Counting"
    ],
    "id": "Zenefits-Majority Element",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Median of Two Sorted Arrays",
    "frequency": "88.3",
    "acceptanceRate": "0.4381476917231254",
    "link": "https://leetcode.com/problems/median-of-two-sorted-arrays",
    "topics": [
      "Array",
      "Binary Search",
      "Divide and Conquer"
    ],
    "id": "Zenefits-Median of Two Sorted Arrays",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Excel Sheet Column Title",
    "frequency": "88.3",
    "acceptanceRate": "0.43570576633851",
    "link": "https://leetcode.com/problems/excel-sheet-column-title",
    "topics": [
      "Math",
      "String"
    ],
    "id": "Zenefits-Excel Sheet Column Title",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Shortest Distance from All Buildings",
    "frequency": "88.3",
    "acceptanceRate": "0.4437281808440773",
    "link": "https://leetcode.com/problems/shortest-distance-from-all-buildings",
    "topics": [
      "Array",
      "Breadth-First Search",
      "Matrix"
    ],
    "id": "Zenefits-Shortest Distance from All Buildings",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Flatten 2D Vector",
    "frequency": "88.3",
    "acceptanceRate": "0.5013561180399766",
    "link": "https://leetcode.com/problems/flatten-2d-vector",
    "topics": [
      "Array",
      "Two Pointers",
      "Design",
      "Iterator"
    ],
    "id": "Zenefits-Flatten 2D Vector",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Valid Palindrome",
    "frequency": "88.3",
    "acceptanceRate": "0.5096370029735856",
    "link": "https://leetcode.com/problems/valid-palindrome",
    "topics": [
      "Two Pointers",
      "String"
    ],
    "id": "Zenefits-Valid Palindrome",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "N-Queens II",
    "frequency": "88.3",
    "acceptanceRate": "0.7672955295381376",
    "link": "https://leetcode.com/problems/n-queens-ii",
    "topics": [
      "Backtracking"
    ],
    "id": "Zenefits-N-Queens II",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Sliding Window Maximum",
    "frequency": "88.3",
    "acceptanceRate": "0.47603991992639727",
    "link": "https://leetcode.com/problems/sliding-window-maximum",
    "topics": [
      "Array",
      "Queue",
      "Sliding Window",
      "Heap (Priority Queue)",
      "Monotonic Queue"
    ],
    "id": "Zenefits-Sliding Window Maximum",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Convert Sorted List to Binary Search Tree",
    "frequency": "88.3",
    "acceptanceRate": "0.6445924686121641",
    "link": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree",
    "topics": [
      "Linked List",
      "Divide and Conquer",
      "Tree",
      "Binary Search Tree",
      "Binary Tree"
    ],
    "id": "Zenefits-Convert Sorted List to Binary Search Tree",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Hard",
    "title": "Trapping Rain Water",
    "frequency": "88.3",
    "acceptanceRate": "0.6510223474767689",
    "link": "https://leetcode.com/problems/trapping-rain-water",
    "topics": [
      "Array",
      "Two Pointers",
      "Dynamic Programming",
      "Stack",
      "Monotonic Stack"
    ],
    "id": "Zenefits-Trapping Rain Water",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Majority Element II",
    "frequency": "88.3",
    "acceptanceRate": "0.5438049308651387",
    "link": "https://leetcode.com/problems/majority-element-ii",
    "topics": [
      "Array",
      "Hash Table",
      "Sorting",
      "Counting"
    ],
    "id": "Zenefits-Majority Element II",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Graph Valid Tree",
    "frequency": "88.3",
    "acceptanceRate": "0.49334299169933016",
    "link": "https://leetcode.com/problems/graph-valid-tree",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Graph"
    ],
    "id": "Zenefits-Graph Valid Tree",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Min Stack",
    "frequency": "88.3",
    "acceptanceRate": "0.5644529500614766",
    "link": "https://leetcode.com/problems/min-stack",
    "topics": [
      "Stack",
      "Design"
    ],
    "id": "Zenefits-Min Stack",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Generate Parentheses",
    "frequency": "88.3",
    "acceptanceRate": "0.7713302975237624",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "topics": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ],
    "id": "Zenefits-Generate Parentheses",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Valid Parentheses",
    "frequency": "88.3",
    "acceptanceRate": "0.42322934576385385",
    "link": "https://leetcode.com/problems/valid-parentheses",
    "topics": [
      "String",
      "Stack"
    ],
    "id": "Zenefits-Valid Parentheses",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule II",
    "frequency": "88.3",
    "acceptanceRate": "0.5342362900878632",
    "link": "https://leetcode.com/problems/course-schedule-ii",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "id": "Zenefits-Course Schedule II",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "LRU Cache",
    "frequency": "88.3",
    "acceptanceRate": "0.45215188221088953",
    "link": "https://leetcode.com/problems/lru-cache",
    "topics": [
      "Hash Table",
      "Linked List",
      "Design",
      "Doubly-Linked List"
    ],
    "id": "Zenefits-LRU Cache",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Course Schedule",
    "frequency": "88.3",
    "acceptanceRate": "0.4923463473813975",
    "link": "https://leetcode.com/problems/course-schedule",
    "topics": [
      "Depth-First Search",
      "Breadth-First Search",
      "Graph",
      "Topological Sort"
    ],
    "id": "Zenefits-Course Schedule",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Easy",
    "title": "Reverse Linked List",
    "frequency": "88.3",
    "acceptanceRate": "0.7920675422832083",
    "link": "https://leetcode.com/problems/reverse-linked-list",
    "topics": [
      "Linked List",
      "Recursion"
    ],
    "id": "Zenefits-Reverse Linked List",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Number of Islands",
    "frequency": "88.3",
    "acceptanceRate": "0.6232027311561552",
    "link": "https://leetcode.com/problems/number-of-islands",
    "topics": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ],
    "id": "Zenefits-Number of Islands",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  },
  {
    "difficulty": "Medium",
    "title": "Verify Preorder Sequence in Binary Search Tree",
    "frequency": "88.3",
    "acceptanceRate": "0.5131903339051795",
    "link": "https://leetcode.com/problems/verify-preorder-sequence-in-binary-search-tree",
    "topics": [
      "Array",
      "Stack",
      "Tree",
      "Binary Search Tree",
      "Recursion",
      "Monotonic Stack",
      "Binary Tree"
    ],
    "id": "Zenefits-Verify Preorder Sequence in Binary Search Tree",
    "company": "Zenefits",
    "timeframe": "more_than_180"
  }
]